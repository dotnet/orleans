<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Http.Formatting</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.HttpContentCollectionExtensions">
      <summary> Extension methods to provide convenience methods for finding <see cref="T:System.Net.Http.HttpContent" /> items   within a &lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt; collection. </summary>
    </member>
    <member name="M:System.Net.Http.HttpContentCollectionExtensions.FindAllContentType(System.Collections.Generic.IEnumerable{System.Net.Http.HttpContent},System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Returns all instances of <see cref="T:System.Net.Http.HttpContent" /> in a sequence that has a <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> header field with a <see cref="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType" /> property equal to the provided contentType. </summary>
      <returns>null if source is empty or if no element matches; otherwise the first <see cref="T:System.Net.Http.HttpContent" /> in  the sequence with a matching media type.</returns>
      <param name="contents">The content to evaluate</param>
      <param name="contentType">The media type to look for.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentCollectionExtensions.FindAllContentType(System.Collections.Generic.IEnumerable{System.Net.Http.HttpContent},System.String)">
      <summary> Returns all instances of <see cref="T:System.Net.Http.HttpContent" /> in a sequence that has a <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> header field with a <see cref="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType" /> property equal to the provided contentType. </summary>
      <returns>null if source is empty or if no element matches; otherwise the first <see cref="T:System.Net.Http.HttpContent" /> in  the sequence with a matching media type.</returns>
      <param name="contents">The content to evaluate</param>
      <param name="contentType">The media type to look for.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentCollectionExtensions.FirstDispositionName(System.Collections.Generic.IEnumerable{System.Net.Http.HttpContent},System.String)">
      <summary> Returns the first <see cref="T:System.Net.Http.HttpContent" /> in a sequence that has a <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> header field with a <see cref="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Name" /> property equal to dispositionName. </summary>
      <returns>The first <see cref="T:System.Net.Http.HttpContent" /> in the sequence with a matching disposition name.</returns>
      <param name="contents">The contents to evaluate</param>
      <param name="dispositionName">The disposition name to look for.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentCollectionExtensions.FirstDispositionNameOrDefault(System.Collections.Generic.IEnumerable{System.Net.Http.HttpContent},System.String)">
      <summary> Returns the first <see cref="T:System.Net.Http.HttpContent" /> in a sequence that has a <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> header field with a <see cref="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Name" /> property equal to dispositionName. </summary>
      <returns>null if source is empty or if no element matches; otherwise the first <see cref="T:System.Net.Http.HttpContent" /> in  the sequence with a matching disposition name.</returns>
      <param name="contents">The contents to evaluate</param>
      <param name="dispositionName">The disposition name to look for.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentCollectionExtensions.FirstDispositionType(System.Collections.Generic.IEnumerable{System.Net.Http.HttpContent},System.String)">
      <summary> Returns the first <see cref="T:System.Net.Http.HttpContent" /> in a sequence that has a <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> header field with a <see cref="P:System.Net.Http.Headers.ContentDispositionHeaderValue.DispositionType" /> property equal to dispositionType. </summary>
      <returns>The first <see cref="T:System.Net.Http.HttpContent" /> in the sequence with a matching disposition type.</returns>
      <param name="contents">The contents to evaluate</param>
      <param name="dispositionType">The disposition type to look for.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentCollectionExtensions.FirstDispositionTypeOrDefault(System.Collections.Generic.IEnumerable{System.Net.Http.HttpContent},System.String)">
      <summary> Returns the first <see cref="T:System.Net.Http.HttpContent" /> in a sequence that has a <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> header field with a <see cref="P:System.Net.Http.Headers.ContentDispositionHeaderValue.DispositionType" /> property equal to dispositionType. </summary>
      <returns>null if source is empty or if no element matches; otherwise the first <see cref="T:System.Net.Http.HttpContent" /> in  the sequence with a matching disposition type.</returns>
      <param name="contents">The contents to evaluate</param>
      <param name="dispositionType">The disposition type to look for.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentCollectionExtensions.FirstStart(System.Collections.Generic.IEnumerable{System.Net.Http.HttpContent},System.String)">
      <summary> Returns the start multipart body part. The start is used to identify the main body  in multipart/related content (see RFC 2387). </summary>
      <returns>The first <see cref="T:System.Net.Http.HttpContent" /> in the sequence with a matching value.</returns>
      <param name="contents">The contents to evaluate.</param>
      <param name="start">The start value to look for.  A match is found if a <see cref="T:System.Net.Http.HttpContent" /> has a Content-ID  header field with the given value.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentCollectionExtensions.FirstStartOrDefault(System.Collections.Generic.IEnumerable{System.Net.Http.HttpContent},System.String)">
      <summary> Returns the first <see cref="T:System.Net.Http.HttpContent" /> in a sequence that has a <see cref="T:System.Net.Http.Headers.ContentDispositionHeaderValue" /> header field parameter equal to start. This parameter is typically used in connection with multipart/related content (see RFC 2387). </summary>
      <returns>null if source is empty or if no element matches; otherwise the first <see cref="T:System.Net.Http.HttpContent" /> in  the sequence with a matching value.</returns>
      <param name="contents">The contents to evaluate.</param>
      <param name="start">The start value to look for. A match is found if a <see cref="T:System.Net.Http.HttpContent" /> has a Content-ID  header field with the given value.</param>
    </member>
    <member name="T:System.Net.Http.HttpContentExtensions">
      <summary> Extension methods to allow strongly typed objects to be read from <see cref="T:System.Net.Http.HttpContent" /> instances. </summary>
    </member>
    <member name="M:System.Net.Http.HttpContentExtensions.ReadAsAsync``1(System.Void)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Net.Http.HttpContentExtensions.ReadAsAsync(System.Void,System.Object)"></member>
    <member name="M:System.Net.Http.HttpContentExtensions.ReadAsAsync(System.Void,System.Object,System.Net.Http.HttpContent)"></member>
    <member name="M:System.Net.Http.HttpContentExtensions.ReadAsAsync(System.Void,System.Object,System.Net.Http.HttpContent,System.Type,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})"></member>
    <member name="M:System.Net.Http.HttpContentExtensions.ReadAsAsync``1(System.Void,``0)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Net.Http.HttpContentExtensions.ReadAsAsync``1(System.Void,``0,System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Net.Http.HttpContentExtensions.ReadAsOrDefaultAsync``1(System.Void)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Net.Http.HttpContentExtensions.ReadAsOrDefaultAsync(System.Void,System.Object)"></member>
    <member name="M:System.Net.Http.HttpContentExtensions.ReadAsOrDefaultAsync(System.Void,System.Object,System.Net.Http.HttpContent)"></member>
    <member name="M:System.Net.Http.HttpContentExtensions.ReadAsOrDefaultAsync(System.Void,System.Object,System.Net.Http.HttpContent,System.Type,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})"></member>
    <member name="M:System.Net.Http.HttpContentExtensions.ReadAsOrDefaultAsync``1(System.Void,``0)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Net.Http.HttpContentExtensions.ReadAsOrDefaultAsync``1(System.Void,``0,System.Net.Http.HttpContent,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:System.Net.Http.HttpContentMessageExtensions">
      <summary> Extension methods to read <see cref="T:System.Net.Http.HttpRequestMessage" /> and <see cref="T:System.Net.Http.HttpResponseMessage" /> entities from <see cref="T:System.Net.Http.HttpContent" /> instances. </summary>
    </member>
    <member name="M:System.Net.Http.HttpContentMessageExtensions.IsHttpRequestMessageContent(System.Net.Http.HttpContent)">
      <summary> Determines whether the specified content is HTTP request message content. </summary>
      <returns>true if the specified content is HTTP message content; otherwise, false. </returns>
      <param name="content">The content.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentMessageExtensions.IsHttpResponseMessageContent(System.Net.Http.HttpContent)">
      <summary> Determines whether the specified content is HTTP response message content. </summary>
      <returns>true if the specified content is HTTP message content; otherwise, false. </returns>
      <param name="content">The content.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(System.Void)"></member>
    <member name="M:System.Net.Http.HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(System.Void,System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpContentMessageExtensions.ReadAsHttpRequestMessageAsync(System.Void,System.Net.Http.HttpRequestMessage,System.Net.Http.HttpContent)"></member>
    <member name="M:System.Net.Http.HttpContentMessageExtensions.ReadAsHttpResponseMessageAsync(System.Void)"></member>
    <member name="M:System.Net.Http.HttpContentMessageExtensions.ReadAsHttpResponseMessageAsync(System.Void,System.Net.Http.HttpResponseMessage)"></member>
    <member name="T:System.Net.Http.HttpContentMultipartExtensions">
      <summary> Extension methods to read MIME multipart entities from <see cref="T:System.Net.Http.HttpContent" /> instances. </summary>
    </member>
    <member name="M:System.Net.Http.HttpContentMultipartExtensions.IsMimeMultipartContent(System.Net.Http.HttpContent)">
      <summary> Determines whether the specified content is MIME multipart content. </summary>
      <returns>true if the specified content is MIME multipart content; otherwise, false. </returns>
      <param name="content">The content.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentMultipartExtensions.IsMimeMultipartContent(System.Net.Http.HttpContent,System.String)">
      <summary> Determines whether the specified content is MIME multipart content with the  specified subtype. For example, the subtype mixed would match content with a content type of multipart/mixed.  </summary>
      <returns>true if the specified content is MIME multipart content with the specified subtype; otherwise, false. </returns>
      <param name="content">The content.</param>
      <param name="subtype">The MIME multipart subtype to match.</param>
    </member>
    <member name="M:System.Net.Http.HttpContentMultipartExtensions.ReadAsMultipartAsync(System.Void)"></member>
    <member name="M:System.Net.Http.HttpContentMultipartExtensions.ReadAsMultipartAsync(System.Void,System.Collections.Generic.IEnumerable{System.Net.Http.HttpContent})"></member>
    <member name="M:System.Net.Http.HttpContentMultipartExtensions.ReadAsMultipartAsync(System.Void,System.Collections.Generic.IEnumerable{System.Net.Http.HttpContent},System.Net.Http.HttpContent)"></member>
    <member name="T:System.Net.Http.HttpMessageContent">
      <summary> Derived <see cref="T:System.Net.Http.HttpContent" /> class which can encapsulate an <see cref="P:System.Net.Http.HttpMessageContent.HttpResponseMessage" /> or an <see cref="P:System.Net.Http.HttpMessageContent.HttpRequestMessage" /> as an entity with media type "application/http". </summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageContent.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.HttpMessageContent" /> class encapsulating an <see cref="P:System.Net.Http.HttpMessageContent.HttpRequestMessage" />. </summary>
      <param name="httpRequest">The <see cref="P:System.Net.Http.HttpMessageContent.HttpResponseMessage" /> instance to encapsulate.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageContent.#ctor(System.Net.Http.HttpResponseMessage)">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.HttpMessageContent" /> class encapsulating an <see cref="P:System.Net.Http.HttpMessageContent.HttpResponseMessage" />. </summary>
      <param name="httpResponse">The <see cref="P:System.Net.Http.HttpMessageContent.HttpResponseMessage" /> instance to encapsulate.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageContent.Dispose(System.Boolean)">
      <summary> Releases unmanaged and - optionally - managed resources </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Net.Http.HttpMessageContent.HttpRequestMessage">
      <summary> Gets the HTTP request message. </summary>
    </member>
    <member name="P:System.Net.Http.HttpMessageContent.HttpResponseMessage">
      <summary> Gets the HTTP response message. </summary>
    </member>
    <member name="M:System.Net.Http.HttpMessageContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary> Asynchronously serializes the object's content to the given stream. </summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> instance that is asynchronously serializing the object's content.</returns>
      <param name="stream">The <see cref="T:System.IO.Stream" /> to which to write.</param>
      <param name="context">The associated <see cref="T:System.Net.TransportContext" />.</param>
    </member>
    <member name="M:System.Net.Http.HttpMessageContent.TryComputeLength(System.Int64@)">
      <summary> Computes the length of the stream if possible. </summary>
      <returns>true if the length has been computed; otherwise false.</returns>
      <param name="length">The computed length of the stream.</param>
    </member>
    <member name="T:System.Net.Http.HttpRequestMessage`1">
      <summary> Derived <see cref="T:System.Net.Http.HttpRequestMessage" /> class that contains a strongly typed object as its content. </summary>
      <typeparam name="T">The type of object it contains as its content.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage`1.#ctor">
      <summary> Initializes a new instance of the &lt;see cref="T:System.Net.Http.HttpRequestMessage`1" /&gt; class. </summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage`1.#ctor(`0)">
      <summary> Initializes a new instance of the &lt;see cref="T:System.Net.Http.HttpRequestMessage`1" /&gt; class. </summary>
      <param name="value">The object to use as the content of this new instance.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage`1.#ctor(`0,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary> Initializes a new instance of the &lt;see cref="T:System.Net.Http.HttpRequestMessage`1" /&gt; class. </summary>
      <param name="value">The object to use as the content of this new instance.</param>
      <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances to use for serialization.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage`1.#ctor(`0,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Initializes a new instance of the &lt;see cref="T:System.Net.Http.HttpRequestMessage`1" /&gt; class. </summary>
      <param name="value">The object to use as the content of this new instance.</param>
      <param name="mediaType">The media type to use to write the request.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage`1.#ctor(`0,System.Net.Http.Headers.MediaTypeHeaderValue,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary> Initializes a new instance of the &lt;see cref="T:System.Net.Http.HttpRequestMessage`1" /&gt; class. </summary>
      <param name="value">The object to use as the content of this new instance.</param>
      <param name="mediaType">The media type to use to write the request.</param>
      <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances to use for serialization.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage`1.#ctor(`0,System.Net.Http.Headers.MediaTypeHeaderValue,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterSelector)">
      <summary> Initializes a new instance of the &lt;see cref="T:System.Net.Http.HttpRequestMessage`1" /&gt; class. </summary>
      <param name="value">The object to use as the content of this new instance.</param>
      <param name="mediaType">The media type to use to write the request.</param>
      <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances to use for serialization.</param>
      <param name="formatterSelector">The <see cref="T:System.Net.Http.Formatting.IFormatterSelector" /> to use to select the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage`1.#ctor(`0,System.Net.Http.HttpMethod,System.Uri,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary> Initializes a new instance of the &lt;see cref="T:System.Net.Http.HttpRequestMessage`1" /&gt; class. </summary>
      <param name="value">The object to use as the content of this new instance.</param>
      <param name="method">The <see cref="T:System.Net.Http.HttpMethod" /> for this request.</param>
      <param name="requestUri">The <see cref="T:System.Uri" /> to use for this request.</param>
      <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances to use for serialization.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessage`1.#ctor(`0,System.String)">
      <summary> Initializes a new instance of the &lt;see cref="T:System.Net.Http.HttpRequestMessage`1" /&gt; class. </summary>
      <param name="value">The object to use as the content of this new instance.</param>
      <param name="mediaType">The media type to use to write the request.</param>
    </member>
    <member name="P:System.Net.Http.HttpRequestMessage`1.Content">
      <summary> Gets or sets the <see cref="T:System.Net.Http.ObjectContent" /> that manages the object value for this <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
    </member>
    <member name="T:System.Net.Http.HttpRequestMessageExtensions">
      <summary> Extension methods for <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateContent(System.Net.Http.HttpRequestMessage,System.Type,System.Object)">
      <summary> Creates a new <see cref="T:System.Net.Http.ObjectContent" /> instance associated with the given <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
      <param name="request">The existing <see cref="T:System.Net.Http.HttpRequestMessage" /></param>
      <param name="type">The type of the value.</param>
      <param name="value">The value for the new <see cref="T:System.Net.Http.ObjectContent" /></param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateContent(System.Net.Http.HttpRequestMessage,System.Type,System.Object,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterSelector)">
      <summary> Creates a new <see cref="T:System.Net.Http.ObjectContent" /> instance associated with the given <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
      <param name="request">The <see cref="T:System.Net.Http.HttpRequestMessage" />.</param>
      <param name="type">The type of the value.</param>
      <param name="value">The value for the new <see cref="T:System.Net.Http.ObjectContent" /></param>
      <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances to use.</param>
      <param name="formatterSelector">The <see cref="T:System.Net.Http.Formatting.IFormatterSelector" /> to select the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /></param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateContent(System.Net.Http.HttpRequestMessage,System.Type,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterSelector)">
      <summary> Creates a new <see cref="T:System.Net.Http.ObjectContent" /> instance associated with the given <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
      <param name="request">The <see cref="T:System.Net.Http.HttpRequestMessage" />.</param>
      <param name="type">The type of the value.</param>
      <param name="value">The value for the new <see cref="T:System.Net.Http.ObjectContent" /></param>
      <param name="mediaType">The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> to set as the request media type.</param>
      <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances to use.</param>
      <param name="formatterSelector">The <see cref="T:System.Net.Http.Formatting.IFormatterSelector" /> to select the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /></param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateContent``1(System.Net.Http.HttpRequestMessage,``0)">
      <summary> Creates a new <see cref="T:System.Net.Http.ObjectContent" /> instance associated with the given <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
      <param name="request">The existing <see cref="T:System.Net.Http.HttpRequestMessage" /></param>
      <param name="value">The value for the new <see cref="T:System.Net.Http.ObjectContent" /></param>
      <typeparam name="T">The type of value for the new <see cref="T:System.Net.Http.ObjectContent" />.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateContent``1(System.Net.Http.HttpRequestMessage,``0,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterSelector)">
      <summary> Creates a new <see cref="T:System.Net.Http.ObjectContent" /> instance associated with the given <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
      <param name="request">The <see cref="T:System.Net.Http.HttpRequestMessage" />.</param>
      <param name="value">The value for the new <see cref="T:System.Net.Http.ObjectContent" /></param>
      <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances to use.</param>
      <param name="formatterSelector">The <see cref="T:System.Net.Http.Formatting.IFormatterSelector" /> to select the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /></param>
      <typeparam name="T">The type of the value.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateContent``1(System.Net.Http.HttpRequestMessage,``0,System.Net.Http.Headers.MediaTypeHeaderValue,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterSelector)">
      <summary> Creates a new <see cref="T:System.Net.Http.ObjectContent" /> instance associated with the given <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
      <param name="request">The <see cref="T:System.Net.Http.HttpRequestMessage" />.</param>
      <param name="value">The value for the new <see cref="T:System.Net.Http.ObjectContent" /></param>
      <param name="mediaType">The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> to set as the request media type.</param>
      <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances to use.</param>
      <param name="formatterSelector">The <see cref="T:System.Net.Http.Formatting.IFormatterSelector" /> to select the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /></param>
      <typeparam name="T">The type of the value.</typeparam>
    </member>
    <member name="T:System.Net.Http.HttpResponseMessage`1">
      <summary> Derived <see cref="T:System.Net.Http.HttpResponseMessage" /> class that contains a strongly typed object as its content. </summary>
      <typeparam name="T">The type of object instances of this class will contain as its content.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage`1.#ctor(System.Net.HttpStatusCode)">
      <summary> Initializes a new instance of the &lt;see cref="T:System.Net.Http.HttpResponseMessage`1" /&gt; class. </summary>
      <param name="statusCode">The <see cref="T:System.Net.HttpStatusCode" /> to use for this response.</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage`1.#ctor(`0)">
      <summary> Initializes a new instance of the &lt;see cref="T:System.Net.Http.HttpResponseMessage`1" /&gt; class. </summary>
      <param name="value">The value to use as the content of this new instance.</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage`1.#ctor(`0,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary> Initializes a new instance of the &lt;see cref="T:System.Net.Http.HttpResponseMessage`1" /&gt; class. </summary>
      <param name="value">The value to use as the content of this new instance.</param>
      <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances  to use for serialization.</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage`1.#ctor(`0,System.Net.Http.Formatting.IFormatterSelector)">
      <summary> Initializes a new instance of the &lt;see cref="T:System.Net.Http.HttpResponseMessage`1" /&gt; class. </summary>
      <param name="value">The value to use as the content of this new instance.</param>
      <param name="formatterSelector">The <see cref="T:System.Net.Http.Formatting.FormatterSelector" /> to use to select the appropriate <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage`1.#ctor(`0,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Initializes a new instance of the &lt;see cref="T:System.Net.Http.HttpResponseMessage`1" /&gt; class. </summary>
      <param name="value">The value to use as the content of this new instance.</param>
      <param name="mediaType">The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> to use to serialize the response.</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage`1.#ctor(`0,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterSelector)">
      <summary> Initializes a new instance of the &lt;see cref="T:System.Net.Http.HttpResponseMessage`1" /&gt; class. </summary>
      <param name="value">The value to use as the content of this new instance.</param>
      <param name="request">The original <see cref="T:System.Net.Http.HttpRequestMessage" />.</param>
      <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances  to use for serialization.</param>
      <param name="formatterSelector">The <see cref="T:System.Net.Http.Formatting.FormatterSelector" /> to use to select the appropriate <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage`1.#ctor(`0,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterSelector)">
      <summary> Initializes a new instance of the &lt;see cref="T:System.Net.Http.HttpResponseMessage`1" /&gt; class. </summary>
      <param name="value">The value to use as the content of this new instance.</param>
      <param name="request">The original <see cref="T:System.Net.Http.HttpRequestMessage" />.</param>
      <param name="mediaType">The media type to use.</param>
      <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances  to use for serialization.</param>
      <param name="formatterSelector">The <see cref="T:System.Net.Http.Formatting.FormatterSelector" /> to use to select the appropriate <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage`1.#ctor(`0,System.Net.HttpStatusCode)">
      <summary> Initializes a new instance of the &lt;see cref="T:System.Net.Http.HttpResponseMessage`1" /&gt; class. </summary>
      <param name="value">The value to use as the content of this new instance.</param>
      <param name="statusCode">The <see cref="T:System.Net.HttpStatusCode" /> to use for this response.</param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessage`1.#ctor(`0,System.Net.HttpStatusCode,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary> Initializes a new instance of the &lt;see cref="T:System.Net.Http.HttpResponseMessage`1" /&gt; class. </summary>
      <param name="value">The value to use as the content of this new instance.</param>
      <param name="statusCode">The <see cref="T:System.Net.HttpStatusCode" /> to use for this response.</param>
      <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances  to use for serialization.</param>
    </member>
    <member name="P:System.Net.Http.HttpResponseMessage`1.Content">
      <summary> Gets or sets the <see cref="T:System.Net.Http.ObjectContent" /> that manages the value for this instance. </summary>
    </member>
    <member name="T:System.Net.Http.HttpResponseMessageExtensions"></member>
    <member name="M:System.Net.Http.HttpResponseMessageExtensions.CreateContent(System.Net.Http.HttpResponseMessage,System.Type,System.Object)">
      <summary> Creates a new <see cref="T:System.Net.Http.ObjectContent" /> instance associated with the given <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
      <param name="response">The existing <see cref="T:System.Net.Http.HttpResponseMessage" /></param>
      <param name="type">The type of the value.</param>
      <param name="value">The value for the new <see cref="T:System.Net.Http.ObjectContent" /></param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessageExtensions.CreateContent(System.Net.Http.HttpResponseMessage,System.Type,System.Object,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterSelector)">
      <summary> Creates a new <see cref="T:System.Net.Http.ObjectContent" /> instance associated with the given <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
      <param name="response">The <see cref="T:System.Net.Http.HttpResponseMessage" />.</param>
      <param name="type">The type of the value.</param>
      <param name="value">The value for the new <see cref="T:System.Net.Http.ObjectContent" /></param>
      <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances to use.</param>
      <param name="formatterSelector">The <see cref="T:System.Net.Http.Formatting.IFormatterSelector" /> to select the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /></param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessageExtensions.CreateContent(System.Net.Http.HttpResponseMessage,System.Type,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterSelector)">
      <summary> Creates a new <see cref="T:System.Net.Http.ObjectContent" /> instance associated with the given <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
      <param name="response">The <see cref="T:System.Net.Http.HttpResponseMessage" />.</param>
      <param name="type">The type of the value.</param>
      <param name="value">The value for the new <see cref="T:System.Net.Http.ObjectContent" /></param>
      <param name="mediaType">The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> to set as the response media type.</param>
      <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances to use.</param>
      <param name="formatterSelector">The <see cref="T:System.Net.Http.Formatting.IFormatterSelector" /> to select the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /></param>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessageExtensions.CreateContent``1(System.Net.Http.HttpResponseMessage,``0)">
      <summary> Creates a new <see cref="T:System.Net.Http.ObjectContent" /> instance associated with the given <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
      <param name="response">The existing <see cref="T:System.Net.Http.HttpResponseMessage" /></param>
      <param name="value">The value for the new <see cref="T:System.Net.Http.ObjectContent" /></param>
      <typeparam name="T">The type of value for the new <see cref="T:System.Net.Http.ObjectContent" />.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessageExtensions.CreateContent``1(System.Net.Http.HttpResponseMessage,``0,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterSelector)">
      <summary> Creates a new <see cref="T:System.Net.Http.ObjectContent" /> instance associated with the given <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
      <param name="response">The <see cref="T:System.Net.Http.HttpResponseMessage" />.</param>
      <param name="value">The value for the new <see cref="T:System.Net.Http.ObjectContent" /></param>
      <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances to use.</param>
      <param name="formatterSelector">The <see cref="T:System.Net.Http.Formatting.IFormatterSelector" /> to select the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /></param>
      <typeparam name="T">The type of the value.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessageExtensions.CreateContent``1(System.Net.Http.HttpResponseMessage,``0,System.Net.Http.Headers.MediaTypeHeaderValue,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterSelector)">
      <summary> Creates a new <see cref="T:System.Net.Http.ObjectContent" /> instance associated with the given <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
      <param name="response">The <see cref="T:System.Net.Http.HttpResponseMessage" />.</param>
      <param name="value">The value for the new <see cref="T:System.Net.Http.ObjectContent" /></param>
      <param name="mediaType">The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> to set as the response media type.</param>
      <param name="formatters">The collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances to use.</param>
      <param name="formatterSelector">The <see cref="T:System.Net.Http.Formatting.IFormatterSelector" /> to select the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /></param>
      <typeparam name="T">The type of the value.</typeparam>
    </member>
    <member name="T:System.Net.Http.IMultipartStreamProvider">
      <summary> An <see cref="T:System.Net.Http.IMultipartStreamProvider" /> implementation examines the headers provided by the MIME multipart parser as part of the MIME multipart extension methods (see <see cref="T:System.Net.Http.HttpContentMultipartExtensions" />) and decides  what kind of stream to return for the body part to be written to. </summary>
    </member>
    <member name="M:System.Net.Http.IMultipartStreamProvider.GetStream(System.Net.Http.Headers.HttpContentHeaders)">
      <summary> When a MIME multipart body part has been parsed this method is called to get a stream for where to write the body part to. </summary>
      <returns>The <see cref="T:System.IO.Stream" /> instance where the message body part is written to.</returns>
      <param name="headers">Header fields describing the body part.</param>
    </member>
    <member name="T:System.Net.Http.MultipartFileStreamProvider">
      <summary> An <see cref="T:System.Net.Http.IMultipartStreamProvider" /> suited for writing each MIME body parts of the MIME multipart message to a file using a <see cref="T:System.IO.FileStream" />. </summary>
    </member>
    <member name="M:System.Net.Http.MultipartFileStreamProvider.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.MultipartFileStreamProvider" /> class. </summary>
    </member>
    <member name="M:System.Net.Http.MultipartFileStreamProvider.#ctor(System.String)">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.MultipartFileStreamProvider" /> class. </summary>
      <param name="rootPath">The root path where the content of MIME multipart body parts are written to.</param>
    </member>
    <member name="M:System.Net.Http.MultipartFileStreamProvider.#ctor(System.String,System.Int32)">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.MultipartFileStreamProvider" /> class. </summary>
      <param name="rootPath">The root path where the content of MIME multipart body parts are written to.</param>
      <param name="bufferSize">The number of bytes buffered for writes to the file.</param>
    </member>
    <member name="P:System.Net.Http.MultipartFileStreamProvider.BodyPartFileNames">
      <summary> Gets an &lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt; containing the files names of MIME  body part written to file. </summary>
    </member>
    <member name="M:System.Net.Http.MultipartFileStreamProvider.GetLocalFileName(System.Net.Http.Headers.HttpContentHeaders)">
      <summary> Gets the name of the local file which will be combined with the root path to create an absolute file name where the contents of the current MIME body part will be stored. </summary>
      <returns>A relative filename with no path component.</returns>
      <param name="headers">The headers for the current MIME body part.</param>
    </member>
    <member name="M:System.Net.Http.MultipartFileStreamProvider.GetStream(System.Net.Http.Headers.HttpContentHeaders)">
      <summary> This body part stream provider examines the headers provided by the MIME multipart parser and decides which <see cref="T:System.IO.FileStream" /> to write the body part to. </summary>
      <returns>The <see cref="T:System.IO.Stream" /> instance where the message body part is written to.</returns>
      <param name="headers">Header fields describing the body part</param>
    </member>
    <member name="M:System.Net.Http.MultipartFileStreamProvider.OnGetStream(System.Net.Http.Headers.HttpContentHeaders)">
      <summary> Override this method in a derived class to examine the headers provided by the MIME multipart parser and decides which <see cref="T:System.IO.FileStream" /> to write the body part to. </summary>
      <returns>The <see cref="T:System.IO.Stream" /> instance where the message body part is written to.</returns>
      <param name="headers">Header fields describing the body part</param>
    </member>
    <member name="T:System.Net.Http.MultipartFormDataStreamProvider">
      <summary> An <see cref="T:System.Net.Http.IMultipartStreamProvider" /> suited for use with HTML file uploads for writing file  content to a <see cref="T:System.IO.FileStream" />. The stream provider looks at the &lt;b&gt;Content-Disposition&lt;/b&gt; header  field and determines an output <see cref="T:System.IO.Stream" /> based on the presence of a &lt;b&gt;filename&lt;/b&gt; parameter. If a &lt;b&gt;filename&lt;/b&gt; parameter is present in the &lt;b&gt;Content-Disposition&lt;/b&gt; header field then the body  part is written to a <see cref="T:System.IO.FileStream" />, otherwise it is written to a <see cref="T:System.IO.MemoryStream" />. This makes it convenient to process MIME Multipart HTML Form data which is a combination of form  data and file content. </summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataStreamProvider.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.MultipartFormDataStreamProvider" /> class. </summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataStreamProvider.#ctor(System.String)">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.MultipartFormDataStreamProvider" /> class. </summary>
      <param name="rootPath">The root path where the content of MIME multipart body parts are written to.</param>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataStreamProvider.#ctor(System.String,System.Int32)">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.MultipartFormDataStreamProvider" /> class. </summary>
      <param name="rootPath">The root path where the content of MIME multipart body parts are written to.</param>
      <param name="bufferSize">The number of bytes buffered for writes to the file.</param>
    </member>
    <member name="P:System.Net.Http.MultipartFormDataStreamProvider.BodyPartFileNames">
      <summary> Gets an &lt;see cref="T:System.Collections.Generic.IDictionary`2" /&gt; instance containing mappings of each  &lt;b&gt;filename&lt;/b&gt; parameter provided in a &lt;b&gt;Content-Disposition&lt;/b&gt; header field  (represented as the keys) to a local file name where the contents of the body part is  stored (represented as the values). </summary>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataStreamProvider.GetLocalFileName(System.Net.Http.Headers.HttpContentHeaders)">
      <summary> Gets the name of the local file which will be combined with the root path to create an absolute file name where the contents of the current MIME body part will be stored. </summary>
      <returns>A relative filename with no path component.</returns>
      <param name="headers">The headers for the current MIME body part.</param>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataStreamProvider.GetStream(System.Net.Http.Headers.HttpContentHeaders)">
      <summary> This body part stream provider examines the headers provided by the MIME multipart parser and decides whether it should return a file stream or a memory stream for the body part to be  written to. </summary>
      <returns>The <see cref="T:System.IO.Stream" /> instance where the message body part is written to.</returns>
      <param name="headers">Header fields describing the body part</param>
    </member>
    <member name="M:System.Net.Http.MultipartFormDataStreamProvider.OnGetStream(System.Net.Http.Headers.HttpContentHeaders)">
      <summary> Override this method in a derived class to examine the headers provided by the MIME multipart parser and decide whether it should return a file stream or a memory stream for the body part to be  written to. </summary>
      <returns>The <see cref="T:System.IO.Stream" /> instance where the message body part is written to.</returns>
      <param name="headers">Header fields describing the body part</param>
    </member>
    <member name="T:System.Net.Http.ObjectContent">
      <summary> Derived <see cref="P:System.Net.Http.ObjectContent.HttpContent" /> class that contains a strongly typed object. </summary>
    </member>
    <member name="M:System.Net.Http.ObjectContent.CreateContentReadStreamAsync">
      <summary> Asynchronously creates the content read stream. </summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> instance that will yield a stream intended for reading.</returns>
    </member>
    <member name="P:System.Net.Http.ObjectContent.DefaultFormatter">
      <summary> Gets or sets the default formatter. </summary>
      <returns> The default formatter. </returns>
    </member>
    <member name="P:System.Net.Http.ObjectContent.FormatterContext">
      <summary> Gets or sets the formatter context. </summary>
      <returns> The formatter context. </returns>
    </member>
    <member name="P:System.Net.Http.ObjectContent.Formatters">
      <summary> Gets the mutable collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances used to serialize or deserialize the value of this <see cref="T:System.Net.Http.ObjectContent" />. </summary>
    </member>
    <member name="P:System.Net.Http.ObjectContent.FormatterSelector">
      <summary> Gets or sets the formatter selector. </summary>
      <returns> The formatter selector. </returns>
    </member>
    <member name="P:System.Net.Http.ObjectContent.HttpContent">
      <summary> Gets or sets the inner <see cref="P:System.Net.Http.ObjectContent.HttpContent" /> wrapped by by the current <see cref="T:System.Net.Http.ObjectContent" />. </summary>
    </member>
    <member name="P:System.Net.Http.ObjectContent.ObjectType">
      <summary> Gets the type of object managed by this <see cref="T:System.Net.Http.ObjectContent" /> instance. </summary>
    </member>
    <member name="M:System.Net.Http.ObjectContent.ReadAsync">
      <summary> Asynchronously returns the object instance for this <see cref="T:System.Net.Http.ObjectContent" />. </summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> instance that will yield the object instance.</returns>
    </member>
    <member name="M:System.Net.Http.ObjectContent.ReadAsyncInternal``1(System.Void)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Net.Http.ObjectContent.ReadOrDefaultAsync">
      <summary> Asynchronously returns the object instance for this <see cref="T:System.Net.Http.ObjectContent" /> or the default value for the type if content is not available. </summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> instance that will yield the object instance.</returns>
    </member>
    <member name="M:System.Net.Http.ObjectContent.SelectReadFormatter">
      <summary> Selects the appropriate <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> to read the object content. </summary>
      <returns>The selected <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> or null.</returns>
    </member>
    <member name="M:System.Net.Http.ObjectContent.SelectWriteFormatter(System.Net.Http.Headers.MediaTypeHeaderValue@)">
      <summary> Selects the appropriate <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> to write the object content. </summary>
      <returns>The selected <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> or null.</returns>
      <param name="mediaType">The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> to use to describe the object's content type.</param>
    </member>
    <member name="M:System.Net.Http.ObjectContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <summary> Asynchronously serializes the object's content to the given stream. </summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> instance that is asynchronously serializing the object's content.</returns>
      <param name="stream">The <see cref="T:System.IO.Stream" /> to which to write.</param>
      <param name="context">The associated <see cref="T:System.Net.TransportContext" />.</param>
    </member>
    <member name="M:System.Net.Http.ObjectContent.SetValueWithoutValidation(System.Object)">
      <summary> Sets the value of the <see cref="T:System.Net.Http.ObjectContent" /> without any type checking. </summary>
      <param name="value">The value to set to</param>
    </member>
    <member name="M:System.Net.Http.ObjectContent.TryComputeLength(System.Int64@)">
      <summary> Computes the length of the stream if possible. </summary>
      <returns>true if the length has been computed; otherwise false.</returns>
      <param name="length">The computed length of the stream.</param>
    </member>
    <member name="P:System.Net.Http.ObjectContent.WasFormatterCollectionSetExplicitly">
      <summary> Gets a value indicating whether the formatter collection was set explicitly. </summary>
      <returns>truefalse</returns>
    </member>
    <member name="P:System.Net.Http.ObjectContent.WasFormatterContextSetExplicitly">
      <summary> Gets a value indicating whether formatter context was set explicitly. </summary>
      <returns>truefalse</returns>
    </member>
    <member name="P:System.Net.Http.ObjectContent.WasFormatterSelectorSetExplicitly">
      <summary> Gets a value indicating whether the formatter selector was set explicitly. </summary>
      <returns>truefalse</returns>
    </member>
    <member name="P:System.Net.Http.ObjectContent.WasMediaTypeSetExplicitly">
      <summary> Gets and sets value indicating whether the media type was set explicitly. </summary>
      <returns>truefalse</returns>
    </member>
    <member name="P:System.Net.Http.ObjectContent.WriteFormatter">
      <summary> Gets or sets the write formatter. </summary>
      <returns> The write formatter. </returns>
    </member>
    <member name="T:System.Net.Http.ObjectContent`1">
      <summary> Generic form of <see cref="T:System.Net.Http.ObjectContent" />. </summary>
      <typeparam name="T">The type of object this  class will contain.</typeparam>
    </member>
    <member name="M:System.Net.Http.ObjectContent`1.ReadAsync">
      <summary> Returns a <see cref="T:System.Threading.Tasks.Task" /> instance to yield the object instance for this <see cref="T:System.Net.Http.ObjectContent" />. </summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that will yield the object instance.</returns>
    </member>
    <member name="M:System.Net.Http.ObjectContent`1.ReadOrDefaultAsync">
      <summary> Returns a <see cref="T:System.Threading.Tasks.Task" /> instance to yield the object instance for this <see cref="T:System.Net.Http.ObjectContent" /> or the default value for the type if content is not available. </summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that will yield the object instance.</returns>
    </member>
    <member name="T:System.Net.Http.UriExtensions">
      <summary> Extension methods to allow strongly typed objects to be read from the query component of <see cref="T:System.Uri" /> instances. </summary>
    </member>
    <member name="M:System.Net.Http.UriExtensions.ParseQueryString(System.Uri)">
      <summary> Parses the query portion of the specified <see cref="T:System.Uri" />. </summary>
      <returns>A <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing the parsed result.</returns>
      <param name="address">The <see cref="T:System.Uri" /> instance from which to read.</param>
    </member>
    <member name="M:System.Net.Http.UriExtensions.TryReadQueryAs(System.Uri,System.Type,System.Object@)">
      <summary> Reads HTML form URL encoded data provided in the <see cref="T:System.Uri" /> query component as an <see cref="T:System.Object" /> of the given type. </summary>
      <returns>true if the query component can be read as the specified type; otherwise false.</returns>
      <param name="address">The <see cref="T:System.Uri" /> instance from which to read.</param>
      <param name="type">The type of the object to read.</param>
      <param name="value">An object to be initialized with this instance or null if the conversion cannot be performed.</param>
    </member>
    <member name="M:System.Net.Http.UriExtensions.TryReadQueryAs``1(System.Uri,``0@)">
      <summary> Reads HTML form URL encoded data provided in the <see cref="T:System.Uri" /> query component as an <see cref="T:System.Object" /> of type &lt;typeparamref name="T" /&gt;. </summary>
      <returns>true if the query component can be read as the specified type; otherwise false.</returns>
      <param name="address">The <see cref="T:System.Uri" /> instance from which to read.</param>
      <param name="value">An object to be initialized with this instance or null if the conversion cannot be performed.</param>
      <typeparam name="T">The type of the object to read.</typeparam>
    </member>
    <member name="M:System.Net.Http.UriExtensions.TryReadQueryAsJson(System.Uri,System.Json.JsonObject@)">
      <summary> Reads HTML form URL encoded data provided in the <see cref="T:System.Uri" /> query component as a <see cref="T:System.Json.JsonValue" /> object. </summary>
      <returns>true if the query component can be read as <see cref="T:System.Json.JsonValue" />; otherwise false.</returns>
      <param name="address">The <see cref="T:System.Uri" /> instance from which to read.</param>
      <param name="value">An object to be initialized with this instance or null if the conversion cannot be performed.</param>
    </member>
    <member name="T:System.Net.Http.Formatting.BufferedMediaTypeFormatter">
      <summary> Helper class to allow a synchronous formatter on top of the async formatter infrastructure.  This does not guarantee non-blocking threads. The only way to guarantee that we don't block a thread on IO is: a) use the async form, or  b) fully buffer the entire write operation.   The user opted out of the async form, meaning they can tolerate potential thread blockages. This class just tries to do smart buffering to minimize that blockage.  It also gives us a place to do future optimizations on synchronous usage.  </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.BufferedMediaTypeFormatter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.BufferedMediaTypeFormatter" /> class.</summary>
    </member>
    <member name="P:System.Net.Http.Formatting.BufferedMediaTypeFormatter.BufferSize">
      <summary> Suggested size of buffer to use with streams, in bytes.  </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.BufferedMediaTypeFormatter.OnReadFromStream(System.Type,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Formatting.FormatterContext)"></member>
    <member name="M:System.Net.Http.Formatting.BufferedMediaTypeFormatter.OnReadFromStreamAsync(System.Void,System.Object,System.Type,System.IO.Stream)"></member>
    <member name="M:System.Net.Http.Formatting.BufferedMediaTypeFormatter.OnWriteToStream(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Formatting.FormatterContext,System.Net.TransportContext)"></member>
    <member name="M:System.Net.Http.Formatting.BufferedMediaTypeFormatter.OnWriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Formatting.FormatterContext,System.Net.TransportContext)"></member>
    <member name="T:System.Net.Http.Formatting.DelegatingEnumerable`1">
      <summary> Helper class to serialize &lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt; types by delegating them through a concrete implementation."/&amp;gt;. </summary>
      <typeparam name="T">The interface implementing  to proxy.</typeparam>
    </member>
    <member name="M:System.Net.Http.Formatting.DelegatingEnumerable`1.#ctor">
      <summary> Initialize a DelegatingEnumerable. This constructor is necessary for <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> to work. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.DelegatingEnumerable`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary> Initialize a DelegatingEnumerable with an &lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;. This is a helper class to proxy &lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt; interfaces for <see cref="T:System.Xml.Serialization.XmlSerializer" />. </summary>
      <param name="source">The &lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt; instance to get the enumerator from.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.DelegatingEnumerable`1.Add(System.Object)">
      <summary> This method is not implemented but is required method for serialization to work. Do not use. </summary>
      <param name="item">The item to add. Unused.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.DelegatingEnumerable`1.GetEnumerator">
      <summary> Get the enumerator of the associated &lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;. </summary>
      <returns>The enumerator of the &lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt; source.</returns>
    </member>
    <member name="M:System.Net.Http.Formatting.DelegatingEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
      <summary> Get the enumerator of the associated &lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;. </summary>
      <returns>The enumerator of the &lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt; source.</returns>
    </member>
    <member name="T:System.Net.Http.Formatting.FormatterContext">
      <summary> The context used to identify the <see cref="T:System.Net.Http.HttpRequestMessage" /> or <see cref="T:System.Net.Http.HttpResponseMessage" /> that needs to be either read or written. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.FormatterContext.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Boolean)">
      <summary> Instantiates a new instance of a <see cref="T:System.Net.Http.Formatting.FormatterContext" />. </summary>
      <param name="contentType">The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> to use in the absence of a request or response.</param>
      <param name="isRead">Indicates if this is context is meant to select a formatter to read or to write.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.FormatterContext.#ctor(System.Net.Http.HttpRequestMessage,System.Boolean)">
      <summary> Instantiates a new instance of the <see cref="T:System.Net.Http.Formatting.FormatterContext" /> class to use to serialize or deserialize a request. </summary>
      <param name="request">The <see cref="T:System.Net.Http.HttpRequestMessage" /> to serialize or deserialize.</param>
      <param name="isRead">Indicates if this is context is meant to select a formatter to read or to write.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.FormatterContext.#ctor(System.Net.Http.HttpResponseMessage,System.Boolean)">
      <summary> Instantiates a new instance of the <see cref="T:System.Net.Http.Formatting.FormatterContext" /> class to use to serialize or deserialize a response. </summary>
      <param name="response">The <see cref="T:System.Net.Http.HttpResponseMessage" /> to serialize or deserialize.</param>
      <param name="isRead">Indicates if this is context is meant to select a formatter to read or to write.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.FormatterContext.ContentType">
      <summary> Gets the HTTP Content-Type of the request or response associated with the context. </summary>
    </member>
    <member name="P:System.Net.Http.Formatting.FormatterContext.IsRead">
      <summary> Gets a value indicating whether the context will be used to select for formatter for reading or writing the content </summary>
    </member>
    <member name="P:System.Net.Http.Formatting.FormatterContext.Request">
      <summary> Gets the <see cref="T:System.Net.Http.HttpRequestMessage" /> associated with the context. </summary>
    </member>
    <member name="P:System.Net.Http.Formatting.FormatterContext.Response">
      <summary> Gets the <see cref="T:System.Net.Http.HttpResponseMessage" /> associated with the context or null if there is no associated response message. </summary>
    </member>
    <member name="T:System.Net.Http.Formatting.FormatterSelector">
      <summary> Class that selects a <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> for an <see cref="T:System.Net.Http.HttpRequestMessage" /> or <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.FormatterSelector.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.FormatterSelector" /> class.</summary>
    </member>
    <member name="M:System.Net.Http.Formatting.FormatterSelector.OnSelectReadFormatter(System.Type,System.Net.Http.Formatting.FormatterContext,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary> Called to select a formatter for deserializing an instance of a given type. </summary>
      <returns>The <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> chosen for deserialization or null if their is no appropriate formatter.&amp;gt;</returns>
      <param name="type">The type to be deserialized.</param>
      <param name="formatterContext">The context related to the deserialization of the instance.</param>
      <param name="formatters">The set of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> objects from which to choose.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.FormatterSelector.OnSelectWriteFormatter(System.Type,System.Net.Http.Formatting.FormatterContext,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Headers.MediaTypeHeaderValue@)">
      <summary> Called to select a formatter for serializing an instance of a given type. </summary>
      <returns>The <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> chosen for serialization or null if their is no appropriate formatter.</returns>
      <param name="type">The type to be serialized.</param>
      <param name="formatterContext">The context related to the serialization of the instance.</param>
      <param name="formatters">The set of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> objects from which to choose.</param>
      <param name="mediaType">The media type that is associated with the formatter chosen for serialization.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.FormatterSelector.SelectReadFormatter(System.Type,System.Net.Http.Formatting.FormatterContext,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary> Selects a formatter for deserializing an instance of a given type. </summary>
      <returns>The <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> chosen for deserialization or null if their is no appropriate formatter.&amp;gt;</returns>
      <param name="type">The type to be deserialized.</param>
      <param name="formatterContext">The context related to the deserialization of the instance.</param>
      <param name="formatters">The set of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> objects from which to choose.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.FormatterSelector.SelectWriteFormatter(System.Type,System.Net.Http.Formatting.FormatterContext,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Headers.MediaTypeHeaderValue@)">
      <summary> Selects a formatter for serializing an instance of a given type. </summary>
      <returns>The <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> chosen for serialization or null if their is no appropriate formatter.</returns>
      <param name="type">The type to be serialized.</param>
      <param name="formatterContext">The context related to the serialization of the instance.</param>
      <param name="formatters">The set of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> objects from which to choose.</param>
      <param name="mediaType">The media type that is associated with the formatter chosen for serialization.</param>
    </member>
    <member name="T:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter">
      <summary>
        <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> class for handling HTML form URL-ended data, also known as application/x-www-form-urlencoded.  </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter" /> class. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter.CanReadType(System.Type)">
      <summary> Determines whether this <see cref="T:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter" /> can read objects of the specified type. </summary>
      <returns>true if objects of this type can be read, otherwise false.</returns>
      <param name="type">The type of object that will be read.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter.CanWriteType(System.Type)">
      <summary> Determines whether this <see cref="T:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter" /> can write objects of the specified type. </summary>
      <returns>true if objects of this type can be written, otherwise false.</returns>
      <param name="type">The type of object that will be written.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter.DefaultMediaType">
      <summary> Gets the default media type for HTML Form URL encoded data, namely application/x-www-form-urlencoded. </summary>
      <returns>
        <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />
      </returns>
    </member>
    <member name="M:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter.OnReadFromStreamAsync(System.Void,System.Object,System.Type,System.IO.Stream)"></member>
    <member name="M:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter.OnWriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Formatting.FormatterContext,System.Net.TransportContext)">
      <summary> Called during serialization to write an object of the specified type to the specified stream. </summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that will write the value to the stream.</returns>
      <param name="type">The type of object to write.</param>
      <param name="value">The object to write.</param>
      <param name="stream">The <see cref="T:System.IO.Stream" /> to which to write.</param>
      <param name="contentHeaders">The <see cref="T:System.Net.Http.Headers.HttpContentHeaders" /> for the content being read.</param>
      <param name="formatterContext">The <see cref="T:System.Net.Http.Formatting.FormatterContext" /> containing the respective request or response.</param>
      <param name="transportContext">The <see cref="T:System.Net.TransportContext" />.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.FormUrlEncodedMediaTypeFormatter.ReadBufferSize">
      <summary> Gets or sets the size of the buffer when reading the incoming stream. </summary>
      <returns> The size of the read buffer. </returns>
    </member>
    <member name="T:System.Net.Http.Formatting.IFormatterSelector">
      <summary> Interface to select a <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> for an <see cref="T:System.Net.Http.HttpRequestMessage" /> or <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.IFormatterSelector.SelectReadFormatter(System.Type,System.Net.Http.Formatting.FormatterContext,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary> Selects a formatter for deserializing an instance of a given type. </summary>
      <returns>The <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> chosen for deserialization or null if their is no appropriate formatter.&amp;gt;</returns>
      <param name="type">The type to be deserialized.</param>
      <param name="formatterContext">The context related to the deserialization of the instance.</param>
      <param name="formatters">The set of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> objects from which to choose.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.IFormatterSelector.SelectWriteFormatter(System.Type,System.Net.Http.Formatting.FormatterContext,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Headers.MediaTypeHeaderValue@)">
      <summary> Selects a formatter for serializing an instance of a given type. </summary>
      <returns>The <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> chosen for serialization or null if their is no appropriate formatter.</returns>
      <param name="type">The type to be serialized.</param>
      <param name="formatterContext">The context related to the serialization of the instance.</param>
      <param name="formatters">The set of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> objects from which to choose.</param>
      <param name="mediaType">The media type that is associated with the formatter chosen for serialization.</param>
    </member>
    <member name="T:System.Net.Http.Formatting.IKeyValueModel">
      <summary> Interface to provide a key/value model of an object graph. </summary>
    </member>
    <member name="P:System.Net.Http.Formatting.IKeyValueModel.Keys">
      <summary> Gets all the keys for all the values. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.IKeyValueModel.TryGetValue(System.String,System.Object@)">
      <summary> Attempts to retrieve the value associated with the given key. </summary>
      <returns>If there was a value associated with that key</returns>
      <param name="key">The key of the value to retrieve.</param>
      <param name="value">The value associated with that key.</param>
    </member>
    <member name="T:System.Net.Http.Formatting.JsonMediaTypeFormatter">
      <summary>
        <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> class to handle Json. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.JsonMediaTypeFormatter" /> class. </summary>
    </member>
    <member name="P:System.Net.Http.Formatting.JsonMediaTypeFormatter.AllowReferenceDataContracts">
      <summary> Gets or sets a flag indicating whether this formatter uses a serialization surrogate to allow data contracts marked with <see cref="P:DataContractAttribute.IsReference" />  set to true to be serialized. </summary>
      <returns>truefalse</returns>
    </member>
    <member name="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.CanReadType(System.Type)">
      <summary> Determines whether this <see cref="T:System.Net.Http.Formatting.JsonMediaTypeFormatter" /> can read objects of the specified type. </summary>
      <returns>true if objects of this type can be read, otherwise false.</returns>
      <param name="type">The type of object that will be read.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.CanWriteType(System.Type)">
      <summary> Determines whether this <see cref="T:System.Net.Http.Formatting.JsonMediaTypeFormatter" /> can write objects of the specified type. </summary>
      <returns>true if objects of this type can be written, otherwise false.</returns>
      <param name="type">The type of object that will be written.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.JsonMediaTypeFormatter.CharacterEncoding">
      <summary> Gets or sets the <see cref="T:System.Text.Encoding" /> to use when writing data. </summary>
      <returns>
        <see cref="T:System.Text.Encoding" />
      </returns>
    </member>
    <member name="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.CreateDefaultSerializer(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Boolean)">
      <summary> Creates the default serializer used to serialize objects of the specified type. </summary>
      <returns>A <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> that can serialize instances of the specified type.</returns>
      <param name="type">The type of object to create a serializer for.</param>
      <param name="knownTypes">A &lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt; of Type that contains the known types that may be present in the object graph.</param>
      <param name="allowReferenceDataContracts">true to create a serializer that can handle reference data contracts, otherwise false.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.JsonMediaTypeFormatter.DefaultMediaType">
      <summary> Gets the default media type for Json, namely "application/json". </summary>
      <returns>
        <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />
      </returns>
    </member>
    <member name="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.OnReadFromStreamAsync(System.Void,System.Object,System.Type,System.IO.Stream)"></member>
    <member name="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.OnWriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Formatting.FormatterContext,System.Net.TransportContext)">
      <summary> Called during serialization to write an object of the specified type to the specified stream. </summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that will write the value to the stream.</returns>
      <param name="type">The type of object to write.</param>
      <param name="value">The object to write.</param>
      <param name="stream">The <see cref="T:System.IO.Stream" /> to which to write.</param>
      <param name="contentHeaders">The <see cref="T:System.Net.Http.Headers.HttpContentHeaders" /> for the content being written.</param>
      <param name="formatterContext">The <see cref="T:System.Net.Http.Formatting.FormatterContext" /> containing the respective request or response.</param>
      <param name="transportContext">The <see cref="T:System.Net.TransportContext" />.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.RemoveSerializer(System.Type)">
      <summary> Unregisters the serializer currently associated with the given type. </summary>
      <returns>true if a serializer was registered for the type; otherwise false.</returns>
      <param name="type">The type of object whose serializer should be removed.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.SetSerializer``1(System.Runtime.Serialization.Json.DataContractJsonSerializer)">
      <summary> Registers the <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> to use to read or write the specified &lt;typeparamref name="T" /&gt; type. </summary>
      <param name="serializer">The <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> instance to use.</param>
      <typeparam name="T">The type of object that will be serialized or deserialized with the serializer.</typeparam>
    </member>
    <member name="M:System.Net.Http.Formatting.JsonMediaTypeFormatter.SetSerializer(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializer)">
      <summary> Registers the <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> to use to read or write the specified type. </summary>
      <param name="type">The type of object that will be serialized or deserialized with the serializer.</param>
      <param name="serializer">The <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /> instance to use.</param>
    </member>
    <member name="T:System.Net.Http.Formatting.MediaRangeMapping">
      <summary> Class that provides <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />s for a request or response from a media range. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaRangeMapping.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.MediaRangeMapping" /> class. </summary>
      <param name="mediaRange">The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> that provides a description of the media range.</param>
      <param name="mediaType">The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> to return on a match.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaRangeMapping.#ctor(System.String,System.String)">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.MediaRangeMapping" /> class. </summary>
      <param name="mediaRange">The description of the media range.</param>
      <param name="mediaType">The media type to return on a match.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.MediaRangeMapping.MediaRange">
      <summary> Gets the <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> describing the known media range. </summary>
    </member>
    <member name="T:System.Net.Http.Formatting.MediaTypeFormatter">
      <summary> Base class to handle serializing and deserializing strongly-typed objects using <see cref="T:System.Net.Http.ObjectContent" />. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatter.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> class. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatter.CanReadType(System.Type)">
      <summary> Determines whether this <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> can deserialize an object of the specified type. </summary>
      <returns>true if this <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> can deserialize an object of that type; otherwise false.</returns>
      <param name="type">The type of object that will be deserialized.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatter.CanWriteType(System.Type)">
      <summary> Determines whether this <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> can serialize an object of the specified type. </summary>
      <returns>true if this <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> can serialize an object of that type; otherwise false.</returns>
      <param name="type">The type of object that will be serialized.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.MediaTypeFormatter.Encoding">
      <summary> Gets or sets the <see cref="P:System.Net.Http.Formatting.MediaTypeFormatter.Encoding" /> to use when reading and writing data. </summary>
      <returns>
        <see cref="P:System.Net.Http.Formatting.MediaTypeFormatter.Encoding" />
      </returns>
    </member>
    <member name="P:System.Net.Http.Formatting.MediaTypeFormatter.MediaTypeMappings">
      <summary> Gets the mutable collection of <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> elements used by this <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instance to determine the  <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> of requests or responses. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatter.OnGetResponseHeaders(System.Type,System.String,System.Net.Http.HttpResponseMessage)">
      <summary> Called from &lt;see cref="M:System.Net.Http.Formatting.MediaTypeFormatter.GetResponseHeaders(System.Type,System.String,System.Net.Http.HttpResponseMessage)" /&gt; to retrieve the response headers. </summary>
      <returns>The collection of response header key value pairs.</returns>
      <param name="objectType">The type of the object.  See <see cref="T:System.Net.Http.ObjectContent" />.</param>
      <param name="mediaType">The media type.</param>
      <param name="responseMessage">The <see cref="T:System.Net.Http.HttpResponseMessage" />.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatter.OnReadFromStreamAsync(System.Void,System.Object,System.Type,System.IO.Stream)"></member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatter.OnWriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Formatting.FormatterContext,System.Net.TransportContext)">
      <summary> Called to write an object to the stream asynchronously. </summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that will write the object to the stream asynchronously.</returns>
      <param name="type">The type of object to write.</param>
      <param name="value">The object instance to write.</param>
      <param name="stream">The <see cref="T:System.IO.Stream" /> to which to write.</param>
      <param name="contentHeaders">The <see cref="T:System.Net.Http.Headers.HttpContentHeaders" /> for the content being written.</param>
      <param name="formatterContext">The <see cref="T:System.Net.Http.Formatting.FormatterContext" /> containing the respective request or response.</param>
      <param name="transportContext">The <see cref="T:System.Net.TransportContext" />.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatter.ReadFromStreamAsync(System.Void,System.Object,System.Type,System.IO.Stream)"></member>
    <member name="P:System.Net.Http.Formatting.MediaTypeFormatter.SkipStreamLimitChecks">
      <summary>Gets or sets {insert text here}.</summary>
    </member>
    <member name="P:System.Net.Http.Formatting.MediaTypeFormatter.SupportedMediaTypes">
      <summary> Gets the mutable collection of <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> elements supported by this <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instance. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Formatting.FormatterContext,System.Net.TransportContext)">
      <summary> Returns a <see cref="T:System.Threading.Tasks.Task" /> that serializes the given value of the given type to the given stream. </summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that will perform the write.</returns>
      <param name="type">The type of the object to write.</param>
      <param name="value">The object value to write.  It may be null.</param>
      <param name="stream">The <see cref="T:System.IO.Stream" /> to which to write.</param>
      <param name="contentHeaders">The <see cref="T:System.Net.Http.Headers.HttpContentHeaders" /> if available.  It may be null.</param>
      <param name="formatterContext">The <see cref="T:System.Net.Http.Formatting.FormatterContext" /> containing the <see cref="T:System.Net.Http.HttpRequestMessage" /></param>
      <param name="transportContext">The <see cref="T:System.Net.TransportContext" /> if available.  It may be null.</param>
    </member>
    <member name="T:System.Net.Http.Formatting.MediaTypeFormatterCollection">
      <summary> Collection class that contains <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterCollection.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" /> class. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterCollection.#ctor(System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" /> class. </summary>
      <param name="formatters">A collection of <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances to place in the collection.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.MediaTypeFormatterCollection.FormUrlEncodedFormatter">
      <summary> Gets the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> to use for application/x-www-form-urlencoded data. </summary>
    </member>
    <member name="P:System.Net.Http.Formatting.MediaTypeFormatterCollection.JsonFormatter">
      <summary> Gets the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> to use for Json. </summary>
    </member>
    <member name="P:System.Net.Http.Formatting.MediaTypeFormatterCollection.XmlFormatter">
      <summary> Gets the <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> to use for Xml. </summary>
    </member>
    <member name="T:System.Net.Http.Formatting.MediaTypeFormatterExtensions">
      <summary> Extensions for adding <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> items to a <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddMediaRangeMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Updates the given formatter's set of <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> elements so that it associates the mediaType with requests or responses containing mediaRange in the content headers. </summary>
      <param name="formatter">The <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> to receive the new <see cref="T:System.Net.Http.Formatting.MediaRangeMapping" /> item.</param>
      <param name="mediaRange">The media range that will appear in the content headers.</param>
      <param name="mediaType">The media type to associate with that mediaRange.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddMediaRangeMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.String)">
      <summary> Updates the given formatter's set of <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> elements so that it associates the mediaType with requests or responses containing mediaRange in the content headers. </summary>
      <param name="formatter">The <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> to receive the new <see cref="T:System.Net.Http.Formatting.MediaRangeMapping" /> item.</param>
      <param name="mediaRange">The media range that will appear in the content headers.</param>
      <param name="mediaType">The media type to associate with that mediaRange.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddQueryStringMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Updates the given formatter's set of <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> elements so that it associates the mediaType with <see cref="T:System.Uri" />s containing a specific query parameter and value. </summary>
      <param name="formatter">The <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> to receive the new <see cref="T:System.Net.Http.Formatting.QueryStringMapping" /> item.</param>
      <param name="queryStringParameterName">The name of the query parameter.</param>
      <param name="queryStringParameterValue">The value assigned to that query parameter.</param>
      <param name="mediaType">The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> to associate  with a <see cref="T:System.Uri" /> containing a query string matching queryStringParameterName  and queryStringParameterValue.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddQueryStringMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.String,System.String)">
      <summary> Updates the given formatter's set of <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> elements so that it associates the mediaType with <see cref="T:System.Uri" />s containing a specific query parameter and value. </summary>
      <param name="formatter">The <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> to receive the new <see cref="T:System.Net.Http.Formatting.QueryStringMapping" /> item.</param>
      <param name="queryStringParameterName">The name of the query parameter.</param>
      <param name="queryStringParameterValue">The value assigned to that query parameter.</param>
      <param name="mediaType">The media type to associate  with a <see cref="T:System.Uri" /> containing a query string matching queryStringParameterName and queryStringParameterValue.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddRequestHeaderMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.String,System.StringComparison,System.Boolean,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Updates the given formatter's set of <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> elements so that it associates the mediaType with a specific HTTP request header field with a specific value. </summary>
      <param name="formatter">The <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> to receive the new <see cref="T:System.Net.Http.Formatting.MediaRangeMapping" /> item.</param>
      <param name="headerName">Name of the header to match.</param>
      <param name="headerValue">The header value to match.</param>
      <param name="valueComparison">The <see cref="T:System.StringComparison" /> to use when matching headerValue.</param>
      <param name="isValueSubstring">if set to true then headerValue is  considered a match if it matches a substring of the actual header value.</param>
      <param name="mediaType">The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> to associate  with a <see cref="M:HttpRequestMessage.Header" /> entry with a name matching headerName and a value matching headerValue.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddRequestHeaderMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.String,System.StringComparison,System.Boolean,System.String)">
      <summary> Updates the given formatter's set of <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> elements so that it associates the mediaType with a specific HTTP request header field with a specific value. </summary>
      <param name="formatter">The <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> to receive the new <see cref="T:System.Net.Http.Formatting.MediaRangeMapping" /> item.</param>
      <param name="headerName">Name of the header to match.</param>
      <param name="headerValue">The header value to match.</param>
      <param name="valueComparison">The <see cref="T:System.StringComparison" /> to use when matching headerValue.</param>
      <param name="isValueSubstring">if set to true then headerValue is  considered a match if it matches a substring of the actual header value.</param>
      <param name="mediaType">The media type to associate  with a <see cref="M:HttpRequestMessage.Header" /> entry with a name matching headerName and a value matching headerValue.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddUriPathExtensionMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Updates the given formatter's set of <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> elements so that it associates the mediaType with <see cref="T:System.Uri" />s ending with the given uriPathExtension. </summary>
      <param name="formatter">The <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> to receive the new <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" /> item.</param>
      <param name="uriPathExtension">The string of the <see cref="T:System.Uri" /> path extension.</param>
      <param name="mediaType">The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> to associate with <see cref="T:System.Uri" />s ending with uriPathExtension.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddUriPathExtensionMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.String)">
      <summary> Updates the given formatter's set of <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> elements so that it associates the mediaType with <see cref="T:System.Uri" />s ending with the given uriPathExtension. </summary>
      <param name="formatter">The <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> to receive the new <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" /> item.</param>
      <param name="uriPathExtension">The string of the <see cref="T:System.Uri" /> path extension.</param>
      <param name="mediaType">The string media type to associate with <see cref="T:System.Uri" />s ending with uriPathExtension.</param>
    </member>
    <member name="T:System.Net.Http.Formatting.MediaTypeMapping">
      <summary> An abstract base class used to create an association between <see cref="T:System.Net.Http.HttpRequestMessage" /> or  <see cref="T:System.Net.Http.HttpResponseMessage" /> instances that have certain characteristics  and a specific <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />.  </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeMapping.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Initializes a new instance of a <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> with the given mediaType value. </summary>
      <param name="mediaType"> The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> that is associated with <see cref="T:System.Net.Http.HttpRequestMessage" /> or  <see cref="T:System.Net.Http.HttpResponseMessage" /> instances that have the given characteristics of the  <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" />. </param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeMapping.#ctor(System.String)">
      <summary> Initializes a new instance of a <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> with the given mediaType value. </summary>
      <param name="mediaType"> The <see cref="T:System.String" /> that is associated with <see cref="T:System.Net.Http.HttpRequestMessage" /> or  <see cref="T:System.Net.Http.HttpResponseMessage" /> instances that have the given characteristics of the  <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" />. </param>
    </member>
    <member name="P:System.Net.Http.Formatting.MediaTypeMapping.MediaType">
      <summary> Gets the <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> that is associated with <see cref="T:System.Net.Http.HttpRequestMessage" /> or  <see cref="T:System.Net.Http.HttpResponseMessage" /> instances that have the given characteristics of the  <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" />. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeMapping.OnTryMatchMediaType(System.Net.Http.HttpRequestMessage)">
      <summary> Implemented in a derived class to determine if the <see cref="T:System.Net.Http.HttpRequestMessage" />  should be associated with the <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> of the <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" />.  </summary>
      <returns> The quality of the match. It must be between 0.0 and 1.0. A value of 0.0 signifies no match. A value of 1.0 signifies a complete match. </returns>
      <param name="request"> The <see cref="T:System.Net.Http.HttpRequestMessage" /> to evaluate for the characteristics  associated with the <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> of the <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" />. </param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeMapping.OnTryMatchMediaType(System.Net.Http.HttpResponseMessage)">
      <summary> Implemented in a derived class to determine if the <see cref="T:System.Net.Http.HttpResponseMessage" />  should be associated with the <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> of the <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" />.  </summary>
      <returns> The quality of the match. It must be between 0.0 and 1.0. A value of 0.0 signifies no match. A value of 1.0 signifies a complete match. </returns>
      <param name="response"> The <see cref="T:System.Net.Http.HttpResponseMessage" /> to evaluate for the characteristics  associated with the <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> of the <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" />. </param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
      <summary> Returns the quality of the match of the <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> associated with request. </summary>
      <returns> The quality of the match. It must be between 0.0 and 1.0. A value of 0.0 signifies no match. A value of 1.0 signifies a complete match. </returns>
      <param name="request"> The <see cref="T:System.Net.Http.HttpRequestMessage" /> to evaluate for the characteristics  associated with the <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> of the <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" />. </param>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeMapping.TryMatchMediaType(System.Net.Http.HttpResponseMessage)">
      <summary> Returns the quality of the match of the <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> associated with response. </summary>
      <returns> The quality of the match. It must be between 0.0 and 1.0. A value of 0.0 signifies no match. A value of 1.0 signifies a complete match. </returns>
      <param name="response"> The <see cref="T:System.Net.Http.HttpResponseMessage" /> to evaluate for the characteristics  associated with the <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> of the <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" />. </param>
    </member>
    <member name="T:System.Net.Http.Formatting.QueryStringMapping">
      <summary> Class that provides <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />s from query strings. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.QueryStringMapping.#ctor(System.String,System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.QueryStringMapping" /> class. </summary>
      <param name="queryStringParameterName">The name of the query string parameter to match, if present.</param>
      <param name="queryStringParameterValue">The value of the query string parameter specified by queryStringParameterName.</param>
      <param name="mediaType">The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> to use if the query parameter specified by queryStringParameterName is present and assigned the value specified by queryStringParameterValue.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.QueryStringMapping.#ctor(System.String,System.String,System.String)">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.QueryStringMapping" /> class. </summary>
      <param name="queryStringParameterName">The name of the query string parameter to match, if present.</param>
      <param name="queryStringParameterValue">The value of the query string parameter specified by queryStringParameterName.</param>
      <param name="mediaType">The media type to use if the query parameter specified by queryStringParameterName is present and assigned the value specified by queryStringParameterValue.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.QueryStringMapping.QueryStringParameterName">
      <summary> Gets the query string parameter name. </summary>
    </member>
    <member name="P:System.Net.Http.Formatting.QueryStringMapping.QueryStringParameterValue">
      <summary> Gets the query string parameter value. </summary>
    </member>
    <member name="T:System.Net.Http.Formatting.RequestHeaderMapping">
      <summary> This class provides a mapping from an arbitrary HTTP request header field to a <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> used to select <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> instances for handling the entity body of an <see cref="T:System.Net.Http.HttpRequestMessage" /> or <see cref="T:System.Net.Http.HttpResponseMessage" />. &lt;remarks&gt;This class only checks header fields associated with <see cref="M:HttpRequestMessage.Headers" /> for a match. It does not check header fields associated with <see cref="M:HttpResponseMessage.Headers" /> or <see cref="M:HttpContent.Headers" /> instances.&lt;/remarks&gt;</summary>
    </member>
    <member name="M:System.Net.Http.Formatting.RequestHeaderMapping.#ctor(System.String,System.String,System.StringComparison,System.Boolean,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.RequestHeaderMapping" /> class. </summary>
      <param name="headerName">Name of the header to match.</param>
      <param name="headerValue">The header value to match.</param>
      <param name="valueComparison">The <see cref="T:System.StringComparison" /> to use when matching headerValue.</param>
      <param name="isValueSubstring">if set to true then headerValue is  considered a match if it matches a substring of the actual header value.</param>
      <param name="mediaType">The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> to use if headerName and headerValue  is considered a match.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.RequestHeaderMapping.#ctor(System.String,System.String,System.StringComparison,System.Boolean,System.String)">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.RequestHeaderMapping" /> class. </summary>
      <param name="headerName">Name of the header to match.</param>
      <param name="headerValue">The header value to match.</param>
      <param name="valueComparison">The value comparison to use when matching headerValue.</param>
      <param name="isValueSubstring">if set to true then headerValue is  considered a match if it matches a substring of the actual header value.</param>
      <param name="mediaType">The media type to use if headerName and headerValue  is considered a match.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.RequestHeaderMapping.HeaderName">
      <summary> Gets the name of the header to match. </summary>
    </member>
    <member name="P:System.Net.Http.Formatting.RequestHeaderMapping.HeaderValue">
      <summary> Gets the header value to match. </summary>
    </member>
    <member name="P:System.Net.Http.Formatting.RequestHeaderMapping.HeaderValueComparison">
      <summary> Gets the <see cref="T:System.StringComparison" /> to use when matching <see cref="M:HeaderValue" />. </summary>
    </member>
    <member name="P:System.Net.Http.Formatting.RequestHeaderMapping.IsValueSubstring">
      <summary> Gets a value indicating whether <see cref="M:HeaderValue" /> is  a matched as a substring of the actual header value. this instance is value substring. </summary>
      <returns>true<see cref="P:System.Net.Http.Formatting.RequestHeaderMapping.HeaderValue" />false</returns>
    </member>
    <member name="M:System.Net.Http.Formatting.RequestHeaderMapping.OnTryMatchMediaType(System.Net.Http.HttpRequestMessage)">
      <summary> Returns a value indicating whether the current <see cref="T:System.Net.Http.Formatting.RequestHeaderMapping" /> instance can return a <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> from request. </summary>
      <returns> The quality of the match. It must be between 0.0 and 1.0. A value of 0.0 signifies no match. A value of 1.0 signifies a complete match. </returns>
      <param name="request">The <see cref="T:System.Net.Http.HttpRequestMessage" /> to check.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.RequestHeaderMapping.OnTryMatchMediaType(System.Net.Http.HttpResponseMessage)">
      <summary> Returns a value indicating whether the current <see cref="T:System.Net.Http.Formatting.RequestHeaderMapping" /> instance can return a <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> from response. </summary>
      <returns> The quality of the match. It must be between 0.0 and 1.0. A value of 0.0 signifies no match. A value of 1.0 signifies a complete match. </returns>
      <param name="response">The <see cref="T:System.Net.Http.HttpResponseMessage" /> to check.</param>
    </member>
    <member name="T:System.Net.Http.Formatting.UriPathExtensionMapping">
      <summary> Class that provides <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />s from path extensions appearing in a <see cref="T:System.Uri" />. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.#ctor(System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" /> class. </summary>
      <param name="uriPathExtension">The extension corresponding to mediaType. This value should not include a dot or wildcards.</param>
      <param name="mediaType">The <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> that will be returned if uriPathExtension is matched.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.#ctor(System.String,System.String)">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" /> class. </summary>
      <param name="uriPathExtension">The extension corresponding to mediaType. This value should not include a dot or wildcards.</param>
      <param name="mediaType">The media type that will be returned if uriPathExtension is matched.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.UriPathExtensionMapping.UriPathExtension">
      <summary> Gets the <see cref="T:System.Uri" /> path extension. </summary>
    </member>
    <member name="T:System.Net.Http.Formatting.XmlMediaTypeFormatter">
      <summary>
        <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> class to handle Xml. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.#ctor">
      <summary> Initializes a new instance of the <see cref="T:System.Net.Http.Formatting.XmlMediaTypeFormatter" /> class. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.CanReadType(System.Type)">
      <summary> Determines whether this <see cref="T:System.Net.Http.Formatting.XmlMediaTypeFormatter" /> can read objects of the specified type. </summary>
      <returns>true if objects of this type can be read, otherwise false.</returns>
      <param name="type">The type of object that will be read.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.CanWriteType(System.Type)">
      <summary> Determines whether this <see cref="T:System.Net.Http.Formatting.XmlMediaTypeFormatter" /> can write objects of the specified type. </summary>
      <returns>true if objects of this type can be written, otherwise false.</returns>
      <param name="type">The type of object that will be written.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.XmlMediaTypeFormatter.CharacterEncoding">
      <summary> Gets or sets the <see cref="T:System.Text.Encoding" /> to use when writing data. </summary>
      <returns>
        <see cref="T:System.Text.Encoding" />
      </returns>
    </member>
    <member name="P:System.Net.Http.Formatting.XmlMediaTypeFormatter.DefaultMediaType">
      <summary> Gets the default media type for xml, namely "application/xml". </summary>
      <returns>&lt;remarks&gt; The default media type does not have any charset parameter as  the <see cref="T:System.Text.Encoding" /> can be configured on a per <see cref="T:System.Net.Http.Formatting.XmlMediaTypeFormatter" />  instance basis. &lt;/remarks&gt;<see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /></returns>
    </member>
    <member name="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.OnReadFromStreamAsync(System.Void,System.Object,System.Type,System.IO.Stream)"></member>
    <member name="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.OnWriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Formatting.FormatterContext,System.Net.TransportContext)">
      <summary> Called during serialization to write an object of the specified type to the specified stream. </summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that will write the value to the stream.</returns>
      <param name="type">The type of object to write.</param>
      <param name="value">The object to write.</param>
      <param name="stream">The <see cref="T:System.IO.Stream" /> to which to write.</param>
      <param name="contentHeaders">The <see cref="T:System.Net.Http.Headers.HttpContentHeaders" /> for the content being written.</param>
      <param name="formatterContext">The <see cref="T:System.Net.Http.Formatting.FormatterContext" /> containing the respective request or response.</param>
      <param name="transportContext">The <see cref="T:System.Net.TransportContext" />.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.RemoveSerializer(System.Type)">
      <summary> Unregisters the serializer currently associated with the given type. </summary>
      <returns>true if a serializer was registered for the type; otherwise false.</returns>
      <param name="type">The type of object whose serializer should be removed.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.SetSerializer``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary> Registers the <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> to use to read or write the specified &lt;typeparamref name="T" /&gt; type. </summary>
      <param name="serializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> instance to use.</param>
      <typeparam name="T">The type of object that will be serialized or deserialized with serializer.</typeparam>
    </member>
    <member name="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.SetSerializer(System.Type,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary> Registers the <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> to use to read or write the specified type. </summary>
      <param name="type">The type of object that will be serialized or deserialized with serializer.</param>
      <param name="serializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> instance to use.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.SetSerializer(System.Type,System.Xml.Serialization.XmlSerializer)">
      <summary> Registers the <see cref="T:System.Xml.Serialization.XmlSerializer" /> to use to read or write the specified type. </summary>
      <param name="type">The type of objects for which serializer will be used.</param>
      <param name="serializer">The <see cref="T:System.Xml.Serialization.XmlSerializer" /> instance to use.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.XmlMediaTypeFormatter.SetSerializer``1(System.Xml.Serialization.XmlSerializer)">
      <summary> Registers the <see cref="T:System.Xml.Serialization.XmlSerializer" /> to use to read or write the specified &lt;typeparamref name="T" /&gt; type. </summary>
      <param name="serializer">The <see cref="T:System.Xml.Serialization.XmlSerializer" /> instance to use.</param>
      <typeparam name="T">The type of object that will be serialized or deserialized with serializer.</typeparam>
    </member>
    <member name="P:System.Net.Http.Formatting.XmlMediaTypeFormatter.UseDataContractSerializer">
      <summary> Gets or sets a value indicating whether to use <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> by default. </summary>
      <returns>true<see cref="T:System.Runtime.Serialization.DataContractSerializer" />falsefalse</returns>
    </member>
  </members>
</doc>