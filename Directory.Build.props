<Project>
  <!-- Set the repository root into a variable -->
  <PropertyGroup>
    <SourceRoot>$(MSBuildThisFileDirectory)</SourceRoot>
  </PropertyGroup>

  <!-- Set common properties regarding assembly information and nuget packages -->
  <PropertyGroup>
    <Authors>Microsoft</Authors>
    <Product>Microsoft Orleans</Product>
    <Copyright>Â© Microsoft Corporation. All rights reserved.</Copyright>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/dotnet/Orleans</PackageProjectUrl>
    <PackageIcon>logo_128.png</PackageIcon>
    <PackageTags>Orleans Cloud-Computing Actor-Model Actors Distributed-Systems C# .NET</PackageTags>
    <PackageReleaseNotes></PackageReleaseNotes>
    <RepositoryUrl>https://github.com/dotnet/Orleans</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <IncludeSymbols>true</IncludeSymbols>
    <IncludeSource>true</IncludeSource>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>

  <ItemGroup>
    <None Include="$(SourceRoot)assets/logo_128.png" Pack="true" Visible="false" PackagePath="/" />
  </ItemGroup>

  <!-- Common compile parameters -->
  <PropertyGroup>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <NoWarn>$(NoWarn);1591;2003</NoWarn>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <!-- We use full (Windows PDBs) until cross platform support for source link will get better -->
    <DebugType>full</DebugType>
  </PropertyGroup>

  <!-- FSharp SDK overrides -->
  <PropertyGroup>
    <DisableImplicitSystemValueTupleReference>true</DisableImplicitSystemValueTupleReference>
    <DisableImplicitFSharpCoreReference>true</DisableImplicitFSharpCoreReference>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <TestProjectTargetFramework>net461</TestProjectTargetFramework>
  </PropertyGroup>

  <!-- Shared Package Versions -->
  <PropertyGroup>
    <!-- System packages -->
    <SystemRuntimeVersion>4.3.1</SystemRuntimeVersion>
    <SystemDataSqlClientVersion>4.7.0</SystemDataSqlClientVersion>
    <SystemDataCommonVersion>4.3.0</SystemDataCommonVersion>

    <SystemCollectionsImmutableVersion>1.6.0</SystemCollectionsImmutableVersion>
    <SystemRuntimeCompilerServicesUnsafeVersion>4.6.0</SystemRuntimeCompilerServicesUnsafeVersion>
    <SystemNetHttpVersion>4.3.4</SystemNetHttpVersion>
    <SystemReflectionMetadataVersion>1.7.0</SystemReflectionMetadataVersion>
    <SystemReflectionTypeExtensionsVersion>4.6.0</SystemReflectionTypeExtensionsVersion>
    <SystemValueTupleVersion>4.5.0</SystemValueTupleVersion>
    <SystemReflectionEmitVersion>4.6.0</SystemReflectionEmitVersion>
    <SystemThreadingTasksExtensionsVersion>4.5.3</SystemThreadingTasksExtensionsVersion>
    <SystemThreadingChannelsVersion>4.6.0</SystemThreadingChannelsVersion>
    <SystemBuffersVersion>4.5.0</SystemBuffersVersion>
    <SystemMemoryVersion>4.5.3</SystemMemoryVersion>
    <SystemIOPipelinesVersion>4.6.0</SystemIOPipelinesVersion>
    <SystemCodeDomVersion>4.6.0</SystemCodeDomVersion>

    <!-- Microsoft packages -->
    <MicrosoftBuildVersion>16.3.0</MicrosoftBuildVersion>
    <MicrosoftCodeAnalysisVersion>3.3.1</MicrosoftCodeAnalysisVersion>
    <MicrosoftWin32RegistryVersion>4.6.0</MicrosoftWin32RegistryVersion>
    <MicrosoftBclAsyncInterfacesVersion>1.0.0</MicrosoftBclAsyncInterfacesVersion>

    <MicrosoftAspNetCoreConnectionsAbstractionsVersion>3.0.0</MicrosoftAspNetCoreConnectionsAbstractionsVersion>
    <MicrosoftExtensionsConfigurationBinderVersion>3.0.0</MicrosoftExtensionsConfigurationBinderVersion>
    <MicrosoftExtensionsConfigurationEnvironmentVariablesVersion>3.0.0</MicrosoftExtensionsConfigurationEnvironmentVariablesVersion>
    <MicrosoftExtensionsConfigurationJsonVersion>3.0.0</MicrosoftExtensionsConfigurationJsonVersion>
    <MicrosoftExtensionsConfigurationVersion>3.0.0</MicrosoftExtensionsConfigurationVersion>
    <MicrosoftExtensionsDependencyInjectionVersion>3.0.0</MicrosoftExtensionsDependencyInjectionVersion>
    <MicrosoftExtensionsDependencyModelVersion>3.0.0</MicrosoftExtensionsDependencyModelVersion>
    <MicrosoftExtensionsLoggingVersion>3.0.0</MicrosoftExtensionsLoggingVersion>
    <MicrosoftExtensionsOptionsConfigurationExtensionsVersion>3.0.0</MicrosoftExtensionsOptionsConfigurationExtensionsVersion>
    <MicrosoftExtensionsOptionsVersion>3.0.0</MicrosoftExtensionsOptionsVersion>
    <MicrosoftExtensionsHostingAbstractionsVersion>3.0.0</MicrosoftExtensionsHostingAbstractionsVersion>
    <MicrosoftExtensionsHostingVersion>3.0.0</MicrosoftExtensionsHostingVersion>

    <MicrosoftApplicationInsightsVersion>2.4.0</MicrosoftApplicationInsightsVersion>
    <MicrosoftAzureCosmosTableVersion>1.0.5</MicrosoftAzureCosmosTableVersion>
    <MicrosoftAzureEventHubsVersion>4.1.0</MicrosoftAzureEventHubsVersion>
    <MicrosoftAzureStorageBlobVersion>11.1.0</MicrosoftAzureStorageBlobVersion>
    <MicrosoftAzureStorageQueueVersion>11.1.0</MicrosoftAzureStorageQueueVersion>
    <MicrosoftDataSQLiteVersion>3.0.0</MicrosoftDataSQLiteVersion>
    <MicrosoftServiceFabricServicesVersion>3.4.664</MicrosoftServiceFabricServicesVersion>

    <FSharpCoreVersion>4.7.0</FSharpCoreVersion>

    <!-- 3rd party packages -->
    <AWSSDKDynamoDBv2Version>3.3.102.2</AWSSDKDynamoDBv2Version>
    <AWSSDKSQSVersion>3.3.2.7</AWSSDKSQSVersion>
    <BondCoreCSharpVersion>5.3.1</BondCoreCSharpVersion>
    <ConsulVersion>0.7.2.3</ConsulVersion>
    <GoogleCloudPubSubV1Version>1.0.0-beta13</GoogleCloudPubSubV1Version>
    <GoogleProtobufVersion>3.4.0</GoogleProtobufVersion>
    <ProtobufNetVersion>2.3.7</ProtobufNetVersion>
    <MySqlDataVersion>6.9.9</MySqlDataVersion>
    <NewRelicAgentApiVersion>8.0.0.0</NewRelicAgentApiVersion>
    <NewtonsoftJsonVersion>10.0.3</NewtonsoftJsonVersion>
    <NpgsqlVersion>3.1.9</NpgsqlVersion>
    <NSubstituteVersion>4.2.0</NSubstituteVersion>
    <NSubstituteAnalyzersCSharpVersion>1.0.10</NSubstituteAnalyzersCSharpVersion>
    <ZooKeeperNetExVersion>3.4.12.1</ZooKeeperNetExVersion>

    <!-- Test related packages -->
    <FluentAssertionsVersion>4.19.4</FluentAssertionsVersion>
    <MicrosoftTestSdkVersion>16.3.0</MicrosoftTestSdkVersion>
    <BenchmarkDotNetVersion>0.11.5</BenchmarkDotNetVersion>
    <XunitSkippableFactVersion>1.3.12</XunitSkippableFactVersion>
    <DotNetxUnitVersion>2.3.1</DotNetxUnitVersion>
    <xUnitVersion>2.4.1</xUnitVersion>
    <NodaTimeVersion>2.4.7</NodaTimeVersion>

    <!-- Tooling related packages -->
    <SourceLinkVersion>2.8.3</SourceLinkVersion>
  </PropertyGroup>

  <!-- Versioning properties -->
  <PropertyGroup>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <VersionPrefix Condition=" '$(VersionPrefix)'=='' ">3.0.0</VersionPrefix>
  </PropertyGroup>

  <!-- For Debug builds generated a date/time dependent version suffix -->
  <PropertyGroup Condition=" '$(Configuration)'=='Debug' ">
    <VersionSuffix Condition=" '$(VersionSuffix)'=='' ">dev</VersionSuffix>
    <VersionSuffix Condition=" '$(VersionDateSuffix)'!='' ">$(VersionSuffix)-$(VersionDateSuffix)</VersionSuffix>
  </PropertyGroup>

  <PropertyGroup Condition=" $(FullBuild)=='' ">
    <FullBuild>true</FullBuild>
  </PropertyGroup>

  <!-- Inner dependency versions -->
  <PropertyGroup Condition="$(FullBuild) != 'true'">
    <OrleansCoreAbstractionsVersion>2.3.0</OrleansCoreAbstractionsVersion>
    <OrleansRuntimeAbstractionsVersion>2.3.0</OrleansRuntimeAbstractionsVersion>
    <OrleansCoreVersion>2.3.0</OrleansCoreVersion>
    <OrleansRuntimeVersion>2.3.0</OrleansRuntimeVersion>
    <OrleansProvidersVersion>2.3.0</OrleansProvidersVersion>
    <OrleansExtensionsVersion>2.3.0</OrleansExtensionsVersion>
    <OrleansEventSourcingVersion>2.3.0</OrleansEventSourcingVersion>
    <OrleansAdoNetVersion>2.3.0</OrleansAdoNetVersion>
    <OrleansAWSVersion>2.3.0</OrleansAWSVersion>
    <OrleansAzureClusteringVersion>2.3.0</OrleansAzureClusteringVersion>
    <OrleansAzureStreamingVersion>2.3.0</OrleansAzureStreamingVersion>
    <OrleansAzureEventHubsVersion>2.3.0</OrleansAzureEventHubsVersion>
    <OrleansAzurePersistenceVersion>2.3.0</OrleansAzurePersistenceVersion>
    <OrleansAzureRemindersVersion>2.3.0</OrleansAzureRemindersVersion>
    <OrleansAzureMetapackageVersion>2.3.0</OrleansAzureMetapackageVersion>
    <OrleansGoogleCloudProviderVersion>2.3.0</OrleansGoogleCloudProviderVersion>
    <OrleansAzureCloudServicesVersion>2.3.0</OrleansAzureCloudServicesVersion>
    <OrleansTestingHostVersion>2.3.0</OrleansTestingHostVersion>
    <OrleansTransactionsVersion>2.3.0</OrleansTransactionsVersion>
    <OrleansServiceFabricVersion>2.3.0</OrleansServiceFabricVersion>
    <OrleansSerializersVersion>2.3.0</OrleansSerializersVersion>
    <OrleansToolsVersion>2.3.0</OrleansToolsVersion>
    <OrleansClientVersion>2.3.0</OrleansClientVersion>
    <OrleansServerVersion>2.3.0</OrleansServerVersion>
    <OrleansCodegenVersion>2.3.0</OrleansCodegenVersion>
    <OrleansEventHubProviderVersion>2.3.0</OrleansEventHubProviderVersion>
    <OrleansTelemetryConsumersVersion>2.3.0</OrleansTelemetryConsumersVersion>
  </PropertyGroup>

  <PropertyGroup Condition="$(FullBuild) == 'true'">
    <OrleansCoreAbstractionsVersion>$(VersionPrefix)</OrleansCoreAbstractionsVersion>
    <OrleansRuntimeAbstractionsVersion>$(VersionPrefix)</OrleansRuntimeAbstractionsVersion>
    <OrleansCoreVersion>$(VersionPrefix)</OrleansCoreVersion>
    <OrleansRuntimeVersion>$(VersionPrefix)</OrleansRuntimeVersion>
    <OrleansProvidersVersion>$(VersionPrefix)</OrleansProvidersVersion>
    <OrleansExtensionsVersion>$(VersionPrefix)</OrleansExtensionsVersion>
    <OrleansEventSourcingVersion>$(VersionPrefix)</OrleansEventSourcingVersion>
    <OrleansAdoNetVersion>$(VersionPrefix)</OrleansAdoNetVersion>
    <OrleansAWSVersion>$(VersionPrefix)</OrleansAWSVersion>
    <OrleansAzureClusteringVersion>$(VersionPrefix)</OrleansAzureClusteringVersion>
    <OrleansAzureStreamingVersion>$(VersionPrefix)</OrleansAzureStreamingVersion>
    <OrleansAzureEventHubsVersion>$(VersionPrefix)</OrleansAzureEventHubsVersion>
    <OrleansAzurePersistenceVersion>$(VersionPrefix)</OrleansAzurePersistenceVersion>
    <OrleansAzureRemindersVersion>$(VersionPrefix)</OrleansAzureRemindersVersion>
    <OrleansAzureMetapackageVersion>$(VersionPrefix)</OrleansAzureMetapackageVersion>
    <OrleansGoogleCloudProviderVersion>$(VersionPrefix)</OrleansGoogleCloudProviderVersion>
    <OrleansAzureCloudServicesVersion>$(VersionPrefix)</OrleansAzureCloudServicesVersion>
    <OrleansTestingHostVersion>$(VersionPrefix)</OrleansTestingHostVersion>
    <OrleansTransactionsVersion>$(VersionPrefix)</OrleansTransactionsVersion>
    <OrleansServiceFabricVersion>$(VersionPrefix)</OrleansServiceFabricVersion>
    <OrleansSerializersVersion>$(VersionPrefix)</OrleansSerializersVersion>
    <OrleansToolsVersion>$(VersionPrefix)</OrleansToolsVersion>
    <OrleansClientVersion>$(VersionPrefix)</OrleansClientVersion>
    <OrleansServerVersion>$(VersionPrefix)</OrleansServerVersion>
    <OrleansCodegenVersion>$(VersionPrefix)</OrleansCodegenVersion>
    <OrleansEventHubProviderVersion>$(VersionPrefix)</OrleansEventHubProviderVersion>
    <OrleansTelemetryConsumersVersion>$(VersionPrefix)</OrleansTelemetryConsumersVersion>
  </PropertyGroup>

  <!-- Set output folder for created NuGet packages -->
  <PropertyGroup>
    <PackageOutputPath Condition=" '$(PackageOutputPath)'=='' ">$(SourceRoot)/Artifacts/$(Configuration)</PackageOutputPath>
  </PropertyGroup>

  <Choose>
    <When Condition="'$(OfficialBuild)' != 'true'">
      <!-- On non-official builds we don't burn in a git sha.  In large part because it
           hurts our determinism efforts as binaries which should be the same between
           builds will not (due to developers building against different HEAD
           values -->
      <PropertyGroup>
        <GitHeadSha>&lt;developer build&gt;</GitHeadSha>
      </PropertyGroup>
    </When>
    <When Condition="'$(BUILD_SOURCEVERSION)' != ''">
      <PropertyGroup>
        <GitHeadSha>$(BUILD_SOURCEVERSION)</GitHeadSha>
      </PropertyGroup>
    </When>
    <When Condition="'$(BUILD_SOURCEVERSION)' == '' AND '$(GIT_COMMIT)' != ''">
      <PropertyGroup>
        <GitHeadSha>$(GIT_COMMIT)</GitHeadSha>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <GitHeadSha>Not found</GitHeadSha>
        <DotGitDir>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory).git'))</DotGitDir>
        <HeadFileContent Condition="Exists('$(DotGitDir)/HEAD')">$([System.IO.File]::ReadAllText('$(DotGitDir)/HEAD').Trim())</HeadFileContent>
        <RefPath Condition="$(HeadFileContent.StartsWith('ref: '))">$(DotGitDir)/$(HeadFileContent.Substring(5))</RefPath>
        <GitHeadSha Condition="'$(RefPath)' != '' AND Exists('$(RefPath)')">$([System.IO.File]::ReadAllText('$(RefPath)').Trim())</GitHeadSha>
        <GitHeadSha Condition="'$(HeadFileContent)' != '' AND '$(RefPath)' == ''">$(HeadFileContent)</GitHeadSha>
      </PropertyGroup>
    </Otherwise>
  </Choose>
</Project>
