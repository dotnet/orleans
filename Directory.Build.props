<Project>
  <!-- Set the repository root into a variable -->
  <PropertyGroup>
    <SourceRoot>$(MSBuildThisFileDirectory)</SourceRoot>
  </PropertyGroup>

  <!-- Set common properties regarding assembly information and nuget packages -->
  <PropertyGroup>
    <Authors>Microsoft</Authors>
    <Product>Microsoft Orleans</Product>
    <Copyright>Â© Microsoft Corporation. All rights reserved.</Copyright>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/dotnet/orleans</PackageProjectUrl>
    <PackageIcon>logo_128.png</PackageIcon>
    <PackageTags>Orleans Cloud-Computing Actor-Model Actors Distributed-Systems C# .NET</PackageTags>
    <PackageReleaseNotes></PackageReleaseNotes>
    <PublicRepositoryUrl>https://github.com/dotnet/orleans</PublicRepositoryUrl>
    <PrivateRepositoryUrl>$(RepositoryUrl)</PrivateRepositoryUrl>
    <RepositoryUrl>$(RepositoryUrl)</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <LangVersion>latest</LangVersion>
    <Features>strict</Features>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <DebugType>embedded</DebugType>
    <IncludePackageReferencesDuringMarkupCompilation>true</IncludePackageReferencesDuringMarkupCompilation>
    <IncludeSymbols>false</IncludeSymbols>
    <IncludeSource>false</IncludeSource>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TF_BUILD)' == 'true' or '$(GITHUB_ACTIONS)' == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <ItemGroup>
    <None Include="$(SourceRoot)assets/logo_128.png" Pack="true" Visible="false" PackagePath="/" />
  </ItemGroup>

  <!-- Common compile parameters -->
  <PropertyGroup>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <NoWarn>$(NoWarn);1591;2003</NoWarn>
  </PropertyGroup>

  <!-- FSharp SDK overrides -->
  <PropertyGroup>
    <DisableImplicitSystemValueTupleReference>true</DisableImplicitSystemValueTupleReference>
    <DisableImplicitFSharpCoreReference>true</DisableImplicitFSharpCoreReference>
  </PropertyGroup>

  <!-- Shared Package Versions -->
  <PropertyGroup>
    <!-- System packages -->
    <SystemDiagnosticsPerformanceCounterVersion>6.0.0</SystemDiagnosticsPerformanceCounterVersion>
    <SystemCollectionsImmutableVersion>6.0.0</SystemCollectionsImmutableVersion>
    <SystemDiagnosticsDiagnosticSourceVersion>6.0.0</SystemDiagnosticsDiagnosticSourceVersion>
    <SystemNetNameResolutionVersion>4.3.0</SystemNetNameResolutionVersion>
    <MicrosoftDotNetPlatformAbstractionsVersion>3.1.6</MicrosoftDotNetPlatformAbstractionsVersion>
    <SystemSecurityCryptographyCngVersion>5.0.0</SystemSecurityCryptographyCngVersion>
    <SystemIoPipelinesVersion>6.0.1</SystemIoPipelinesVersion>
    <SystemMemoryData>1.0.1</SystemMemoryData>

    <!-- Microsoft packages -->
    <MicrosoftBuildVersion>17.0.0</MicrosoftBuildVersion>
    <MicrosoftCodeAnalysisVersion>4.0.1</MicrosoftCodeAnalysisVersion>
    <MicrosoftCodeAnalysisAnalyzersVersion>3.3.3</MicrosoftCodeAnalysisAnalyzersVersion>
    <MicrosoftCSharpVersion>4.7.0</MicrosoftCSharpVersion>

    <MicrosoftAspNetCoreConnectionsAbstractionsVersion>6.0.1</MicrosoftAspNetCoreConnectionsAbstractionsVersion>
    <MicrosoftExtensionsConfigurationVersion>6.0.0</MicrosoftExtensionsConfigurationVersion>
    <MicrosoftExtensionsDependencyInjectionVersion>6.0.0</MicrosoftExtensionsDependencyInjectionVersion>
    <MicrosoftExtensionsDependencyModelVersion>6.0.0</MicrosoftExtensionsDependencyModelVersion>
    <MicrosoftExtensionsLoggingVersion>6.0.0</MicrosoftExtensionsLoggingVersion>
    <MicrosoftExtensionsObjectPoolVersion>6.0.1</MicrosoftExtensionsObjectPoolVersion>
    <MicrosoftExtensionsOptionsVersion>6.0.0</MicrosoftExtensionsOptionsVersion>
    <MicrosoftExtensionsHttpVersion>6.0.0</MicrosoftExtensionsHttpVersion>
    <MicrosoftExtensionsHostingAbstractionsVersion>6.0.0</MicrosoftExtensionsHostingAbstractionsVersion>
    <MicrosoftExtensionsHostingVersion>6.0.0</MicrosoftExtensionsHostingVersion>

    <MicrosoftApplicationInsightsVersion>2.20.0</MicrosoftApplicationInsightsVersion>
    <AzureDataTablesVersion>12.4.0</AzureDataTablesVersion>
    <AzureCoreVersion>1.22.0</AzureCoreVersion>
    <AzureMessagingEventHubs>5.6.2</AzureMessagingEventHubs>
    <AzureStorageBlobsVersion>12.10.0</AzureStorageBlobsVersion>
    <AzureStorageQueuesVersion>12.8.0</AzureStorageQueuesVersion>
    <MicrosoftServiceFabricServicesVersion>4.1.456</MicrosoftServiceFabricServicesVersion>

    <!-- 3rd party packages -->
    <AWSSDKDynamoDBv2Version>3.7.3.30</AWSSDKDynamoDBv2Version>
    <AWSSDKSQSVersion>3.7.2.14</AWSSDKSQSVersion>
    <BondCoreCSharpVersion>5.3.1</BondCoreCSharpVersion>
    <ConsulVersion>1.6.10.4</ConsulVersion>
    <GoogleCloudPubSubV1Version>1.0.0-beta13</GoogleCloudPubSubV1Version>
    <GoogleProtobufVersion>3.19.3</GoogleProtobufVersion>
    <ProtobufNetVersion>3.0.101</ProtobufNetVersion>
    <NewRelicAgentApiVersion>9.4.0</NewRelicAgentApiVersion>
    <NewtonsoftJsonVersion>13.0.1</NewtonsoftJsonVersion>
    <ZooKeeperNetExVersion>3.4.12.4</ZooKeeperNetExVersion>
    <StackExchangeRedisVersion>2.2.88</StackExchangeRedisVersion>
    <KubernetesClientVersion>7.0.7</KubernetesClientVersion>

    <!-- Test related packages -->
    <FluentAssertionsVersion>6.4.0</FluentAssertionsVersion>
    <MoqVersion>4.16.0</MoqVersion>
    <MicrosoftTestSdkVersion>17.0.0</MicrosoftTestSdkVersion>
    <BenchmarkDotNetVersion>0.13.1</BenchmarkDotNetVersion>
    <XunitSkippableFactVersion>1.4.13</XunitSkippableFactVersion>
    <xUnitVersion>2.4.1</xUnitVersion>
    <xUnitRunnerVersion>2.4.3</xUnitRunnerVersion>
    <NodaTimeVersion>3.0.9</NodaTimeVersion>
    <AutofacExtensionsDependencyInjectionVersion>7.2.0</AutofacExtensionsDependencyInjectionVersion>
    <StructureMapMicrosoftDependencyInjectionVersion>2.0.0</StructureMapMicrosoftDependencyInjectionVersion>
    <SystemCodeDomVersion>6.0.0</SystemCodeDomVersion>
    <MicrosoftNETFrameworkReferenceAssembliesVersion>1.0.2</MicrosoftNETFrameworkReferenceAssembliesVersion>
    <AzureIdentityVersion>1.5.0</AzureIdentityVersion>
    <AzureKeyVaultVersion>4.2.0</AzureKeyVaultVersion>
    <FSharpCoreVersion>6.0.1</FSharpCoreVersion>
    <NSubstituteVersion>4.3.0</NSubstituteVersion>
    <NSubstituteAnalyzersCSharpVersion>1.0.15</NSubstituteAnalyzersCSharpVersion>
    <CoverletVersion>3.0.3</CoverletVersion>
    <CsCheckVersion>2.4.2</CsCheckVersion>
    <DotnetReportGeneratorCliVersion>4.3.0</DotnetReportGeneratorCliVersion>
    <SystemDataSqlClientVersion>4.8.3</SystemDataSqlClientVersion>
    <NpgsqlVersion>6.0.2</NpgsqlVersion>
    <MySqlDataVersion>8.0.28</MySqlDataVersion>
    <MicrosoftExtensionsConfigurationAzureKeyVaultVersion>3.1.22</MicrosoftExtensionsConfigurationAzureKeyVaultVersion>
    <SystemCommandLineVersion>2.0.0-beta1.21308.1</SystemCommandLineVersion>
    <CrankVersion>0.2.0-alpha.21457.1</CrankVersion>
    <MessagePackVersion>2.3.85</MessagePackVersion>
    <ZeroFormatterVersion>1.6.4</ZeroFormatterVersion>
    <Utf8JsonVersion>1.3.7</Utf8JsonVersion>
    <SpanJsonVersion>3.2.0</SpanJsonVersion>
    <HyperionVersion>0.12.0</HyperionVersion>
    <GrpcToolsVersion>2.43.0</GrpcToolsVersion>

    <!-- Tooling related packages -->
    <SourceLinkVersion>1.1.1</SourceLinkVersion>
  </PropertyGroup>

  <!-- Versioning properties -->
  <PropertyGroup>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <VersionPrefix Condition=" '$(VersionPrefix)'=='' ">4.0.0</VersionPrefix>
  </PropertyGroup>

  <!-- For Debug builds generated a date/time dependent version suffix -->
  <PropertyGroup Condition=" '$(Configuration)'=='Debug' ">
    <VersionSuffix Condition=" '$(VersionSuffix)'=='' ">dev</VersionSuffix>
    <VersionSuffix Condition=" '$(VersionDateSuffix)'!='' ">$(VersionSuffix)-$(VersionDateSuffix)</VersionSuffix>
  </PropertyGroup>

  <Import Condition=" '$(OrleansBuildTimeCodeGen)' == 'true' " Project="$(MSBuildThisFileDirectory)src/Orleans.CodeGenerator/build/Microsoft.Orleans.CodeGenerator.props" />

  <!-- Set output folder for created NuGet packages -->
  <PropertyGroup>
    <PackageOutputPath Condition=" '$(PackageOutputPath)'=='' ">$(SourceRoot)/Artifacts/$(Configuration)</PackageOutputPath>
  </PropertyGroup>

  <!-- Set output folder for distributed test apps -->
  <PropertyGroup>
    <DistributedTestsOutputPath Condition=" '$(DistributedODistributedTestsOutputPathutputPath)'=='' ">$(SourceRoot)/Artifacts/DistributedTests</DistributedTestsOutputPath>
  </PropertyGroup>

  <Choose>
    <When Condition="'$(OfficialBuild)' != 'true'">
      <!-- On non-official builds we don't burn in a git sha.  In large part because it
           hurts our determinism efforts as binaries which should be the same between
           builds will not (due to developers building against different HEAD
           values -->
      <PropertyGroup>
        <GitHeadSha>&lt;developer build&gt;</GitHeadSha>
      </PropertyGroup>
    </When>
    <When Condition="'$(BUILD_SOURCEVERSION)' != ''">
      <PropertyGroup>
        <GitHeadSha>$(BUILD_SOURCEVERSION)</GitHeadSha>
      </PropertyGroup>
    </When>
    <When Condition="'$(BUILD_SOURCEVERSION)' == '' AND '$(GIT_COMMIT)' != ''">
      <PropertyGroup>
        <GitHeadSha>$(GIT_COMMIT)</GitHeadSha>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <GitHeadSha>Not found</GitHeadSha>
        <DotGitDir>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory).git'))</DotGitDir>
        <HeadFileContent Condition="Exists('$(DotGitDir)/HEAD')">$([System.IO.File]::ReadAllText('$(DotGitDir)/HEAD').Trim())</HeadFileContent>
        <RefPath Condition="$(HeadFileContent.StartsWith('ref: '))">$(DotGitDir)/$(HeadFileContent.Substring(5))</RefPath>
        <GitHeadSha Condition="'$(RefPath)' != '' AND Exists('$(RefPath)')">$([System.IO.File]::ReadAllText('$(RefPath)').Trim())</GitHeadSha>
        <GitHeadSha Condition="'$(HeadFileContent)' != '' AND '$(RefPath)' == ''">$(HeadFileContent)</GitHeadSha>
      </PropertyGroup>
    </Otherwise>
  </Choose>
</Project>
