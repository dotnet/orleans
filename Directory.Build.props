<Project>
  <!-- Set the repository root into a variable -->
  <PropertyGroup>
    <SourceRoot>$(MSBuildThisFileDirectory)</SourceRoot>
  </PropertyGroup>

  <!-- Set common properties regarding assembly information and nuget packages -->
  <PropertyGroup>
    <Authors>Microsoft</Authors>
    <Product>Microsoft Orleans</Product>
    <Copyright>Â© Microsoft Corporation. All rights reserved.</Copyright>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/dotnet/Orleans</PackageProjectUrl>
    <PackageIcon>logo_128.png</PackageIcon>
    <PackageTags>Orleans Cloud-Computing Actor-Model Actors Distributed-Systems C# .NET</PackageTags>
    <PackageReleaseNotes></PackageReleaseNotes>
    <RepositoryUrl>https://github.com/dotnet/Orleans</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <IncludeSymbols>true</IncludeSymbols>
    <IncludeSource>true</IncludeSource>
    <LangVersion>9.0</LangVersion>
    <Features>strict</Features>
  </PropertyGroup>

  <ItemGroup>
    <None Include="$(SourceRoot)assets/logo_128.png" Pack="true" Visible="false" PackagePath="/" />
  </ItemGroup>

  <!-- Common compile parameters -->
  <PropertyGroup>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <NoWarn>$(NoWarn);1591;2003</NoWarn>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <!-- We use full (Windows PDBs) until cross platform support for source link will get better -->
    <DebugType>full</DebugType>
    <DebugType Condition="$(TargetFramework)=='netcoreapp3.1' or $(TargetFramework)=='net5.0'">embedded</DebugType>
  </PropertyGroup>

  <!-- FSharp SDK overrides -->
  <PropertyGroup>
    <DisableImplicitSystemValueTupleReference>true</DisableImplicitSystemValueTupleReference>
    <DisableImplicitFSharpCoreReference>true</DisableImplicitFSharpCoreReference>
  </PropertyGroup>

  <!-- Shared Package Versions -->
  <PropertyGroup>
    <!-- System packages -->
    <SystemDiagnosticsPerformanceCounterVersion>5.0.0</SystemDiagnosticsPerformanceCounterVersion>
    <SystemNetNameResolutionVersion>4.3.0</SystemNetNameResolutionVersion>
    <MicrosoftDotNetPlatformAbstractionsVersion>3.1.6</MicrosoftDotNetPlatformAbstractionsVersion>
    <SystemSecurityCryptographyCngVersion>5.0.0</SystemSecurityCryptographyCngVersion>

    <!-- Microsoft packages -->
    <MicrosoftBuildVersion>16.8.0</MicrosoftBuildVersion>
    <MicrosoftCodeAnalysisVersion>3.8.0</MicrosoftCodeAnalysisVersion>
    <MicrosoftCodeAnalysisAnalyzersVersion>3.3.2</MicrosoftCodeAnalysisAnalyzersVersion>
    <MicrosoftCSharpVersion>4.7.0</MicrosoftCSharpVersion>

    <MicrosoftAspNetCoreConnectionsAbstractionsVersion>5.0.2</MicrosoftAspNetCoreConnectionsAbstractionsVersion>
    <MicrosoftExtensionsConfigurationVersion>5.0.0</MicrosoftExtensionsConfigurationVersion>
    <MicrosoftExtensionsDependencyModelVersion>5.0.0</MicrosoftExtensionsDependencyModelVersion>
    <MicrosoftExtensionsLoggingVersion>5.0.0</MicrosoftExtensionsLoggingVersion>
    <MicrosoftExtensionsObjectPoolVersion>5.0.2</MicrosoftExtensionsObjectPoolVersion>
    <MicrosoftExtensionsOptionsVersion>5.0.0</MicrosoftExtensionsOptionsVersion>
    <MicrosoftExtensionsHttpVersion>5.0.0</MicrosoftExtensionsHttpVersion>
    <MicrosoftExtensionsHostingAbstractionsVersion>5.0.0</MicrosoftExtensionsHostingAbstractionsVersion>
    <MicrosoftExtensionsHostingVersion>5.0.0</MicrosoftExtensionsHostingVersion>

    <MicrosoftApplicationInsightsVersion>2.16.0</MicrosoftApplicationInsightsVersion>
    <MicrosoftAzureCosmosTableVersion>1.0.5</MicrosoftAzureCosmosTableVersion>
    <AzureCoreVersion>1.9.0</AzureCoreVersion>
    <AzureMessagingEventHubs>5.3.0</AzureMessagingEventHubs>
    <AzureStorageBlobsVersion>12.4.4</AzureStorageBlobsVersion>
    <AzureStorageQueuesVersion>12.3.2</AzureStorageQueuesVersion>
    <MicrosoftServiceFabricServicesVersion>4.1.456</MicrosoftServiceFabricServicesVersion>

    <!-- used only in netstandard2.0 targets - dot not upgrade unless necessary -->
    <!-- on .NET Core 3.1+ runtimes these are inbox, so these versions are actually used only on .NET Framework 4.6.2+ -->
    <SystemCollectionsImmutableVersion>1.7.0</SystemCollectionsImmutableVersion>
    <SystemReflectionEmitVersion>4.7.0</SystemReflectionEmitVersion>
    <SystemReflectionMetadataVersion>1.8.0</SystemReflectionMetadataVersion>
    <SystemThreadingChannelsVersion>4.7.0</SystemThreadingChannelsVersion>
    <MicrosoftBclHashCodeVersion>1.0.0</MicrosoftBclHashCodeVersion>

    <!-- 3rd party packages -->
    <AWSSDKDynamoDBv2Version>3.3.102.2</AWSSDKDynamoDBv2Version>
    <AWSSDKSQSVersion>3.3.2.7</AWSSDKSQSVersion>
    <BondCoreCSharpVersion>5.3.1</BondCoreCSharpVersion>
    <ConsulVersion>0.7.2.3</ConsulVersion>
    <GoogleCloudPubSubV1Version>1.0.0-beta13</GoogleCloudPubSubV1Version>
    <GoogleProtobufVersion>3.4.0</GoogleProtobufVersion>
    <ProtobufNetVersion>3.0.73</ProtobufNetVersion>
    <NewRelicAgentApiVersion>8.0.0.0</NewRelicAgentApiVersion>
    <NewtonsoftJsonVersion>12.0.3</NewtonsoftJsonVersion>
    <ZooKeeperNetExVersion>3.4.12.4</ZooKeeperNetExVersion>
    <StackExchangeRedisVersion>2.0.601</StackExchangeRedisVersion>
    <KubernetesClientVersion>4.0.5</KubernetesClientVersion>

    <!-- Test related packages -->
    <FluentAssertionsVersion>4.19.4</FluentAssertionsVersion>
    <MoqVersion>4.16.0</MoqVersion>
    <MicrosoftTestSdkVersion>16.8.3</MicrosoftTestSdkVersion>
    <BenchmarkDotNetVersion>0.12.1</BenchmarkDotNetVersion>
    <XunitSkippableFactVersion>1.4.13</XunitSkippableFactVersion>
    <xUnitVersion>2.4.1</xUnitVersion>
    <NodaTimeVersion>3.0.5</NodaTimeVersion>
    <AutofacExtensionsDependencyInjectionVersion>7.1.0</AutofacExtensionsDependencyInjectionVersion>
    <StructureMapMicrosoftDependencyInjectionVersion>2.0.0</StructureMapMicrosoftDependencyInjectionVersion>
    <SystemCodeDomVersion>5.0.0</SystemCodeDomVersion>
    <MicrosoftNETFrameworkReferenceAssembliesVersion>1.0.0</MicrosoftNETFrameworkReferenceAssembliesVersion>
    <AzureIdentityVersion>1.3.0</AzureIdentityVersion>
    <FSharpCoreVersion>4.7.0</FSharpCoreVersion>
    <NSubstituteVersion>4.2.2</NSubstituteVersion>
    <NSubstituteAnalyzersCSharpVersion>1.0.14</NSubstituteAnalyzersCSharpVersion>

    <!-- Tooling related packages -->
    <SourceLinkVersion>2.8.3</SourceLinkVersion>
  </PropertyGroup>

  <!-- Versioning properties -->
  <PropertyGroup>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <VersionPrefix Condition=" '$(VersionPrefix)'=='' ">3.0.0</VersionPrefix>
  </PropertyGroup>

  <!-- For Debug builds generated a date/time dependent version suffix -->
  <PropertyGroup Condition=" '$(Configuration)'=='Debug' ">
    <VersionSuffix Condition=" '$(VersionSuffix)'=='' ">dev</VersionSuffix>
    <VersionSuffix Condition=" '$(VersionDateSuffix)'!='' ">$(VersionSuffix)-$(VersionDateSuffix)</VersionSuffix>
  </PropertyGroup>

  <PropertyGroup Condition=" $(FullBuild)=='' ">
    <FullBuild>true</FullBuild>
  </PropertyGroup>

  <!-- Inner dependency versions -->
  <PropertyGroup Condition="$(FullBuild) != 'true'">
    <OrleansCoreAbstractionsVersion>2.3.0</OrleansCoreAbstractionsVersion>
    <OrleansRuntimeAbstractionsVersion>2.3.0</OrleansRuntimeAbstractionsVersion>
    <OrleansCoreVersion>2.3.0</OrleansCoreVersion>
    <OrleansStreamingAbstractionsVersion>2.3.0</OrleansStreamingAbstractionsVersion>
    <OrleansStreamingVersion>2.3.0</OrleansStreamingVersion>
    <OrleansRuntimeVersion>2.3.0</OrleansRuntimeVersion>
    <OrleansPersistenceMemoryVersion>2.3.0</OrleansPersistenceMemoryVersion>
    <OrleansExtensionsVersion>2.3.0</OrleansExtensionsVersion>
    <OrleansEventSourcingVersion>2.3.0</OrleansEventSourcingVersion>
    <OrleansAdoNetVersion>2.3.0</OrleansAdoNetVersion>
    <OrleansAWSVersion>2.3.0</OrleansAWSVersion>
    <OrleansAzureClusteringVersion>2.3.0</OrleansAzureClusteringVersion>
    <OrleansAzureStreamingVersion>2.3.0</OrleansAzureStreamingVersion>
    <OrleansAzureEventHubsVersion>2.3.0</OrleansAzureEventHubsVersion>
    <OrleansAzurePersistenceVersion>2.3.0</OrleansAzurePersistenceVersion>
    <OrleansAzureRemindersVersion>2.3.0</OrleansAzureRemindersVersion>
    <OrleansAzureGrainDirectoryVersion>2.3.0</OrleansAzureGrainDirectoryVersion>
    <OrleansAzureMetapackageVersion>2.3.0</OrleansAzureMetapackageVersion>
    <OrleansGoogleCloudProviderVersion>2.3.0</OrleansGoogleCloudProviderVersion>
    <OrleansAzureCloudServicesVersion>2.3.0</OrleansAzureCloudServicesVersion>
    <OrleansTestingHostVersion>2.3.0</OrleansTestingHostVersion>
    <OrleansTransactionsVersion>2.3.0</OrleansTransactionsVersion>
    <OrleansServiceFabricVersion>4.1.456</OrleansServiceFabricVersion>
    <OrleansSerializersVersion>2.3.0</OrleansSerializersVersion>
    <OrleansToolsVersion>2.3.0</OrleansToolsVersion>
    <OrleansClientVersion>2.3.0</OrleansClientVersion>
    <OrleansServerVersion>2.3.0</OrleansServerVersion>
    <OrleansCodegenVersion>2.3.0</OrleansCodegenVersion>
    <OrleansEventHubProviderVersion>2.3.0</OrleansEventHubProviderVersion>
    <OrleansTelemetryConsumersVersion>2.3.0</OrleansTelemetryConsumersVersion>
  </PropertyGroup>

  <PropertyGroup Condition="$(FullBuild) == 'true'">
    <OrleansCoreAbstractionsVersion>$(VersionPrefix)</OrleansCoreAbstractionsVersion>
    <OrleansRuntimeAbstractionsVersion>$(VersionPrefix)</OrleansRuntimeAbstractionsVersion>
    <OrleansCoreVersion>$(VersionPrefix)</OrleansCoreVersion>
    <OrleansStreamingAbstractionsVersion>$(VersionPrefix)</OrleansStreamingAbstractionsVersion>
    <OrleansStreamingVersion>$(VersionPrefix)</OrleansStreamingVersion>
    <OrleansRuntimeVersion>$(VersionPrefix)</OrleansRuntimeVersion>
    <OrleansPersistenceMemoryVersion>$(VersionPrefix)</OrleansPersistenceMemoryVersion>
    <OrleansExtensionsVersion>$(VersionPrefix)</OrleansExtensionsVersion>
    <OrleansEventSourcingVersion>$(VersionPrefix)</OrleansEventSourcingVersion>
    <OrleansAdoNetVersion>$(VersionPrefix)</OrleansAdoNetVersion>
    <OrleansAWSVersion>$(VersionPrefix)</OrleansAWSVersion>
    <OrleansAzureClusteringVersion>$(VersionPrefix)</OrleansAzureClusteringVersion>
    <OrleansAzureStreamingVersion>$(VersionPrefix)</OrleansAzureStreamingVersion>
    <OrleansAzureEventHubsVersion>$(VersionPrefix)</OrleansAzureEventHubsVersion>
    <OrleansAzurePersistenceVersion>$(VersionPrefix)</OrleansAzurePersistenceVersion>
    <OrleansAzureRemindersVersion>$(VersionPrefix)</OrleansAzureRemindersVersion>
    <OrleansAzureGrainDirectoryVersion>$(VersionPrefix)</OrleansAzureGrainDirectoryVersion>
    <OrleansAzureMetapackageVersion>$(VersionPrefix)</OrleansAzureMetapackageVersion>
    <OrleansGoogleCloudProviderVersion>$(VersionPrefix)</OrleansGoogleCloudProviderVersion>
    <OrleansAzureCloudServicesVersion>$(VersionPrefix)</OrleansAzureCloudServicesVersion>
    <OrleansTestingHostVersion>$(VersionPrefix)</OrleansTestingHostVersion>
    <OrleansTransactionsVersion>$(VersionPrefix)</OrleansTransactionsVersion>
    <OrleansServiceFabricVersion>$(VersionPrefix)</OrleansServiceFabricVersion>
    <OrleansSerializersVersion>$(VersionPrefix)</OrleansSerializersVersion>
    <OrleansToolsVersion>$(VersionPrefix)</OrleansToolsVersion>
    <OrleansClientVersion>$(VersionPrefix)</OrleansClientVersion>
    <OrleansServerVersion>$(VersionPrefix)</OrleansServerVersion>
    <OrleansCodegenVersion>$(VersionPrefix)</OrleansCodegenVersion>
    <OrleansEventHubProviderVersion>$(VersionPrefix)</OrleansEventHubProviderVersion>
    <OrleansTelemetryConsumersVersion>$(VersionPrefix)</OrleansTelemetryConsumersVersion>
  </PropertyGroup>

  <!-- Set output folder for created NuGet packages -->
  <PropertyGroup>
    <PackageOutputPath Condition=" '$(PackageOutputPath)'=='' ">$(SourceRoot)/Artifacts/$(Configuration)</PackageOutputPath>
  </PropertyGroup>

  <Choose>
    <When Condition="'$(OfficialBuild)' != 'true'">
      <!-- On non-official builds we don't burn in a git sha.  In large part because it
           hurts our determinism efforts as binaries which should be the same between
           builds will not (due to developers building against different HEAD
           values -->
      <PropertyGroup>
        <GitHeadSha>&lt;developer build&gt;</GitHeadSha>
      </PropertyGroup>
    </When>
    <When Condition="'$(BUILD_SOURCEVERSION)' != ''">
      <PropertyGroup>
        <GitHeadSha>$(BUILD_SOURCEVERSION)</GitHeadSha>
      </PropertyGroup>
    </When>
    <When Condition="'$(BUILD_SOURCEVERSION)' == '' AND '$(GIT_COMMIT)' != ''">
      <PropertyGroup>
        <GitHeadSha>$(GIT_COMMIT)</GitHeadSha>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <GitHeadSha>Not found</GitHeadSha>
        <DotGitDir>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory).git'))</DotGitDir>
        <HeadFileContent Condition="Exists('$(DotGitDir)/HEAD')">$([System.IO.File]::ReadAllText('$(DotGitDir)/HEAD').Trim())</HeadFileContent>
        <RefPath Condition="$(HeadFileContent.StartsWith('ref: '))">$(DotGitDir)/$(HeadFileContent.Substring(5))</RefPath>
        <GitHeadSha Condition="'$(RefPath)' != '' AND Exists('$(RefPath)')">$([System.IO.File]::ReadAllText('$(RefPath)').Trim())</GitHeadSha>
        <GitHeadSha Condition="'$(HeadFileContent)' != '' AND '$(RefPath)' == ''">$(HeadFileContent)</GitHeadSha>
      </PropertyGroup>
    </Otherwise>
  </Choose>
</Project>
