//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Orleans.Configuration
{
    public partial class CustomStorageLogConsistencyOptions
    {
        public string PrimaryCluster { get { throw null; } set { } }
    }
}

namespace Orleans.EventSourcing
{
    [GenerateSerializer]
    public abstract partial class ConnectionIssue
    {
        [Id(2)]
        public int NumberOfConsecutiveFailures { get { throw null; } set { } }

        [Id(3)]
        public System.TimeSpan RetryDelay { get { throw null; } set { } }

        [Id(1)]
        public System.DateTime TimeOfFirstFailure { get { throw null; } set { } }

        [Id(0)]
        public System.DateTime TimeStamp { get { throw null; } set { } }

        public abstract System.TimeSpan ComputeRetryDelay(System.TimeSpan? previous);
    }

    public partial interface IConnectionIssueListener
    {
        void OnConnectionIssue(ConnectionIssue connectionIssue);
        void OnConnectionIssueResolved(ConnectionIssue connectionIssue);
    }

    public partial interface ILogConsistencyDiagnostics
    {
        void DisableStatsCollection();
        void EnableStatsCollection();
        LogConsistencyStatistics GetStats();
    }

    public partial interface ILogConsistencyProtocolMessage
    {
    }

    public partial interface ILogConsistencyProtocolParticipant : IGrain, Runtime.IAddressable
    {
        System.Threading.Tasks.Task DeactivateProtocolParticipant();
        System.Threading.Tasks.Task PostActivateProtocolParticipant();
        System.Threading.Tasks.Task PreActivateProtocolParticipant();
    }

    public partial interface ILogConsistencyProtocolServices
    {
        Runtime.GrainId GrainId { get; }

        string MyClusterId { get; }

        void CaughtException(string where, System.Exception e);
        void CaughtUserCodeException(string callback, string where, System.Exception e);
        T DeepCopy<T>(T value);
        void Log(Microsoft.Extensions.Logging.LogLevel level, string format, params object[] args);
        void ProtocolError(string msg, bool throwexception);
    }

    public partial interface ILogViewAdaptorFactory
    {
        bool UsesStorageProvider { get; }

        ILogViewAdaptor<TLogView, TLogEntry> MakeLogViewAdaptor<TLogView, TLogEntry>(ILogViewAdaptorHost<TLogView, TLogEntry> hostGrain, TLogView initialState, string grainTypeName, Storage.IGrainStorage grainStorage, ILogConsistencyProtocolServices services)
            where TLogView : class, new()
            where TLogEntry : class;
    }

    public partial interface ILogViewAdaptorHost<TLogView, TLogEntry> : IConnectionIssueListener
    {
        void OnViewChanged(bool tentative, bool confirmed);
        void UpdateView(TLogView view, TLogEntry entry);
    }

    public partial interface ILogViewAdaptor<TLogView, TLogEntry> : ILogViewRead<TLogView, TLogEntry>, ILogViewUpdate<TLogEntry>, ILogConsistencyDiagnostics where TLogView : new()
    {
        System.Threading.Tasks.Task PostOnActivate();
        System.Threading.Tasks.Task PostOnDeactivate();
        System.Threading.Tasks.Task PreOnActivate();
    }

    public partial interface ILogViewRead<TView, TLogEntry>
    {
        int ConfirmedVersion { get; }

        TView ConfirmedView { get; }

        TView TentativeView { get; }

        System.Collections.Generic.IEnumerable<TLogEntry> UnconfirmedSuffix { get; }

        System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<TLogEntry>> RetrieveLogSegment(int fromVersion, int toVersion);
    }

    public partial interface ILogViewUpdate<TLogEntry>
    {
        System.Threading.Tasks.Task ConfirmSubmittedEntries();
        void Submit(TLogEntry entry);
        void SubmitRange(System.Collections.Generic.IEnumerable<TLogEntry> entries);
        System.Threading.Tasks.Task Synchronize();
        System.Threading.Tasks.Task<bool> TryAppend(TLogEntry entry);
        System.Threading.Tasks.Task<bool> TryAppendRange(System.Collections.Generic.IEnumerable<TLogEntry> entries);
    }

    public abstract partial class JournaledGrain<TGrainState> : JournaledGrain<TGrainState, object> where TGrainState : class, new()
    {
    }

    public abstract partial class JournaledGrain<TGrainState, TEventBase> : LogConsistentGrain<TGrainState>, ILogConsistencyProtocolParticipant, IGrain, Runtime.IAddressable, ILogViewAdaptorHost<TGrainState, TEventBase>, IConnectionIssueListener where TGrainState : class, new()
        where TEventBase : class
    {
        protected override ILogViewAdaptorFactory DefaultAdaptorFactory { get { throw null; } }

        protected TGrainState State { get { throw null; } }

        protected TGrainState TentativeState { get { throw null; } }

        public System.Collections.Generic.IEnumerable<TEventBase> UnconfirmedEvents { get { throw null; } }

        protected int Version { get { throw null; } }

        protected System.Threading.Tasks.Task ConfirmEvents() { throw null; }

        protected void DisableStatsCollection() { }

        protected void EnableStatsCollection() { }

        protected LogConsistencyStatistics GetStats() { throw null; }

        protected override void InstallAdaptor(ILogViewAdaptorFactory factory, object initialState, string graintypename, Storage.IGrainStorage grainStorage, ILogConsistencyProtocolServices services) { }

        public override System.Threading.Tasks.Task OnActivateAsync(System.Threading.CancellationToken cancellationToken) { throw null; }

        protected virtual void OnConnectionIssue(ConnectionIssue issue) { }

        protected virtual void OnConnectionIssueResolved(ConnectionIssue issue) { }

        protected virtual void OnStateChanged() { }

        protected virtual void OnTentativeStateChanged() { }

        void IConnectionIssueListener.OnConnectionIssue(ConnectionIssue connectionIssue) { }

        void IConnectionIssueListener.OnConnectionIssueResolved(ConnectionIssue connectionIssue) { }

        System.Threading.Tasks.Task ILogConsistencyProtocolParticipant.DeactivateProtocolParticipant() { throw null; }

        System.Threading.Tasks.Task ILogConsistencyProtocolParticipant.PostActivateProtocolParticipant() { throw null; }

        System.Threading.Tasks.Task ILogConsistencyProtocolParticipant.PreActivateProtocolParticipant() { throw null; }

        void ILogViewAdaptorHost<TGrainState, TEventBase>.OnViewChanged(bool tentative, bool confirmed) { }

        void ILogViewAdaptorHost<TGrainState, TEventBase>.UpdateView(TGrainState view, TEventBase entry) { }

        protected virtual System.Threading.Tasks.Task<bool> RaiseConditionalEvent<TEvent>(TEvent @event)
            where TEvent : TEventBase { throw null; }

        protected virtual System.Threading.Tasks.Task<bool> RaiseConditionalEvents<TEvent>(System.Collections.Generic.IEnumerable<TEvent> events)
            where TEvent : TEventBase { throw null; }

        protected virtual void RaiseEvent<TEvent>(TEvent @event)
            where TEvent : TEventBase { }

        protected virtual void RaiseEvents<TEvent>(System.Collections.Generic.IEnumerable<TEvent> events)
            where TEvent : TEventBase { }

        protected System.Threading.Tasks.Task RefreshNow() { throw null; }

        protected System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<TEventBase>> RetrieveConfirmedEvents(int fromVersion, int toVersion) { throw null; }

        protected virtual void TransitionState(TGrainState state, TEventBase @event) { }
    }

    public partial class LogConsistencyStatistics
    {
        public System.Collections.Generic.Dictionary<string, long> EventCounters;
        public System.Collections.Generic.List<int> StabilizationLatenciesInMsecs;
    }

    public abstract partial class LogConsistentGrain<TView> : Grain, ILifecycleParticipant<Runtime.IGrainLifecycle>
    {
        protected abstract ILogViewAdaptorFactory DefaultAdaptorFactory { get; }

        protected abstract void InstallAdaptor(ILogViewAdaptorFactory factory, object state, string grainTypeName, Storage.IGrainStorage grainStorage, ILogConsistencyProtocolServices services);
        public virtual void Participate(Runtime.IGrainLifecycle lifecycle) { }
    }

    [GenerateSerializer]
    public sealed partial class ProtocolTransportException : Runtime.OrleansException
    {
        public ProtocolTransportException() { }

        [System.Obsolete]
        protected ProtocolTransportException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) { }

        public ProtocolTransportException(string msg, System.Exception exc) { }

        public ProtocolTransportException(string msg) { }

        public override string ToString() { throw null; }
    }
}

namespace Orleans.EventSourcing.Common
{
    [GenerateSerializer]
    public sealed partial class BatchedNotificationMessage : INotificationMessage, ILogConsistencyProtocolMessage
    {
        [Id(0)]
        public System.Collections.Generic.List<INotificationMessage> Notifications { get { throw null; } set { } }

        public int Version { get { throw null; } }
    }

    public partial interface INotificationMessage : ILogConsistencyProtocolMessage
    {
        int Version { get; }
    }

    public abstract partial class PrimaryBasedLogViewAdaptor<TLogView, TLogEntry, TSubmissionEntry> : ILogViewAdaptor<TLogView, TLogEntry>, ILogViewRead<TLogView, TLogEntry>, ILogViewUpdate<TLogEntry>, ILogConsistencyDiagnostics where TLogView : class, new()
        where TLogEntry : class where TSubmissionEntry : SubmissionEntry<TLogEntry>
    {
        protected RecordedConnectionIssue LastPrimaryIssue;
        protected LogConsistencyStatistics stats;
        protected PrimaryBasedLogViewAdaptor(ILogViewAdaptorHost<TLogView, TLogEntry> host, TLogView initialstate, ILogConsistencyProtocolServices services) { }

        public int ConfirmedVersion { get { throw null; } }

        public TLogView ConfirmedView { get { throw null; } }

        protected ILogViewAdaptorHost<TLogView, TLogEntry> Host { get { throw null; } }

        protected ILogConsistencyProtocolServices Services { get { throw null; } }

        protected virtual bool SupportSubmissions { get { throw null; } }

        public TLogView TentativeView { get { throw null; } }

        public System.Collections.Generic.IEnumerable<TLogEntry> UnconfirmedSuffix { get { throw null; } }

        public System.Threading.Tasks.Task ConfirmSubmittedEntries() { throw null; }

        protected TLogView CopyTentativeState() { throw null; }

        public void DisableStatsCollection() { }

        public virtual void EnableStatsCollection() { }

        protected System.Threading.Tasks.Task EnsureClusterJoinedAsync() { throw null; }

        protected abstract int GetConfirmedVersion();
        protected TSubmissionEntry[] GetCurrentBatchOfUpdates() { throw null; }

        protected int GetNumberPendingUpdates() { throw null; }

        public LogConsistencyStatistics GetStats() { throw null; }

        protected abstract void InitializeConfirmedView(TLogView initialstate);
        protected bool IsMyClusterJoined() { throw null; }

        protected abstract TLogView LastConfirmedView();
        protected abstract TSubmissionEntry MakeSubmissionEntry(TLogEntry entry);
        protected virtual INotificationMessage Merge(INotificationMessage earliermessage, INotificationMessage latermessage) { throw null; }

        protected void NotifyPromises(int count, bool success) { }

        protected virtual System.Threading.Tasks.Task<ILogConsistencyProtocolMessage> OnMessageReceived(ILogConsistencyProtocolMessage payload) { throw null; }

        protected virtual void OnNotificationReceived(INotificationMessage payload) { }

        public System.Threading.Tasks.Task<ILogConsistencyProtocolMessage> OnProtocolMessageReceived(ILogConsistencyProtocolMessage payLoad) { throw null; }

        public virtual System.Threading.Tasks.Task PostOnActivate() { throw null; }

        public virtual System.Threading.Tasks.Task PostOnDeactivate() { throw null; }

        public virtual System.Threading.Tasks.Task PreOnActivate() { throw null; }

        protected virtual void ProcessNotifications() { }

        protected abstract System.Threading.Tasks.Task ReadAsync();
        protected void RemoveStaleConditionalUpdates() { }

        public virtual System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<TLogEntry>> RetrieveLogSegment(int fromVersion, int length) { throw null; }

        public void Submit(TLogEntry logEntry) { }

        public void SubmitRange(System.Collections.Generic.IEnumerable<TLogEntry> logEntries) { }

        public System.Threading.Tasks.Task Synchronize() { throw null; }

        public System.Threading.Tasks.Task<bool> TryAppend(TLogEntry logEntry) { throw null; }

        public System.Threading.Tasks.Task<bool> TryAppendRange(System.Collections.Generic.IEnumerable<TLogEntry> logEntries) { throw null; }

        protected abstract System.Threading.Tasks.Task<int> WriteAsync();
    }

    [GenerateSerializer]
    public abstract partial class PrimaryOperationFailed : ConnectionIssue
    {
        [Id(0)]
        public System.Exception Exception { get { throw null; } set { } }

        public override System.TimeSpan ComputeRetryDelay(System.TimeSpan? previous) { throw null; }
    }

    public partial struct RecordedConnectionIssue
    {
        private object _dummy;
        private int _dummyPrimitive;
        public ConnectionIssue Issue { get { throw null; } }

        public readonly System.Threading.Tasks.Task DelayBeforeRetry() { throw null; }

        public void Record(ConnectionIssue newIssue, IConnectionIssueListener listener, ILogConsistencyProtocolServices services) { }

        public void Resolve(IConnectionIssueListener listener, ILogConsistencyProtocolServices services) { }

        public override readonly string ToString() { throw null; }
    }

    public static partial class StringEncodedWriteVector
    {
        public static bool FlipBit(ref string writeVector, string Replica) { throw null; }

        public static bool GetBit(string writeVector, string Replica) { throw null; }
    }

    public partial class SubmissionEntry<TLogEntry>
    {
        public int ConditionalPosition;
        public TLogEntry Entry;
        public System.Threading.Tasks.TaskCompletionSource<bool> ResultPromise;
        public System.DateTime SubmissionTime;
    }

    [GenerateSerializer]
    public sealed partial class VersionNotificationMessage : INotificationMessage, ILogConsistencyProtocolMessage
    {
        [Id(0)]
        public int Version { get { throw null; } set { } }
    }
}

namespace Orleans.EventSourcing.CustomStorage
{
    public partial interface ICustomStorageInterface<TState, TDelta>
    {
        System.Threading.Tasks.Task<bool> ApplyUpdatesToStorage(System.Collections.Generic.IReadOnlyList<TDelta> updates, int expectedVersion);
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<int, TState>> ReadStateFromStorage();
    }

    public partial class LogConsistencyProvider : ILogViewAdaptorFactory
    {
        public LogConsistencyProvider(Configuration.CustomStorageLogConsistencyOptions options) { }

        public string PrimaryCluster { get { throw null; } }

        public bool UsesStorageProvider { get { throw null; } }

        public ILogViewAdaptor<TView, TEntry> MakeLogViewAdaptor<TView, TEntry>(ILogViewAdaptorHost<TView, TEntry> hostGrain, TView initialState, string grainTypeName, Storage.IGrainStorage grainStorage, ILogConsistencyProtocolServices services)
            where TView : class, new()
            where TEntry : class { throw null; }
    }

    public static partial class LogConsistencyProviderFactory
    {
        public static ILogViewAdaptorFactory Create(System.IServiceProvider services, string name) { throw null; }
    }
}

namespace Orleans.EventSourcing.LogStorage
{
    public partial class LogConsistencyProvider : ILogViewAdaptorFactory
    {
        public bool UsesStorageProvider { get { throw null; } }

        public ILogViewAdaptor<TView, TEntry> MakeLogViewAdaptor<TView, TEntry>(ILogViewAdaptorHost<TView, TEntry> hostGrain, TView initialState, string grainTypeName, Storage.IGrainStorage grainStorage, ILogConsistencyProtocolServices services)
            where TView : class, new()
            where TEntry : class { throw null; }
    }

    [GenerateSerializer]
    public sealed partial class LogStateWithMetaDataAndETag<TEntry> : IGrainState<LogStateWithMetaData<TEntry>> where TEntry : class
    {
        [Id(1)]
        public string ETag { get { throw null; } set { } }

        [Id(2)]
        public bool RecordExists { get { throw null; } set { } }

        public LogStateWithMetaData<TEntry> State { get { throw null; } set { } }

        [Id(0)]
        public LogStateWithMetaData<TEntry> StateAndMetaData { get { throw null; } set { } }

        public override string ToString() { throw null; }
    }

    [GenerateSerializer]
    public sealed partial class LogStateWithMetaData<TEntry>
        where TEntry : class
    {
        public int GlobalVersion { get { throw null; } }

        [Id(0)]
        public System.Collections.Generic.List<TEntry> Log { get { throw null; } set { } }

        [Id(1)]
        public string WriteVector { get { throw null; } set { } }

        public bool FlipBit(string replica) { throw null; }

        public bool GetBit(string replica) { throw null; }
    }
}

namespace Orleans.EventSourcing.StateStorage
{
    [GenerateSerializer]
    public sealed partial class GrainStateWithMetaDataAndETag<TView> : IGrainState<GrainStateWithMetaData<TView>> where TView : class, new()
    {
        public GrainStateWithMetaDataAndETag() { }

        public GrainStateWithMetaDataAndETag(TView initialview) { }

        [Id(1)]
        public string ETag { get { throw null; } set { } }

        [Id(2)]
        public bool RecordExists { get { throw null; } set { } }

        public GrainStateWithMetaData<TView> State { get { throw null; } set { } }

        [Id(0)]
        public GrainStateWithMetaData<TView> StateAndMetaData { get { throw null; } set { } }

        public override string ToString() { throw null; }
    }

    [GenerateSerializer]
    public sealed partial class GrainStateWithMetaData<TView>
        where TView : class, new()
    {
        public GrainStateWithMetaData() { }

        public GrainStateWithMetaData(TView initialstate) { }

        [Id(1)]
        public int GlobalVersion { get { throw null; } set { } }

        [Id(0)]
        public TView State { get { throw null; } set { } }

        [Id(2)]
        public string WriteVector { get { throw null; } set { } }

        public bool FlipBit(string Replica) { throw null; }

        public bool GetBit(string Replica) { throw null; }
    }

    public partial class LogConsistencyProvider : ILogViewAdaptorFactory
    {
        public bool UsesStorageProvider { get { throw null; } }

        public ILogViewAdaptor<TView, TEntry> MakeLogViewAdaptor<TView, TEntry>(ILogViewAdaptorHost<TView, TEntry> hostGrain, TView initialState, string grainTypeName, Storage.IGrainStorage grainStorage, ILogConsistencyProtocolServices services)
            where TView : class, new()
            where TEntry : class { throw null; }
    }
}

namespace Orleans.Hosting
{
    public static partial class CustomStorageSiloBuilderExtensions
    {
        public static ISiloBuilder AddCustomStorageBasedLogConsistencyProvider(this ISiloBuilder builder, string name = "LogStorage", string primaryCluster = null) { throw null; }

        public static ISiloBuilder AddCustomStorageBasedLogConsistencyProviderAsDefault(this ISiloBuilder builder, string primaryCluster = null) { throw null; }
    }

    public static partial class LogStorageSiloBuilderExtensions
    {
        public static ISiloBuilder AddLogStorageBasedLogConsistencyProvider(this ISiloBuilder builder, string name = "LogStorage") { throw null; }

        public static ISiloBuilder AddLogStorageBasedLogConsistencyProviderAsDefault(this ISiloBuilder builder) { throw null; }
    }

    public static partial class StateStorageSiloBuilderExtensions
    {
        public static ISiloBuilder AddStateStorageBasedLogConsistencyProvider(this ISiloBuilder builder, string name = "StateStorage") { throw null; }

        public static ISiloBuilder AddStateStorageBasedLogConsistencyProviderAsDefault(this ISiloBuilder builder) { throw null; }
    }
}

namespace OrleansCodeGen.Orleans.EventSourcing
{
    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_ConnectionIssue : global::Orleans.Serialization.Serializers.AbstractTypeSerializer<global::Orleans.EventSourcing.ConnectionIssue>
    {
        public override void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.EventSourcing.ConnectionIssue instance) { }

        public override void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.EventSourcing.ConnectionIssue instance) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_Invokable_ILogConsistencyProtocolParticipant_GrainReference_0DB087C8 : global::Orleans.Serialization.Codecs.IFieldCodec<Invokable_ILogConsistencyProtocolParticipant_GrainReference_0DB087C8>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, Invokable_ILogConsistencyProtocolParticipant_GrainReference_0DB087C8 instance) { }

        public Invokable_ILogConsistencyProtocolParticipant_GrainReference_0DB087C8 ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, Invokable_ILogConsistencyProtocolParticipant_GrainReference_0DB087C8 instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, Invokable_ILogConsistencyProtocolParticipant_GrainReference_0DB087C8 value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_Invokable_ILogConsistencyProtocolParticipant_GrainReference_22FD7D72 : global::Orleans.Serialization.Codecs.IFieldCodec<Invokable_ILogConsistencyProtocolParticipant_GrainReference_22FD7D72>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, Invokable_ILogConsistencyProtocolParticipant_GrainReference_22FD7D72 instance) { }

        public Invokable_ILogConsistencyProtocolParticipant_GrainReference_22FD7D72 ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, Invokable_ILogConsistencyProtocolParticipant_GrainReference_22FD7D72 instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, Invokable_ILogConsistencyProtocolParticipant_GrainReference_22FD7D72 value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_Invokable_ILogConsistencyProtocolParticipant_GrainReference_A36FC884 : global::Orleans.Serialization.Codecs.IFieldCodec<Invokable_ILogConsistencyProtocolParticipant_GrainReference_A36FC884>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, Invokable_ILogConsistencyProtocolParticipant_GrainReference_A36FC884 instance) { }

        public Invokable_ILogConsistencyProtocolParticipant_GrainReference_A36FC884 ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, Invokable_ILogConsistencyProtocolParticipant_GrainReference_A36FC884 instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, Invokable_ILogConsistencyProtocolParticipant_GrainReference_A36FC884 value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_ProtocolTransportException : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.EventSourcing.ProtocolTransportException>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_ProtocolTransportException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.EventSourcing.ProtocolTransportException instance) { }

        public global::Orleans.EventSourcing.ProtocolTransportException ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.EventSourcing.ProtocolTransportException instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.EventSourcing.ProtocolTransportException value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_ConnectionIssue : global::Orleans.Serialization.Cloning.IDeepCopier<global::Orleans.EventSourcing.ConnectionIssue>, global::Orleans.Serialization.Cloning.IDeepCopier, global::Orleans.Serialization.Cloning.IBaseCopier<global::Orleans.EventSourcing.ConnectionIssue>, global::Orleans.Serialization.Cloning.IBaseCopier
    {
        public void DeepCopy(global::Orleans.EventSourcing.ConnectionIssue input, global::Orleans.EventSourcing.ConnectionIssue output, global::Orleans.Serialization.Cloning.CopyContext context) { }

        public global::Orleans.EventSourcing.ConnectionIssue DeepCopy(global::Orleans.EventSourcing.ConnectionIssue original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_Invokable_ILogConsistencyProtocolParticipant_GrainReference_0DB087C8 : global::Orleans.Serialization.Cloning.IDeepCopier<Invokable_ILogConsistencyProtocolParticipant_GrainReference_0DB087C8>, global::Orleans.Serialization.Cloning.IDeepCopier
    {
        public Invokable_ILogConsistencyProtocolParticipant_GrainReference_0DB087C8 DeepCopy(Invokable_ILogConsistencyProtocolParticipant_GrainReference_0DB087C8 original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_Invokable_ILogConsistencyProtocolParticipant_GrainReference_22FD7D72 : global::Orleans.Serialization.Cloning.IDeepCopier<Invokable_ILogConsistencyProtocolParticipant_GrainReference_22FD7D72>, global::Orleans.Serialization.Cloning.IDeepCopier
    {
        public Invokable_ILogConsistencyProtocolParticipant_GrainReference_22FD7D72 DeepCopy(Invokable_ILogConsistencyProtocolParticipant_GrainReference_22FD7D72 original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_Invokable_ILogConsistencyProtocolParticipant_GrainReference_A36FC884 : global::Orleans.Serialization.Cloning.IDeepCopier<Invokable_ILogConsistencyProtocolParticipant_GrainReference_A36FC884>, global::Orleans.Serialization.Cloning.IDeepCopier
    {
        public Invokable_ILogConsistencyProtocolParticipant_GrainReference_A36FC884 DeepCopy(Invokable_ILogConsistencyProtocolParticipant_GrainReference_A36FC884 original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_ProtocolTransportException : global::Orleans.Serialization.GeneratedCodeHelpers.OrleansGeneratedCodeHelper.ExceptionCopier<global::Orleans.EventSourcing.ProtocolTransportException, global::Orleans.Runtime.OrleansException>
    {
        public Copier_ProtocolTransportException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) : base(default(Serialization.Serializers.ICodecProvider)!) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::Orleans.CompoundTypeAlias(new[] { "inv", typeof(global::Orleans.Runtime.GrainReference), typeof(global::Orleans.EventSourcing.ILogConsistencyProtocolParticipant), "0DB087C8" })]
    public sealed partial class Invokable_ILogConsistencyProtocolParticipant_GrainReference_0DB087C8 : global::Orleans.Runtime.TaskRequest
    {
        public override void Dispose() { }

        public override string GetActivityName() { throw null; }

        public override string GetInterfaceName() { throw null; }

        public override System.Type GetInterfaceType() { throw null; }

        public override System.Reflection.MethodInfo GetMethod() { throw null; }

        public override string GetMethodName() { throw null; }

        public override object GetTarget() { throw null; }

        protected override System.Threading.Tasks.Task InvokeInner() { throw null; }

        public override void SetTarget(global::Orleans.Serialization.Invocation.ITargetHolder holder) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::Orleans.CompoundTypeAlias(new[] { "inv", typeof(global::Orleans.Runtime.GrainReference), typeof(global::Orleans.EventSourcing.ILogConsistencyProtocolParticipant), "22FD7D72" })]
    public sealed partial class Invokable_ILogConsistencyProtocolParticipant_GrainReference_22FD7D72 : global::Orleans.Runtime.TaskRequest
    {
        public override void Dispose() { }

        public override string GetActivityName() { throw null; }

        public override string GetInterfaceName() { throw null; }

        public override System.Type GetInterfaceType() { throw null; }

        public override System.Reflection.MethodInfo GetMethod() { throw null; }

        public override string GetMethodName() { throw null; }

        public override object GetTarget() { throw null; }

        protected override System.Threading.Tasks.Task InvokeInner() { throw null; }

        public override void SetTarget(global::Orleans.Serialization.Invocation.ITargetHolder holder) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::Orleans.CompoundTypeAlias(new[] { "inv", typeof(global::Orleans.Runtime.GrainReference), typeof(global::Orleans.EventSourcing.ILogConsistencyProtocolParticipant), "A36FC884" })]
    public sealed partial class Invokable_ILogConsistencyProtocolParticipant_GrainReference_A36FC884 : global::Orleans.Runtime.TaskRequest
    {
        public override void Dispose() { }

        public override string GetActivityName() { throw null; }

        public override string GetInterfaceName() { throw null; }

        public override System.Type GetInterfaceType() { throw null; }

        public override System.Reflection.MethodInfo GetMethod() { throw null; }

        public override string GetMethodName() { throw null; }

        public override object GetTarget() { throw null; }

        protected override System.Threading.Tasks.Task InvokeInner() { throw null; }

        public override void SetTarget(global::Orleans.Serialization.Invocation.ITargetHolder holder) { }
    }
}

namespace OrleansCodeGen.Orleans.EventSourcing.Common
{
    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_BatchedNotificationMessage : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.EventSourcing.Common.BatchedNotificationMessage>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_BatchedNotificationMessage(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.EventSourcing.Common.BatchedNotificationMessage instance) { }

        public global::Orleans.EventSourcing.Common.BatchedNotificationMessage ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.EventSourcing.Common.BatchedNotificationMessage instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.EventSourcing.Common.BatchedNotificationMessage value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_PrimaryOperationFailed : global::Orleans.Serialization.Serializers.AbstractTypeSerializer<global::Orleans.EventSourcing.Common.PrimaryOperationFailed>
    {
        public Codec_PrimaryOperationFailed(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public override void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.EventSourcing.Common.PrimaryOperationFailed instance) { }

        public override void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.EventSourcing.Common.PrimaryOperationFailed instance) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_VersionNotificationMessage : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.EventSourcing.Common.VersionNotificationMessage>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.EventSourcing.Common.VersionNotificationMessage instance) { }

        public global::Orleans.EventSourcing.Common.VersionNotificationMessage ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.EventSourcing.Common.VersionNotificationMessage instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.EventSourcing.Common.VersionNotificationMessage value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_BatchedNotificationMessage : global::Orleans.Serialization.Cloning.IDeepCopier<global::Orleans.EventSourcing.Common.BatchedNotificationMessage>, global::Orleans.Serialization.Cloning.IDeepCopier
    {
        public Copier_BatchedNotificationMessage(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public global::Orleans.EventSourcing.Common.BatchedNotificationMessage DeepCopy(global::Orleans.EventSourcing.Common.BatchedNotificationMessage original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_PrimaryOperationFailed : global::Orleans.Serialization.Cloning.IDeepCopier<global::Orleans.EventSourcing.Common.PrimaryOperationFailed>, global::Orleans.Serialization.Cloning.IDeepCopier, global::Orleans.Serialization.Cloning.IBaseCopier<global::Orleans.EventSourcing.Common.PrimaryOperationFailed>, global::Orleans.Serialization.Cloning.IBaseCopier
    {
        public Copier_PrimaryOperationFailed(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public void DeepCopy(global::Orleans.EventSourcing.Common.PrimaryOperationFailed input, global::Orleans.EventSourcing.Common.PrimaryOperationFailed output, global::Orleans.Serialization.Cloning.CopyContext context) { }

        public global::Orleans.EventSourcing.Common.PrimaryOperationFailed DeepCopy(global::Orleans.EventSourcing.Common.PrimaryOperationFailed original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_VersionNotificationMessage : global::Orleans.Serialization.Cloning.IDeepCopier<global::Orleans.EventSourcing.Common.VersionNotificationMessage>, global::Orleans.Serialization.Cloning.IDeepCopier
    {
        public global::Orleans.EventSourcing.Common.VersionNotificationMessage DeepCopy(global::Orleans.EventSourcing.Common.VersionNotificationMessage original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }
}

namespace OrleansCodeGen.Orleans.EventSourcing.LogStorage
{
    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_LogStateWithMetaDataAndETag<TEntry> : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.EventSourcing.LogStorage.LogStateWithMetaDataAndETag<TEntry>>, global::Orleans.Serialization.Codecs.IFieldCodec where TEntry : class
    {
        public Codec_LogStateWithMetaDataAndETag(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.EventSourcing.LogStorage.LogStateWithMetaDataAndETag<TEntry> instance) { }

        public global::Orleans.EventSourcing.LogStorage.LogStateWithMetaDataAndETag<TEntry> ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.EventSourcing.LogStorage.LogStateWithMetaDataAndETag<TEntry> instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.EventSourcing.LogStorage.LogStateWithMetaDataAndETag<TEntry> value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_LogStateWithMetaData<TEntry> : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.EventSourcing.LogStorage.LogStateWithMetaData<TEntry>>, global::Orleans.Serialization.Codecs.IFieldCodec where TEntry : class
    {
        public Codec_LogStateWithMetaData(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.EventSourcing.LogStorage.LogStateWithMetaData<TEntry> instance) { }

        public global::Orleans.EventSourcing.LogStorage.LogStateWithMetaData<TEntry> ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.EventSourcing.LogStorage.LogStateWithMetaData<TEntry> instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.EventSourcing.LogStorage.LogStateWithMetaData<TEntry> value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_LogStateWithMetaDataAndETag<TEntry> : global::Orleans.Serialization.Cloning.IDeepCopier<global::Orleans.EventSourcing.LogStorage.LogStateWithMetaDataAndETag<TEntry>>, global::Orleans.Serialization.Cloning.IDeepCopier where TEntry : class
    {
        public Copier_LogStateWithMetaDataAndETag(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public global::Orleans.EventSourcing.LogStorage.LogStateWithMetaDataAndETag<TEntry> DeepCopy(global::Orleans.EventSourcing.LogStorage.LogStateWithMetaDataAndETag<TEntry> original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_LogStateWithMetaData<TEntry> : global::Orleans.Serialization.Cloning.IDeepCopier<global::Orleans.EventSourcing.LogStorage.LogStateWithMetaData<TEntry>>, global::Orleans.Serialization.Cloning.IDeepCopier where TEntry : class
    {
        public Copier_LogStateWithMetaData(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public global::Orleans.EventSourcing.LogStorage.LogStateWithMetaData<TEntry> DeepCopy(global::Orleans.EventSourcing.LogStorage.LogStateWithMetaData<TEntry> original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }
}

namespace OrleansCodeGen.Orleans.EventSourcing.StateStorage
{
    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_GrainStateWithMetaDataAndETag<TView> : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.EventSourcing.StateStorage.GrainStateWithMetaDataAndETag<TView>>, global::Orleans.Serialization.Codecs.IFieldCodec where TView : class, new()
    {
        public Codec_GrainStateWithMetaDataAndETag(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.EventSourcing.StateStorage.GrainStateWithMetaDataAndETag<TView> instance) { }

        public global::Orleans.EventSourcing.StateStorage.GrainStateWithMetaDataAndETag<TView> ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.EventSourcing.StateStorage.GrainStateWithMetaDataAndETag<TView> instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.EventSourcing.StateStorage.GrainStateWithMetaDataAndETag<TView> value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_GrainStateWithMetaData<TView> : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.EventSourcing.StateStorage.GrainStateWithMetaData<TView>>, global::Orleans.Serialization.Codecs.IFieldCodec where TView : class, new()
    {
        public Codec_GrainStateWithMetaData(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.EventSourcing.StateStorage.GrainStateWithMetaData<TView> instance) { }

        public global::Orleans.EventSourcing.StateStorage.GrainStateWithMetaData<TView> ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.EventSourcing.StateStorage.GrainStateWithMetaData<TView> instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.EventSourcing.StateStorage.GrainStateWithMetaData<TView> value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_GrainStateWithMetaDataAndETag<TView> : global::Orleans.Serialization.Cloning.IDeepCopier<global::Orleans.EventSourcing.StateStorage.GrainStateWithMetaDataAndETag<TView>>, global::Orleans.Serialization.Cloning.IDeepCopier where TView : class, new()
    {
        public Copier_GrainStateWithMetaDataAndETag(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public global::Orleans.EventSourcing.StateStorage.GrainStateWithMetaDataAndETag<TView> DeepCopy(global::Orleans.EventSourcing.StateStorage.GrainStateWithMetaDataAndETag<TView> original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_GrainStateWithMetaData<TView> : global::Orleans.Serialization.Cloning.IDeepCopier<global::Orleans.EventSourcing.StateStorage.GrainStateWithMetaData<TView>>, global::Orleans.Serialization.Cloning.IDeepCopier where TView : class, new()
    {
        public Copier_GrainStateWithMetaData(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public global::Orleans.EventSourcing.StateStorage.GrainStateWithMetaData<TView> DeepCopy(global::Orleans.EventSourcing.StateStorage.GrainStateWithMetaData<TView> original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }
}