//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Orleans.Hosting
{
    public static partial class KubernetesHostingExtensions
    {
        public static Microsoft.Extensions.DependencyInjection.IServiceCollection UseKubernetesHosting(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Action<Microsoft.Extensions.Options.OptionsBuilder<Kubernetes.KubernetesHostingOptions>> configureOptions) { throw null; }

        public static Microsoft.Extensions.DependencyInjection.IServiceCollection UseKubernetesHosting(this Microsoft.Extensions.DependencyInjection.IServiceCollection services) { throw null; }

        public static ISiloBuilder UseKubernetesHosting(this ISiloBuilder siloBuilder, System.Action<Microsoft.Extensions.Options.OptionsBuilder<Kubernetes.KubernetesHostingOptions>> configureOptions) { throw null; }

        public static ISiloBuilder UseKubernetesHosting(this ISiloBuilder siloBuilder) { throw null; }
    }
}

namespace Orleans.Hosting.Kubernetes
{
    public sealed partial class KubernetesClusterAgent : ILifecycleParticipant<Runtime.ISiloLifecycle>
    {
        public KubernetesClusterAgent(Runtime.IClusterMembershipService clusterMembershipService, Microsoft.Extensions.Logging.ILogger<KubernetesClusterAgent> logger, Microsoft.Extensions.Options.IOptionsMonitor<KubernetesHostingOptions> options, Microsoft.Extensions.Options.IOptions<Configuration.ClusterOptions> clusterOptions, Runtime.ILocalSiloDetails localSiloDetails) { }

        public System.Threading.Tasks.Task OnStop(System.Threading.CancellationToken cancellationToken) { throw null; }

        public void Participate(Runtime.ISiloLifecycle lifecycle) { }
    }

    public sealed partial class KubernetesHostingOptions
    {
        public const string ClusterIdEnvironmentVariable = "ORLEANS_CLUSTER_ID";
        public const string ClusterIdLabel = "orleans/clusterId";
        public const string PodIPEnvironmentVariable = "POD_IP";
        public const string PodNameEnvironmentVariable = "POD_NAME";
        public const string PodNamespaceEnvironmentVariable = "POD_NAMESPACE";
        public const string ServiceIdEnvironmentVariable = "ORLEANS_SERVICE_ID";
        public const string ServiceIdLabel = "orleans/serviceId";
        public bool DeleteDefunctSiloPods { get { throw null; } set { } }

        public System.Func<k8s.KubernetesClientConfiguration> GetClientConfiguration { get { throw null; } set { } }

        public int MaxAgents { get { throw null; } set { } }

        public int MaxKubernetesApiRetryAttempts { get { throw null; } set { } }
    }
}