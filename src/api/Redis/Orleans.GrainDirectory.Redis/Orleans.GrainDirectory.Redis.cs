//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Orleans.Configuration
{
    public partial class RedisGrainDirectoryOptions
    {
        public StackExchange.Redis.ConfigurationOptions ConfigurationOptions { get { throw null; } set { } }

        public System.Func<RedisGrainDirectoryOptions, System.Threading.Tasks.Task<StackExchange.Redis.IConnectionMultiplexer>> CreateMultiplexer { get { throw null; } set { } }

        public System.TimeSpan? EntryExpiry { get { throw null; } set { } }

        public static System.Threading.Tasks.Task<StackExchange.Redis.IConnectionMultiplexer> DefaultCreateMultiplexer(RedisGrainDirectoryOptions options) { throw null; }
    }

    public partial class RedisGrainDirectoryOptionsValidator : IConfigurationValidator
    {
        public RedisGrainDirectoryOptionsValidator(RedisGrainDirectoryOptions options, string name) { }

        public void ValidateConfiguration() { }
    }
}

namespace Orleans.GrainDirectory.Redis
{
    public partial class RedisGrainDirectory : IGrainDirectory, ILifecycleParticipant<Runtime.ISiloLifecycle>
    {
        public RedisGrainDirectory(Configuration.RedisGrainDirectoryOptions directoryOptions, Microsoft.Extensions.Options.IOptions<Configuration.ClusterOptions> clusterOptions, Microsoft.Extensions.Logging.ILogger<RedisGrainDirectory> logger) { }

        public System.Threading.Tasks.Task Initialize(System.Threading.CancellationToken ct = default) { throw null; }

        public System.Threading.Tasks.Task<Runtime.GrainAddress?> Lookup(Runtime.GrainId grainId) { throw null; }

        public void Participate(Runtime.ISiloLifecycle lifecycle) { }

        public System.Threading.Tasks.Task<Runtime.GrainAddress?> Register(Runtime.GrainAddress address, Runtime.GrainAddress? previousAddress) { throw null; }

        public System.Threading.Tasks.Task<Runtime.GrainAddress?> Register(Runtime.GrainAddress address) { throw null; }

        public System.Threading.Tasks.Task Unregister(Runtime.GrainAddress address) { throw null; }

        public System.Threading.Tasks.Task UnregisterSilos(System.Collections.Generic.List<Runtime.SiloAddress> siloAddresses) { throw null; }
    }
}

namespace Orleans.Hosting
{
    public static partial class RedisGrainDirectoryExtensions
    {
        public static ISiloBuilder AddRedisGrainDirectory(this ISiloBuilder builder, string name, System.Action<Microsoft.Extensions.Options.OptionsBuilder<Configuration.RedisGrainDirectoryOptions>> configureOptions) { throw null; }

        public static ISiloBuilder AddRedisGrainDirectory(this ISiloBuilder builder, string name, System.Action<Configuration.RedisGrainDirectoryOptions> configureOptions) { throw null; }

        public static ISiloBuilder UseRedisGrainDirectoryAsDefault(this ISiloBuilder builder, System.Action<Microsoft.Extensions.Options.OptionsBuilder<Configuration.RedisGrainDirectoryOptions>> configureOptions) { throw null; }

        public static ISiloBuilder UseRedisGrainDirectoryAsDefault(this ISiloBuilder builder, System.Action<Configuration.RedisGrainDirectoryOptions> configureOptions) { throw null; }
    }
}