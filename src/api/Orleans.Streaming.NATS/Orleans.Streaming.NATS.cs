//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Orleans.Streaming.NATS
{
    public partial class NatsOptions
    {
        public int BatchSize { get { throw null; } set { } }

        public System.Text.Json.JsonSerializerOptions? JsonSerializerOptions { get { throw null; } set { } }

        public global::NATS.Client.Core.NatsOpts? NatsClientOptions { get { throw null; } set { } }

        public int PartitionCount { get { throw null; } set { } }

        public int ProducerCount { get { throw null; } set { } }

        public string StreamName { get { throw null; } set { } }
    }

    public partial class NatsStreamOptionsValidator : IConfigurationValidator
    {
        public NatsStreamOptionsValidator(NatsOptions options, string? name = null) { }

        public void ValidateConfiguration() { }
    }
}

namespace Orleans.Streaming.NATS.Hosting
{
    public static partial class ClientBuilderExtensions
    {
        public static Orleans.Hosting.IClientBuilder AddNatsStreams(this Orleans.Hosting.IClientBuilder builder, string name, System.Action<ClusterClientNatsStreamConfigurator>? configure) { throw null; }

        public static Orleans.Hosting.IClientBuilder AddNatsStreams(this Orleans.Hosting.IClientBuilder builder, string name, System.Action<NatsOptions> configureOptions) { throw null; }
    }

    public partial class ClusterClientNatsStreamConfigurator : Orleans.Hosting.ClusterClientPersistentStreamConfigurator
    {
        public ClusterClientNatsStreamConfigurator(string name, Orleans.Hosting.IClientBuilder builder) : base(default!, default!, default!) { }

        public ClusterClientNatsStreamConfigurator ConfigureNats(System.Action<Microsoft.Extensions.Options.OptionsBuilder<NatsOptions>> configureOptions) { throw null; }

        public ClusterClientNatsStreamConfigurator ConfigurePartitioning(int numOfparitions = 8) { throw null; }
    }

    public static partial class SiloBuilderExtensions
    {
        public static Orleans.Hosting.ISiloBuilder AddNatsStreams(this Orleans.Hosting.ISiloBuilder builder, string name, System.Action<SiloNatsStreamConfigurator>? configure) { throw null; }

        public static Orleans.Hosting.ISiloBuilder AddNatsStreams(this Orleans.Hosting.ISiloBuilder builder, string name, System.Action<NatsOptions> configureOptions) { throw null; }
    }

    public partial class SiloNatsStreamConfigurator : Orleans.Hosting.SiloPersistentStreamConfigurator
    {
        public SiloNatsStreamConfigurator(string name, System.Action<System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection>> configureServicesDelegate) : base(default!, default!, default!) { }

        public SiloNatsStreamConfigurator ConfigureCache(int cacheSize = 4096) { throw null; }

        public SiloNatsStreamConfigurator ConfigureNats(System.Action<Microsoft.Extensions.Options.OptionsBuilder<NatsOptions>> configureOptions) { throw null; }

        public SiloNatsStreamConfigurator ConfigurePartitioning(int numOfparitions = 8) { throw null; }
    }
}