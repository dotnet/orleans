//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Orleans
{
    public partial interface ITransactionClient
    {
        System.Threading.Tasks.Task RunTransaction(TransactionOption transactionOption, System.Func<System.Threading.Tasks.Task<bool>> transactionDelegate);
        System.Threading.Tasks.Task RunTransaction(TransactionOption transactionOption, System.Func<System.Threading.Tasks.Task> transactionDelegate);
    }

    [InvokableCustomInitializer("SetTransactionOptions")]
    [InvokableBaseType(typeof(Runtime.GrainReference), typeof(System.Threading.Tasks.ValueTask), typeof(TransactionRequest))]
    [InvokableBaseType(typeof(Runtime.GrainReference), typeof(System.Threading.Tasks.ValueTask<>), typeof(TransactionRequest<>))]
    [InvokableBaseType(typeof(Runtime.GrainReference), typeof(System.Threading.Tasks.Task), typeof(TransactionTaskRequest))]
    [InvokableBaseType(typeof(Runtime.GrainReference), typeof(System.Threading.Tasks.Task<>), typeof(TransactionTaskRequest<>))]
    [System.AttributeUsage(System.AttributeTargets.Method)]
    public sealed partial class TransactionAttribute : System.Attribute
    {
        public TransactionAttribute(TransactionOption requirement) { }

        public TransactionAttribute(TransactionOptionAlias alias) { }

        [System.Obsolete("Use [ReadOnly] attribute instead.")]
        public bool ReadOnly { get { throw null; } set { } }

        public TransactionOption Requirement { get { throw null; } }
    }

    public enum TransactionOption
    {
        Suppress = 0,
        CreateOrJoin = 1,
        Create = 2,
        Join = 3,
        Supported = 4,
        NotAllowed = 5
    }

    public enum TransactionOptionAlias
    {
        Required = 1,
        RequiresNew = 2,
        Mandatory = 3,
        Suppress = 4,
        Never = 5
    }

    [SerializerTransparent]
    public abstract partial class TransactionRequest : TransactionRequestBase
    {
        protected TransactionRequest(Serialization.Serializer<Transactions.OrleansTransactionAbortedException> exceptionSerializer, System.IServiceProvider serviceProvider) : base(default!, default!) { }

        protected sealed override System.Threading.Tasks.ValueTask<Serialization.Invocation.Response> BaseInvoke() { throw null; }

        protected abstract System.Threading.Tasks.ValueTask InvokeInner();
    }

    [GenerateSerializer]
    public abstract partial class TransactionRequestBase : Runtime.RequestBase, IOutgoingGrainCallFilter, Serialization.IOnDeserialized
    {
        [GeneratedActivatorConstructor]
        protected TransactionRequestBase(Serialization.Serializer<Transactions.OrleansTransactionAbortedException> exceptionSerializer, System.IServiceProvider serviceProvider) { }

        public bool IsAmbientTransactionSuppressed { get { throw null; } }

        public bool IsTransactionRequired { get { throw null; } }

        [Id(1)]
        public Transactions.TransactionInfo TransactionInfo { get { throw null; } set { } }

        [Id(0)]
        public TransactionOption TransactionOption { get { throw null; } set { } }

        protected abstract System.Threading.Tasks.ValueTask<Serialization.Invocation.Response> BaseInvoke();
        public override void Dispose() { }

        public override System.Threading.Tasks.ValueTask<Serialization.Invocation.Response> Invoke() { throw null; }

        System.Threading.Tasks.Task IOutgoingGrainCallFilter.Invoke(IOutgoingGrainCallContext context) { throw null; }

        void Serialization.IOnDeserialized.OnDeserialized(Serialization.DeserializationContext context) { }

        protected void SetTransactionOptions(TransactionOption txOption) { }

        protected void SetTransactionOptions(TransactionOptionAlias txOption) { }
    }

    [SerializerTransparent]
    public abstract partial class TransactionRequest<TResult> : TransactionRequestBase
    {
        protected TransactionRequest(Serialization.Serializer<Transactions.OrleansTransactionAbortedException> exceptionSerializer, System.IServiceProvider serviceProvider) : base(default!, default!) { }

        protected sealed override System.Threading.Tasks.ValueTask<Serialization.Invocation.Response> BaseInvoke() { throw null; }

        protected abstract System.Threading.Tasks.ValueTask<TResult> InvokeInner();
    }

    [GenerateSerializer]
    public sealed partial class TransactionResponse : Serialization.Invocation.Response
    {
        public override System.Exception Exception { get { throw null; } set { } }

        public Serialization.Invocation.Response InnerResponse { get { throw null; } }

        public override object Result { get { throw null; } set { } }

        [Id(1)]
        public Transactions.TransactionInfo TransactionInfo { get { throw null; } set { } }

        public static TransactionResponse Create(Serialization.Invocation.Response response, Transactions.TransactionInfo transactionInfo) { throw null; }

        public override void Dispose() { }

        public System.Exception GetException() { throw null; }

        public override T GetResult<T>() { throw null; }
    }

    [SerializerTransparent]
    public abstract partial class TransactionTaskRequest : TransactionRequestBase
    {
        protected TransactionTaskRequest(Serialization.Serializer<Transactions.OrleansTransactionAbortedException> exceptionSerializer, System.IServiceProvider serviceProvider) : base(default!, default!) { }

        protected sealed override System.Threading.Tasks.ValueTask<Serialization.Invocation.Response> BaseInvoke() { throw null; }

        protected abstract System.Threading.Tasks.Task InvokeInner();
    }

    [SerializerTransparent]
    public abstract partial class TransactionTaskRequest<TResult> : TransactionRequestBase
    {
        protected TransactionTaskRequest(Serialization.Serializer<Transactions.OrleansTransactionAbortedException> exceptionSerializer, System.IServiceProvider serviceProvider) : base(default!, default!) { }

        protected sealed override System.Threading.Tasks.ValueTask<Serialization.Invocation.Response> BaseInvoke() { throw null; }

        protected abstract System.Threading.Tasks.Task<TResult> InvokeInner();
    }
}

namespace Orleans.Configuration
{
    public partial class TransactionalStateOptions
    {
        public const int DefaultConfirmationRetryLimit = 3;
        public static System.TimeSpan DefaultLockTimeout;
        public const int DefaultMaxLockGroupSize = 20;
        public static System.TimeSpan DefaultRemoteTransactionPingFrequency;
        public System.TimeSpan ConfirmationRetryDelay { get { throw null; } set { } }

        public static int ConfirmationRetryLimit { get { throw null; } set { } }

        public static System.TimeSpan DefaultLockAcquireTimeout { get { throw null; } }

        public static System.TimeSpan DefaultPrepareTimeout { get { throw null; } }

        public System.TimeSpan LockAcquireTimeout { get { throw null; } set { } }

        public System.TimeSpan LockTimeout { get { throw null; } set { } }

        public int MaxLockGroupSize { get { throw null; } set { } }

        public System.TimeSpan PrepareTimeout { get { throw null; } set { } }

        public System.TimeSpan RemoteTransactionPingFrequency { get { throw null; } set { } }
    }
}

namespace Orleans.Hosting
{
    public static partial class ClientBuilderExtensions
    {
        public static IClientBuilder UseTransactions(this IClientBuilder builder) { throw null; }
    }

    public static partial class SiloBuilderExtensions
    {
        public static ISiloBuilder UseTransactions(this ISiloBuilder builder) { throw null; }
    }

    public static partial class TransactionsServiceCollectionExtensions
    {
    }
}

namespace Orleans.Transactions
{
    public partial class CausalClock
    {
        public CausalClock(IClock clock) { }

        public System.DateTime Merge(System.DateTime timestamp) { throw null; }

        public System.DateTime MergeUtcNow(System.DateTime timestamp) { throw null; }

        public System.DateTime UtcNow() { throw null; }
    }

    public partial class Clock : IClock
    {
        public System.DateTime UtcNow() { throw null; }
    }

    public partial class DefaultTransactionDataCopier<TData> : Abstractions.ITransactionDataCopier<TData>
    {
        public DefaultTransactionDataCopier(Serialization.DeepCopier<TData> deepCopier) { }

        public TData DeepCopy(TData original) { throw null; }
    }

    public partial interface IClock
    {
        System.DateTime UtcNow();
    }

    public partial interface ITransactionAgent
    {
        System.Threading.Tasks.Task Abort(TransactionInfo transactionInfo);
        System.Threading.Tasks.Task<(TransactionalStatus Status, System.Exception exception)> Resolve(TransactionInfo transactionInfo);
        System.Threading.Tasks.Task<TransactionInfo> StartTransaction(bool readOnly, System.TimeSpan timeout);
    }

    public partial interface ITransactionalStateStorageEvents<TState>
        where TState : class, new()
    {
        void Cancel(long sequenceNumber);
        void Collect(System.Guid transactionId);
        void Commit(System.Guid transactionId, System.DateTime timestamp, System.Collections.Generic.List<ParticipantId> writeResources);
        void Confirm(long sequenceNumber);
        void Prepare(long sequenceNumber, System.Guid transactionId, System.DateTime timestamp, ParticipantId transactionManager, TState state);
        void Read(System.DateTime timestamp);
    }

    public partial interface ITransactionOverloadDetector
    {
        bool IsOverloaded();
    }

    public partial class NamedTransactionalStateStorageFactory : Abstractions.INamedTransactionalStateStorageFactory
    {
        [System.Obsolete("Use the NamedTransactionalStateStorageFactory(IGrainContextAccessor contextAccessor) constructor.")]
        public NamedTransactionalStateStorageFactory(Runtime.IGrainContextAccessor contextAccessor, Microsoft.Extensions.Logging.ILoggerFactory loggerFactory) { }

        public NamedTransactionalStateStorageFactory(Runtime.IGrainContextAccessor contextAccessor) { }

        public Abstractions.ITransactionalStateStorage<TState> Create<TState>(string storageName, string stateName)
            where TState : class, new() { throw null; }
    }

    [GenerateSerializer]
    public sealed partial class OrleansBrokenTransactionLockException : OrleansTransactionTransientFailureException
    {
        public OrleansBrokenTransactionLockException(string transactionId, string situation, System.Exception innerException) : base(default!, default(string)!) { }

        public OrleansBrokenTransactionLockException(string transactionId, string situation) : base(default!, default(string)!) { }
    }

    [GenerateSerializer]
    public sealed partial class OrleansCascadingAbortException : OrleansTransactionTransientFailureException
    {
        public OrleansCascadingAbortException(string transactionId, System.Exception innerException) : base(default!, default(string)!) { }

        public OrleansCascadingAbortException(string transactionId, string dependentId) : base(default!, default(string)!) { }

        public OrleansCascadingAbortException(string transactionId) : base(default!, default(string)!) { }

        [Id(0)]
        public string DependentTransactionId { get { throw null; } }

        [System.Obsolete]
        public override void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) { }
    }

    [GenerateSerializer]
    public sealed partial class OrleansOrphanCallException : OrleansTransactionAbortedException
    {
        public OrleansOrphanCallException(string transactionId, int pendingCalls) : base(default!, default(string)!) { }
    }

    [GenerateSerializer]
    public sealed partial class OrleansReadOnlyViolatedException : OrleansTransactionAbortedException
    {
        public OrleansReadOnlyViolatedException(string transactionId) : base(default!, default(string)!) { }
    }

    [GenerateSerializer]
    public sealed partial class OrleansStartTransactionFailedException : OrleansTransactionException
    {
        public OrleansStartTransactionFailedException(System.Exception innerException) { }
    }

    [GenerateSerializer]
    public partial class OrleansTransactionAbortedException : OrleansTransactionException
    {
        [System.Obsolete]
        protected OrleansTransactionAbortedException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) { }

        public OrleansTransactionAbortedException(string transactionId, System.Exception innerException) { }

        public OrleansTransactionAbortedException(string transactionId, string msg, System.Exception innerException) { }

        public OrleansTransactionAbortedException(string transactionId, string msg) { }

        [Id(0)]
        public string TransactionId { get { throw null; } }

        [System.Obsolete]
        public override void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) { }
    }

    [GenerateSerializer]
    public partial class OrleansTransactionException : Runtime.OrleansException
    {
        public OrleansTransactionException() { }

        [System.Obsolete]
        protected OrleansTransactionException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) { }

        public OrleansTransactionException(string message, System.Exception innerException) { }

        public OrleansTransactionException(string message) { }
    }

    [GenerateSerializer]
    public sealed partial class OrleansTransactionInDoubtException : OrleansTransactionException
    {
        public OrleansTransactionInDoubtException(string transactionId, System.Exception exc) { }

        public OrleansTransactionInDoubtException(string transactionId, string msg, System.Exception innerException) { }

        public OrleansTransactionInDoubtException(string transactionId) { }

        [Id(0)]
        public string TransactionId { get { throw null; } }

        [System.Obsolete]
        public override void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) { }
    }

    [GenerateSerializer]
    public sealed partial class OrleansTransactionLockUpgradeException : OrleansTransactionTransientFailureException
    {
        public OrleansTransactionLockUpgradeException(string transactionId) : base(default!, default(string)!) { }
    }

    [GenerateSerializer]
    public sealed partial class OrleansTransactionOverloadException : OrleansTransactionException
    {
    }

    [GenerateSerializer]
    public sealed partial class OrleansTransactionPrepareTimeoutException : OrleansTransactionTransientFailureException
    {
        public OrleansTransactionPrepareTimeoutException(string transactionId, System.Exception innerException) : base(default!, default(string)!) { }
    }

    [GenerateSerializer]
    public sealed partial class OrleansTransactionsDisabledException : OrleansTransactionException
    {
    }

    [GenerateSerializer]
    public sealed partial class OrleansTransactionServiceNotAvailableException : OrleansTransactionException
    {
    }

    [GenerateSerializer]
    public partial class OrleansTransactionTransientFailureException : OrleansTransactionAbortedException
    {
        [System.Obsolete]
        protected OrleansTransactionTransientFailureException(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : base(default!, default(string)!) { }

        public OrleansTransactionTransientFailureException(string transactionId, string msg, System.Exception innerException) : base(default!, default(string)!) { }

        public OrleansTransactionTransientFailureException(string transactionId, string msg) : base(default!, default(string)!) { }
    }

    [GenerateSerializer]
    [Immutable]
    public readonly partial struct ParticipantId
    {
        private readonly object _dummy;
        private readonly int _dummyPrimitive;
        public static readonly System.Collections.Generic.IEqualityComparer<ParticipantId> Comparer;
        public ParticipantId(string name, Runtime.GrainReference reference, Role supportedRoles) { }

        [Id(0)]
        public string Name { get { throw null; } }

        [Id(1)]
        public Runtime.GrainReference Reference { get { throw null; } }

        [Id(2)]
        public Role SupportedRoles { get { throw null; } }

        public override readonly string ToString() { throw null; }

        [GenerateSerializer]
        [Immutable]
        public sealed partial class IdComparer : System.Collections.Generic.IEqualityComparer<ParticipantId>
        {
            public bool Equals(ParticipantId x, ParticipantId y) { throw null; }

            public int GetHashCode(ParticipantId obj) { throw null; }
        }

        [GenerateSerializer]
        [System.Flags]
        public enum Role
        {
            Resource = 1,
            Manager = 2,
            PriorityManager = 4
        }
    }

    public static partial class ParticipantRoleExtensions
    {
        public static bool IsManager(this ParticipantId participant) { throw null; }

        public static bool IsPriorityManager(this ParticipantId participant) { throw null; }

        public static bool IsResource(this ParticipantId participant) { throw null; }

        public static System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<ParticipantId, Abstractions.AccessCounter>> SelectManagers(this System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<ParticipantId, Abstractions.AccessCounter>> participants) { throw null; }

        public static System.Collections.Generic.IEnumerable<ParticipantId> SelectPriorityManagers(this System.Collections.Generic.IEnumerable<ParticipantId> participants) { throw null; }

        public static System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<ParticipantId, Abstractions.AccessCounter>> SelectResources(this System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<ParticipantId, Abstractions.AccessCounter>> participants) { throw null; }

        public static bool SupportsRoles(this ParticipantId participant, ParticipantId.Role role) { throw null; }
    }

    public partial class TransactionAgentStatistics : Abstractions.ITransactionAgentStatistics
    {
        public long TransactionsFailed { get { throw null; } }

        public long TransactionsStarted { get { throw null; } }

        public long TransactionsSucceeded { get { throw null; } }

        public long TransactionsThrottled { get { throw null; } }

        public static Abstractions.ITransactionAgentStatistics Copy(Abstractions.ITransactionAgentStatistics initialStatistics) { throw null; }

        public void TrackTransactionFailed() { }

        public void TrackTransactionStarted() { }

        public void TrackTransactionSucceeded() { }

        public void TrackTransactionThrottled() { }
    }

    public partial class TransactionalResourceExtension : Abstractions.ITransactionalResourceExtension, Runtime.IGrainExtension, Runtime.IAddressable
    {
        public TransactionalResourceExtension(Runtime.IGrainContextAccessor contextAccessor) { }

        public System.Threading.Tasks.Task Abort(string resourceId, System.Guid transactionId) { throw null; }

        public System.Threading.Tasks.Task Cancel(string resourceId, System.Guid transactionId, System.DateTime timeStamp, TransactionalStatus status) { throw null; }

        public System.Threading.Tasks.Task<TransactionalStatus> CommitReadOnly(string resourceId, System.Guid transactionId, Abstractions.AccessCounter accessCount, System.DateTime timeStamp) { throw null; }

        public System.Threading.Tasks.Task Confirm(string resourceId, System.Guid transactionId, System.DateTime timeStamp) { throw null; }

        public System.Threading.Tasks.Task Prepare(string resourceId, System.Guid transactionId, Abstractions.AccessCounter accessCount, System.DateTime timeStamp, ParticipantId transactionManager) { throw null; }
    }

    public partial class TransactionalStateAttributeMapper : TransactionalStateAttributeMapper<Abstractions.TransactionalStateAttribute>
    {
        protected override Abstractions.TransactionalStateConfiguration AttributeToConfig(Abstractions.TransactionalStateAttribute attribute) { throw null; }
    }

    public abstract partial class TransactionalStateAttributeMapper<TAttribute> : Runtime.IAttributeToFactoryMapper<TAttribute> where TAttribute : IFacetMetadata, Abstractions.ITransactionalStateConfiguration
    {
        protected abstract Abstractions.TransactionalStateConfiguration AttributeToConfig(TAttribute attribute);
        public Factory<Runtime.IGrainContext, object> GetFactory(System.Reflection.ParameterInfo parameter, TAttribute attribute) { throw null; }
    }

    public partial class TransactionalStateFactory : Abstractions.ITransactionalStateFactory
    {
        public TransactionalStateFactory(Runtime.IGrainContextAccessor contextAccessor) { }

        public Abstractions.ITransactionalState<TState> Create<TState>(Abstractions.TransactionalStateConfiguration config)
            where TState : class, new() { throw null; }

        public static Newtonsoft.Json.JsonSerializerSettings GetJsonSerializerSettings(System.IServiceProvider serviceProvider) { throw null; }
    }

    [GenerateSerializer]
    public sealed partial class TransactionalStateRecord<TState>
        where TState : class, new()
    {
        [Id(1)]
        public long CommittedSequenceId { get { throw null; } set { } }

        [Id(0)]
        public TState CommittedState { get { throw null; } set { } }

        [Id(2)]
        public Abstractions.TransactionalStateMetaData Metadata { get { throw null; } set { } }

        [Id(3)]
        public System.Collections.Generic.List<Abstractions.PendingTransactionState<TState>> PendingStates { get { throw null; } set { } }
    }

    public partial class TransactionalState<TState> : Abstractions.ITransactionalState<TState>, ILifecycleParticipant<Runtime.IGrainLifecycle> where TState : class, new()
    {
        public TransactionalState(Abstractions.TransactionalStateConfiguration transactionalStateConfiguration, Runtime.IGrainContextAccessor contextAccessor, Abstractions.ITransactionDataCopier<TState> copier, Runtime.IGrainRuntime grainRuntime, Microsoft.Extensions.Logging.ILogger<TransactionalState<TState>> logger) { }

        public string CurrentTransactionId { get { throw null; } }

        public void Participate(Runtime.IGrainLifecycle lifecycle) { }

        public System.Threading.Tasks.Task<TResult> PerformRead<TResult>(System.Func<TState, TResult> operation) { throw null; }

        public System.Threading.Tasks.Task<TResult> PerformUpdate<TResult>(System.Func<TState, TResult> updateAction) { throw null; }
    }

    public enum TransactionalStatus
    {
        Ok = 0,
        PrepareTimeout = 1,
        CascadingAbort = 2,
        BrokenLock = 3,
        LockValidationFailed = 4,
        ParticipantResponseTimeout = 5,
        TMResponseTimeout = 6,
        StorageConflict = 7,
        PresumedAbort = 8,
        UnknownException = 9,
        AssertionFailed = 10,
        CommitFailure = 11
    }

    public static partial class TransactionalStatusExtensions
    {
        public static OrleansTransactionException ConvertToUserException(this TransactionalStatus status, string transactionId, System.Exception exception) { throw null; }

        public static bool DefinitelyAborted(this TransactionalStatus status) { throw null; }
    }

    public partial class TransactionCommitterFactory : Abstractions.ITransactionCommitterFactory
    {
        public TransactionCommitterFactory(Runtime.IGrainContextAccessor contextAccessor) { }

        public Abstractions.ITransactionCommitter<TService> Create<TService>(Abstractions.ITransactionCommitterConfiguration config)
            where TService : class { throw null; }
    }

    public partial class TransactionCommitter<TService> : Abstractions.ITransactionCommitter<TService>, ILifecycleParticipant<Runtime.IGrainLifecycle> where TService : class
    {
        public TransactionCommitter(Abstractions.ITransactionCommitterConfiguration config, Runtime.IGrainContextAccessor contextAccessor, Abstractions.ITransactionDataCopier<OperationState> copier, Runtime.IGrainRuntime grainRuntime, Microsoft.Extensions.Logging.ILogger<TransactionCommitter<TService>> logger) { }

        public System.Threading.Tasks.Task OnCommit(Abstractions.ITransactionCommitOperation<TService> operation) { throw null; }

        public void Participate(Runtime.IGrainLifecycle lifecycle) { }

        [GenerateSerializer]
        public sealed partial class OperationState
        {
            [Id(0)]
            public Abstractions.ITransactionCommitOperation<TService> Operation { get { throw null; } set { } }
        }
    }

    public static partial class TransactionContext
    {
        public static string CurrentTransactionId { get { throw null; } }

        public static TransactionInfo GetRequiredTransactionInfo() { throw null; }

        public static TransactionInfo GetTransactionInfo() { throw null; }
    }

    [GenerateSerializer]
    public sealed partial class TransactionInfo
    {
        public int PendingCalls;
        public TransactionInfo() { }

        public TransactionInfo(TransactionInfo other) { }

        public TransactionInfo(System.Guid id, System.DateTime timeStamp, System.DateTime priority, bool readOnly = false) { }

        public string Id { get { throw null; } }

        [Id(3)]
        public bool IsReadOnly { get { throw null; } }

        [Id(4)]
        public byte[] OriginalException { get { throw null; } set { } }

        [Id(5)]
        public System.Collections.Generic.Dictionary<ParticipantId, Abstractions.AccessCounter> Participants { get { throw null; } }

        [Id(2)]
        public System.DateTime Priority { get { throw null; } set { } }

        [Id(1)]
        public System.DateTime TimeStamp { get { throw null; } set { } }

        [Id(0)]
        public System.Guid TransactionId { get { throw null; } }

        [Id(6)]
        public bool TryToCommit { get { throw null; } }

        public TransactionInfo Fork() { throw null; }

        public void Join(TransactionInfo x) { }

        public OrleansTransactionAbortedException MustAbort(Serialization.Serializer<OrleansTransactionAbortedException> serializer) { throw null; }

        public void ReconcilePending() { }

        public void RecordException(System.Exception e, Serialization.Serializer<OrleansTransactionAbortedException> sm) { }

        public void RecordRead(ParticipantId id, System.DateTime minTime) { }

        public void RecordWrite(ParticipantId id, System.DateTime minTime) { }

        public override string ToString() { throw null; }
    }

    public partial class TransactionManagerExtension : Abstractions.ITransactionManagerExtension, Runtime.IGrainExtension, Runtime.IAddressable
    {
        public TransactionManagerExtension(Runtime.IGrainContextAccessor contextAccessor) { }

        public System.Threading.Tasks.Task Ping(string resourceId, System.Guid transactionId, System.DateTime timeStamp, ParticipantId resource) { throw null; }

        public System.Threading.Tasks.Task<TransactionalStatus> PrepareAndCommit(string resourceId, System.Guid transactionId, Abstractions.AccessCounter accessCount, System.DateTime timeStamp, System.Collections.Generic.List<ParticipantId> writeResources, int totalResources) { throw null; }

        public System.Threading.Tasks.Task Prepared(string resourceId, System.Guid transactionId, System.DateTime timestamp, ParticipantId resource, TransactionalStatus status) { throw null; }
    }

    public partial class TransactionOverloadDetector : ITransactionOverloadDetector
    {
        public TransactionOverloadDetector(Abstractions.ITransactionAgentStatistics statistics, Microsoft.Extensions.Options.IOptions<TransactionRateLoadSheddingOptions> options) { }

        public bool IsOverloaded() { throw null; }
    }

    public partial class TransactionRateLoadSheddingOptions
    {
        public const double DEFAULT_LIMIT = 700D;
        public bool Enabled { get { throw null; } set { } }

        public double Limit { get { throw null; } set { } }
    }
}

namespace Orleans.Transactions.Abstractions
{
    [GenerateSerializer]
    public partial struct AccessCounter
    {
        [Id(0)]
        public int Reads;
        [Id(1)]
        public int Writes;
        public static AccessCounter operator +(AccessCounter c1, AccessCounter c2) { throw null; }
    }

    [GenerateSerializer]
    [Immutable]
    public sealed partial class CommitRecord
    {
        [Id(0)]
        public System.DateTime Timestamp { get { throw null; } set { } }

        [Id(1)]
        public System.Collections.Generic.List<ParticipantId> WriteParticipants { get { throw null; } set { } }
    }

    public partial interface INamedTransactionalStateStorageFactory
    {
        ITransactionalStateStorage<TState> Create<TState>(string storageName, string stateName)
            where TState : class, new();
    }

    public partial interface ITransactionAgentStatistics
    {
        long TransactionsFailed { get; }

        long TransactionsStarted { get; }

        long TransactionsSucceeded { get; }

        long TransactionsThrottled { get; }

        void TrackTransactionFailed();
        void TrackTransactionStarted();
        void TrackTransactionSucceeded();
        void TrackTransactionThrottled();
    }

    public partial interface ITransactionalResource
    {
        System.Threading.Tasks.Task Abort(System.Guid transactionId);
        System.Threading.Tasks.Task Cancel(System.Guid transactionId, System.DateTime timeStamp, TransactionalStatus status);
        System.Threading.Tasks.Task<TransactionalStatus> CommitReadOnly(System.Guid transactionId, AccessCounter accessCount, System.DateTime timeStamp);
        System.Threading.Tasks.Task Confirm(System.Guid transactionId, System.DateTime timeStamp);
        System.Threading.Tasks.Task Prepare(System.Guid transactionId, AccessCounter accessCount, System.DateTime timeStamp, ParticipantId transactionManager);
    }

    public partial interface ITransactionalResourceExtension : Runtime.IGrainExtension, Runtime.IAddressable
    {
        [Concurrency.AlwaysInterleave]
        [Transaction(TransactionOption.Suppress)]
        System.Threading.Tasks.Task Abort(string resourceId, System.Guid transactionId);
        [Concurrency.AlwaysInterleave]
        [Transaction(TransactionOption.Suppress)]
        System.Threading.Tasks.Task Cancel(string resourceId, System.Guid transactionId, System.DateTime timeStamp, TransactionalStatus status);
        [Concurrency.AlwaysInterleave]
        [Transaction(TransactionOption.Suppress)]
        System.Threading.Tasks.Task<TransactionalStatus> CommitReadOnly(string resourceId, System.Guid transactionId, AccessCounter accessCount, System.DateTime timeStamp);
        [Concurrency.AlwaysInterleave]
        [Transaction(TransactionOption.Suppress)]
        System.Threading.Tasks.Task Confirm(string resourceId, System.Guid transactionId, System.DateTime timeStamp);
        [Concurrency.AlwaysInterleave]
        [Transaction(TransactionOption.Suppress)]
        [Concurrency.OneWay]
        System.Threading.Tasks.Task Prepare(string resourceId, System.Guid transactionId, AccessCounter accessCount, System.DateTime timeStamp, ParticipantId transactionManager);
    }

    public partial interface ITransactionalStateConfiguration
    {
        string StateName { get; }

        string StorageName { get; }
    }

    public partial interface ITransactionalStateFactory
    {
        ITransactionalState<TState> Create<TState>(TransactionalStateConfiguration config)
            where TState : class, new();
    }

    public partial interface ITransactionalStateStorageFactory
    {
        ITransactionalStateStorage<TState> Create<TState>(string stateName, Runtime.IGrainContext context)
            where TState : class, new();
    }

    public partial interface ITransactionalStateStorage<TState>
        where TState : class, new()
    {
        System.Threading.Tasks.Task<TransactionalStorageLoadResponse<TState>> Load();
        System.Threading.Tasks.Task<string> Store(string expectedETag, TransactionalStateMetaData metadata, System.Collections.Generic.List<PendingTransactionState<TState>> statesToPrepare, long? commitUpTo, long? abortAfter);
    }

    public partial interface ITransactionalState<TState>
        where TState : class, new()
    {
        System.Threading.Tasks.Task<TResult> PerformRead<TResult>(System.Func<TState, TResult> readFunction);
        System.Threading.Tasks.Task<TResult> PerformUpdate<TResult>(System.Func<TState, TResult> updateFunction);
    }

    public partial interface ITransactionCommitOperation<TService>
        where TService : class
    {
        System.Threading.Tasks.Task<bool> Commit(System.Guid transactionId, TService service);
    }

    public partial interface ITransactionCommitterConfiguration
    {
        string ServiceName { get; }

        string StorageName { get; }
    }

    public partial interface ITransactionCommitterFactory
    {
        ITransactionCommitter<TService> Create<TService>(ITransactionCommitterConfiguration config)
            where TService : class;
    }

    public partial interface ITransactionCommitter<TService>
        where TService : class
    {
        System.Threading.Tasks.Task OnCommit(ITransactionCommitOperation<TService> operation);
    }

    public partial interface ITransactionDataCopier<TData>
    {
        TData DeepCopy(TData original);
    }

    public partial interface ITransactionManager
    {
        System.Threading.Tasks.Task Ping(System.Guid transactionId, System.DateTime timeStamp, ParticipantId resource);
        System.Threading.Tasks.Task<TransactionalStatus> PrepareAndCommit(System.Guid transactionId, AccessCounter accessCount, System.DateTime timeStamp, System.Collections.Generic.List<ParticipantId> writerResources, int totalParticipants);
        System.Threading.Tasks.Task Prepared(System.Guid transactionId, System.DateTime timeStamp, ParticipantId resource, TransactionalStatus status);
    }

    public partial interface ITransactionManagerExtension : Runtime.IGrainExtension, Runtime.IAddressable
    {
        [Concurrency.AlwaysInterleave]
        [Transaction(TransactionOption.Suppress)]
        [Concurrency.OneWay]
        System.Threading.Tasks.Task Ping(string resourceId, System.Guid transactionId, System.DateTime timeStamp, ParticipantId resource);
        [Concurrency.AlwaysInterleave]
        [Transaction(TransactionOption.Suppress)]
        System.Threading.Tasks.Task<TransactionalStatus> PrepareAndCommit(string resourceId, System.Guid transactionId, AccessCounter accessCount, System.DateTime timeStamp, System.Collections.Generic.List<ParticipantId> writeResources, int totalParticipants);
        [Concurrency.AlwaysInterleave]
        [Transaction(TransactionOption.Suppress)]
        [Concurrency.OneWay]
        System.Threading.Tasks.Task Prepared(string resourceId, System.Guid transactionId, System.DateTime timestamp, ParticipantId resource, TransactionalStatus status);
    }

    [GenerateSerializer]
    [Immutable]
    public sealed partial class PendingTransactionState<TState>
        where TState : class, new()
    {
        [Id(0)]
        public long SequenceId { get { throw null; } set { } }

        [Id(4)]
        public TState State { get { throw null; } set { } }

        [Id(2)]
        public System.DateTime TimeStamp { get { throw null; } set { } }

        [Id(1)]
        public string TransactionId { get { throw null; } set { } }

        [Id(3)]
        public ParticipantId TransactionManager { get { throw null; } set { } }
    }

    [System.AttributeUsage(System.AttributeTargets.Parameter)]
    public partial class TransactionalStateAttribute : System.Attribute, IFacetMetadata, ITransactionalStateConfiguration
    {
        public TransactionalStateAttribute(string stateName, string storageName = null) { }

        public string StateName { get { throw null; } }

        public string StorageName { get { throw null; } }
    }

    public partial class TransactionalStateConfiguration : ITransactionalStateConfiguration
    {
        public TransactionalStateConfiguration(ITransactionalStateConfiguration config, ParticipantId.Role supportedRoles = ParticipantId.Role.Resource | ParticipantId.Role.Manager) { }

        public string StateName { get { throw null; } }

        public string StorageName { get { throw null; } }

        public ParticipantId.Role SupportedRoles { get { throw null; } }
    }

    public static partial class TransactionalStateExtensions
    {
        public static System.Threading.Tasks.Task PerformUpdate<TState>(this ITransactionalState<TState> transactionalState, System.Action<TState> updateAction)
            where TState : class, new() { throw null; }
    }

    [GenerateSerializer]
    public sealed partial class TransactionalStateMetaData
    {
        [Id(1)]
        public System.Collections.Generic.Dictionary<System.Guid, CommitRecord> CommitRecords { get { throw null; } set { } }

        [Id(0)]
        public System.DateTime TimeStamp { get { throw null; } set { } }
    }

    [GenerateSerializer]
    [Immutable]
    public sealed partial class TransactionalStorageLoadResponse<TState>
        where TState : class, new()
    {
        public TransactionalStorageLoadResponse() { }

        public TransactionalStorageLoadResponse(string etag, TState committedState, long committedSequenceId, TransactionalStateMetaData metadata, System.Collections.Generic.IReadOnlyList<PendingTransactionState<TState>> pendingStates) { }

        [Id(2)]
        public long CommittedSequenceId { get { throw null; } set { } }

        [Id(1)]
        public TState CommittedState { get { throw null; } set { } }

        [Id(0)]
        public string ETag { get { throw null; } set { } }

        [Id(3)]
        public TransactionalStateMetaData Metadata { get { throw null; } set { } }

        [Id(4)]
        public System.Collections.Generic.IReadOnlyList<PendingTransactionState<TState>> PendingStates { get { throw null; } set { } }
    }

    [System.AttributeUsage(System.AttributeTargets.Parameter)]
    public partial class TransactionCommitterAttribute : System.Attribute, IFacetMetadata, ITransactionCommitterConfiguration
    {
        public TransactionCommitterAttribute(string serviceName, string storageName = null) { }

        public string ServiceName { get { throw null; } }

        public string StorageName { get { throw null; } }
    }
}

namespace OrleansCodeGen.Orleans
{
    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_TransactionRequestBase : global::Orleans.Serialization.Serializers.AbstractTypeSerializer<global::Orleans.TransactionRequestBase>
    {
        public Codec_TransactionRequestBase(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public override void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.TransactionRequestBase instance) { }

        public override void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.TransactionRequestBase instance) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_TransactionResponse : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.TransactionResponse>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_TransactionResponse(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.TransactionResponse instance) { }

        public global::Orleans.TransactionResponse ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.TransactionResponse instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.TransactionResponse value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_TransactionRequestBase : global::Orleans.Serialization.Cloning.IDeepCopier<global::Orleans.TransactionRequestBase>, global::Orleans.Serialization.Cloning.IDeepCopier, global::Orleans.Serialization.Cloning.IBaseCopier<global::Orleans.TransactionRequestBase>, global::Orleans.Serialization.Cloning.IBaseCopier
    {
        public Copier_TransactionRequestBase(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public global::Orleans.TransactionRequestBase DeepCopy(global::Orleans.TransactionRequestBase original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }

        public void DeepCopy(global::Orleans.TransactionRequestBase input, global::Orleans.TransactionRequestBase output, global::Orleans.Serialization.Cloning.CopyContext context) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_TransactionResponse : global::Orleans.Serialization.Cloning.IDeepCopier<global::Orleans.TransactionResponse>, global::Orleans.Serialization.Cloning.IDeepCopier
    {
        public Copier_TransactionResponse(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public global::Orleans.TransactionResponse DeepCopy(global::Orleans.TransactionResponse original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }
}

namespace OrleansCodeGen.Orleans.Transactions
{
    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_OrleansBrokenTransactionLockException : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.OrleansBrokenTransactionLockException>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_OrleansBrokenTransactionLockException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<global::Orleans.Transactions.OrleansBrokenTransactionLockException> _activator) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Transactions.OrleansBrokenTransactionLockException instance) { }

        public global::Orleans.Transactions.OrleansBrokenTransactionLockException ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.Transactions.OrleansBrokenTransactionLockException instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.OrleansBrokenTransactionLockException value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_OrleansCascadingAbortException : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.OrleansCascadingAbortException>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_OrleansCascadingAbortException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<global::Orleans.Transactions.OrleansCascadingAbortException> _activator) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Transactions.OrleansCascadingAbortException instance) { }

        public global::Orleans.Transactions.OrleansCascadingAbortException ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.Transactions.OrleansCascadingAbortException instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.OrleansCascadingAbortException value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_OrleansOrphanCallException : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.OrleansOrphanCallException>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_OrleansOrphanCallException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<global::Orleans.Transactions.OrleansOrphanCallException> _activator) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Transactions.OrleansOrphanCallException instance) { }

        public global::Orleans.Transactions.OrleansOrphanCallException ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.Transactions.OrleansOrphanCallException instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.OrleansOrphanCallException value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_OrleansReadOnlyViolatedException : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.OrleansReadOnlyViolatedException>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_OrleansReadOnlyViolatedException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<global::Orleans.Transactions.OrleansReadOnlyViolatedException> _activator) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Transactions.OrleansReadOnlyViolatedException instance) { }

        public global::Orleans.Transactions.OrleansReadOnlyViolatedException ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.Transactions.OrleansReadOnlyViolatedException instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.OrleansReadOnlyViolatedException value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_OrleansStartTransactionFailedException : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.OrleansStartTransactionFailedException>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_OrleansStartTransactionFailedException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<global::Orleans.Transactions.OrleansStartTransactionFailedException> _activator) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Transactions.OrleansStartTransactionFailedException instance) { }

        public global::Orleans.Transactions.OrleansStartTransactionFailedException ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.Transactions.OrleansStartTransactionFailedException instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.OrleansStartTransactionFailedException value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_OrleansTransactionAbortedException : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.OrleansTransactionAbortedException>, global::Orleans.Serialization.Codecs.IFieldCodec, global::Orleans.Serialization.Serializers.IBaseCodec<global::Orleans.Transactions.OrleansTransactionAbortedException>, global::Orleans.Serialization.Serializers.IBaseCodec
    {
        public Codec_OrleansTransactionAbortedException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<global::Orleans.Transactions.OrleansTransactionAbortedException> _activator) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Transactions.OrleansTransactionAbortedException instance) { }

        public global::Orleans.Transactions.OrleansTransactionAbortedException ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.Transactions.OrleansTransactionAbortedException instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.OrleansTransactionAbortedException value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_OrleansTransactionException : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.OrleansTransactionException>, global::Orleans.Serialization.Codecs.IFieldCodec, global::Orleans.Serialization.Serializers.IBaseCodec<global::Orleans.Transactions.OrleansTransactionException>, global::Orleans.Serialization.Serializers.IBaseCodec
    {
        public Codec_OrleansTransactionException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Transactions.OrleansTransactionException instance) { }

        public global::Orleans.Transactions.OrleansTransactionException ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.Transactions.OrleansTransactionException instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.OrleansTransactionException value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_OrleansTransactionInDoubtException : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.OrleansTransactionInDoubtException>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_OrleansTransactionInDoubtException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<global::Orleans.Transactions.OrleansTransactionInDoubtException> _activator) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Transactions.OrleansTransactionInDoubtException instance) { }

        public global::Orleans.Transactions.OrleansTransactionInDoubtException ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.Transactions.OrleansTransactionInDoubtException instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.OrleansTransactionInDoubtException value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_OrleansTransactionLockUpgradeException : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.OrleansTransactionLockUpgradeException>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_OrleansTransactionLockUpgradeException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<global::Orleans.Transactions.OrleansTransactionLockUpgradeException> _activator) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Transactions.OrleansTransactionLockUpgradeException instance) { }

        public global::Orleans.Transactions.OrleansTransactionLockUpgradeException ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.Transactions.OrleansTransactionLockUpgradeException instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.OrleansTransactionLockUpgradeException value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_OrleansTransactionOverloadException : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.OrleansTransactionOverloadException>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_OrleansTransactionOverloadException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Transactions.OrleansTransactionOverloadException instance) { }

        public global::Orleans.Transactions.OrleansTransactionOverloadException ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.Transactions.OrleansTransactionOverloadException instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.OrleansTransactionOverloadException value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_OrleansTransactionPrepareTimeoutException : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.OrleansTransactionPrepareTimeoutException>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_OrleansTransactionPrepareTimeoutException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<global::Orleans.Transactions.OrleansTransactionPrepareTimeoutException> _activator) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Transactions.OrleansTransactionPrepareTimeoutException instance) { }

        public global::Orleans.Transactions.OrleansTransactionPrepareTimeoutException ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.Transactions.OrleansTransactionPrepareTimeoutException instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.OrleansTransactionPrepareTimeoutException value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_OrleansTransactionsDisabledException : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.OrleansTransactionsDisabledException>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_OrleansTransactionsDisabledException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Transactions.OrleansTransactionsDisabledException instance) { }

        public global::Orleans.Transactions.OrleansTransactionsDisabledException ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.Transactions.OrleansTransactionsDisabledException instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.OrleansTransactionsDisabledException value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_OrleansTransactionServiceNotAvailableException : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.OrleansTransactionServiceNotAvailableException>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_OrleansTransactionServiceNotAvailableException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Transactions.OrleansTransactionServiceNotAvailableException instance) { }

        public global::Orleans.Transactions.OrleansTransactionServiceNotAvailableException ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.Transactions.OrleansTransactionServiceNotAvailableException instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.OrleansTransactionServiceNotAvailableException value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_OrleansTransactionTransientFailureException : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.OrleansTransactionTransientFailureException>, global::Orleans.Serialization.Codecs.IFieldCodec, global::Orleans.Serialization.Serializers.IBaseCodec<global::Orleans.Transactions.OrleansTransactionTransientFailureException>, global::Orleans.Serialization.Serializers.IBaseCodec
    {
        public Codec_OrleansTransactionTransientFailureException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<global::Orleans.Transactions.OrleansTransactionTransientFailureException> _activator) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Transactions.OrleansTransactionTransientFailureException instance) { }

        public global::Orleans.Transactions.OrleansTransactionTransientFailureException ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.Transactions.OrleansTransactionTransientFailureException instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.OrleansTransactionTransientFailureException value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_ParticipantId : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.ParticipantId>, global::Orleans.Serialization.Codecs.IFieldCodec, global::Orleans.Serialization.Serializers.IValueSerializer<global::Orleans.Transactions.ParticipantId>, global::Orleans.Serialization.Serializers.IValueSerializer
    {
        public Codec_ParticipantId(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, scoped ref global::Orleans.Transactions.ParticipantId instance) { }

        public global::Orleans.Transactions.ParticipantId ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, scoped ref global::Orleans.Transactions.ParticipantId instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.ParticipantId value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_TransactionalStateRecord<TState> : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.TransactionalStateRecord<TState>>, global::Orleans.Serialization.Codecs.IFieldCodec where TState : class, new()
    {
        public Codec_TransactionalStateRecord(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Transactions.TransactionalStateRecord<TState> instance) { }

        public global::Orleans.Transactions.TransactionalStateRecord<TState> ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.Transactions.TransactionalStateRecord<TState> instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.TransactionalStateRecord<TState> value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_TransactionInfo : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.TransactionInfo>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_TransactionInfo(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Transactions.TransactionInfo instance) { }

        public global::Orleans.Transactions.TransactionInfo ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.Transactions.TransactionInfo instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.TransactionInfo value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_OrleansBrokenTransactionLockException : global::Orleans.Serialization.GeneratedCodeHelpers.OrleansGeneratedCodeHelper.ExceptionCopier<global::Orleans.Transactions.OrleansBrokenTransactionLockException, global::Orleans.Transactions.OrleansTransactionTransientFailureException>
    {
        public Copier_OrleansBrokenTransactionLockException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) : base(default(Serialization.Serializers.ICodecProvider)!) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_OrleansCascadingAbortException : global::Orleans.Serialization.GeneratedCodeHelpers.OrleansGeneratedCodeHelper.ExceptionCopier<global::Orleans.Transactions.OrleansCascadingAbortException, global::Orleans.Transactions.OrleansTransactionTransientFailureException>
    {
        public Copier_OrleansCascadingAbortException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) : base(default(Serialization.Serializers.ICodecProvider)!) { }

        public override void DeepCopy(global::Orleans.Transactions.OrleansCascadingAbortException input, global::Orleans.Transactions.OrleansCascadingAbortException output, global::Orleans.Serialization.Cloning.CopyContext context) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_OrleansOrphanCallException : global::Orleans.Serialization.GeneratedCodeHelpers.OrleansGeneratedCodeHelper.ExceptionCopier<global::Orleans.Transactions.OrleansOrphanCallException, global::Orleans.Transactions.OrleansTransactionAbortedException>
    {
        public Copier_OrleansOrphanCallException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) : base(default(Serialization.Serializers.ICodecProvider)!) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_OrleansReadOnlyViolatedException : global::Orleans.Serialization.GeneratedCodeHelpers.OrleansGeneratedCodeHelper.ExceptionCopier<global::Orleans.Transactions.OrleansReadOnlyViolatedException, global::Orleans.Transactions.OrleansTransactionAbortedException>
    {
        public Copier_OrleansReadOnlyViolatedException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) : base(default(Serialization.Serializers.ICodecProvider)!) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_OrleansStartTransactionFailedException : global::Orleans.Serialization.GeneratedCodeHelpers.OrleansGeneratedCodeHelper.ExceptionCopier<global::Orleans.Transactions.OrleansStartTransactionFailedException, global::Orleans.Transactions.OrleansTransactionException>
    {
        public Copier_OrleansStartTransactionFailedException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) : base(default(Serialization.Serializers.ICodecProvider)!) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_OrleansTransactionAbortedException : global::Orleans.Serialization.GeneratedCodeHelpers.OrleansGeneratedCodeHelper.ExceptionCopier<global::Orleans.Transactions.OrleansTransactionAbortedException, global::Orleans.Transactions.OrleansTransactionException>
    {
        public Copier_OrleansTransactionAbortedException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) : base(default(Serialization.Serializers.ICodecProvider)!) { }

        public override void DeepCopy(global::Orleans.Transactions.OrleansTransactionAbortedException input, global::Orleans.Transactions.OrleansTransactionAbortedException output, global::Orleans.Serialization.Cloning.CopyContext context) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_OrleansTransactionException : global::Orleans.Serialization.GeneratedCodeHelpers.OrleansGeneratedCodeHelper.ExceptionCopier<global::Orleans.Transactions.OrleansTransactionException, global::Orleans.Runtime.OrleansException>
    {
        public Copier_OrleansTransactionException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) : base(default(Serialization.Serializers.ICodecProvider)!) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_OrleansTransactionInDoubtException : global::Orleans.Serialization.GeneratedCodeHelpers.OrleansGeneratedCodeHelper.ExceptionCopier<global::Orleans.Transactions.OrleansTransactionInDoubtException, global::Orleans.Transactions.OrleansTransactionException>
    {
        public Copier_OrleansTransactionInDoubtException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) : base(default(Serialization.Serializers.ICodecProvider)!) { }

        public override void DeepCopy(global::Orleans.Transactions.OrleansTransactionInDoubtException input, global::Orleans.Transactions.OrleansTransactionInDoubtException output, global::Orleans.Serialization.Cloning.CopyContext context) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_OrleansTransactionLockUpgradeException : global::Orleans.Serialization.GeneratedCodeHelpers.OrleansGeneratedCodeHelper.ExceptionCopier<global::Orleans.Transactions.OrleansTransactionLockUpgradeException, global::Orleans.Transactions.OrleansTransactionTransientFailureException>
    {
        public Copier_OrleansTransactionLockUpgradeException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) : base(default(Serialization.Serializers.ICodecProvider)!) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_OrleansTransactionOverloadException : global::Orleans.Serialization.GeneratedCodeHelpers.OrleansGeneratedCodeHelper.ExceptionCopier<global::Orleans.Transactions.OrleansTransactionOverloadException, global::Orleans.Transactions.OrleansTransactionException>
    {
        public Copier_OrleansTransactionOverloadException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) : base(default(Serialization.Serializers.ICodecProvider)!) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_OrleansTransactionPrepareTimeoutException : global::Orleans.Serialization.GeneratedCodeHelpers.OrleansGeneratedCodeHelper.ExceptionCopier<global::Orleans.Transactions.OrleansTransactionPrepareTimeoutException, global::Orleans.Transactions.OrleansTransactionTransientFailureException>
    {
        public Copier_OrleansTransactionPrepareTimeoutException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) : base(default(Serialization.Serializers.ICodecProvider)!) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_OrleansTransactionsDisabledException : global::Orleans.Serialization.GeneratedCodeHelpers.OrleansGeneratedCodeHelper.ExceptionCopier<global::Orleans.Transactions.OrleansTransactionsDisabledException, global::Orleans.Transactions.OrleansTransactionException>
    {
        public Copier_OrleansTransactionsDisabledException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) : base(default(Serialization.Serializers.ICodecProvider)!) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_OrleansTransactionServiceNotAvailableException : global::Orleans.Serialization.GeneratedCodeHelpers.OrleansGeneratedCodeHelper.ExceptionCopier<global::Orleans.Transactions.OrleansTransactionServiceNotAvailableException, global::Orleans.Transactions.OrleansTransactionException>
    {
        public Copier_OrleansTransactionServiceNotAvailableException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) : base(default(Serialization.Serializers.ICodecProvider)!) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_OrleansTransactionTransientFailureException : global::Orleans.Serialization.GeneratedCodeHelpers.OrleansGeneratedCodeHelper.ExceptionCopier<global::Orleans.Transactions.OrleansTransactionTransientFailureException, global::Orleans.Transactions.OrleansTransactionAbortedException>
    {
        public Copier_OrleansTransactionTransientFailureException(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) : base(default(Serialization.Serializers.ICodecProvider)!) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_TransactionalStateRecord<TState> : global::Orleans.Serialization.Cloning.IDeepCopier<global::Orleans.Transactions.TransactionalStateRecord<TState>>, global::Orleans.Serialization.Cloning.IDeepCopier where TState : class, new()
    {
        public Copier_TransactionalStateRecord(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public global::Orleans.Transactions.TransactionalStateRecord<TState> DeepCopy(global::Orleans.Transactions.TransactionalStateRecord<TState> original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_TransactionInfo : global::Orleans.Serialization.Cloning.IDeepCopier<global::Orleans.Transactions.TransactionInfo>, global::Orleans.Serialization.Cloning.IDeepCopier
    {
        public Copier_TransactionInfo(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public global::Orleans.Transactions.TransactionInfo DeepCopy(global::Orleans.Transactions.TransactionInfo original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }
}

namespace OrleansCodeGen.Orleans.Transactions.Abstractions
{
    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_AccessCounter : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.Abstractions.AccessCounter>, global::Orleans.Serialization.Codecs.IFieldCodec, global::Orleans.Serialization.Serializers.IValueSerializer<global::Orleans.Transactions.Abstractions.AccessCounter>, global::Orleans.Serialization.Serializers.IValueSerializer
    {
        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, scoped ref global::Orleans.Transactions.Abstractions.AccessCounter instance) { }

        public global::Orleans.Transactions.Abstractions.AccessCounter ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, scoped ref global::Orleans.Transactions.Abstractions.AccessCounter instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.Abstractions.AccessCounter value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_CommitRecord : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.Abstractions.CommitRecord>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_CommitRecord(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Transactions.Abstractions.CommitRecord instance) { }

        public global::Orleans.Transactions.Abstractions.CommitRecord ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.Transactions.Abstractions.CommitRecord instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.Abstractions.CommitRecord value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_Invokable_ITransactionalResourceExtension_GrainReference_Ext_1BB071FE : global::Orleans.Serialization.Codecs.IFieldCodec<Invokable_ITransactionalResourceExtension_GrainReference_Ext_1BB071FE>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_Invokable_ITransactionalResourceExtension_GrainReference_Ext_1BB071FE(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<Invokable_ITransactionalResourceExtension_GrainReference_Ext_1BB071FE> _activator) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, Invokable_ITransactionalResourceExtension_GrainReference_Ext_1BB071FE instance) { }

        public Invokable_ITransactionalResourceExtension_GrainReference_Ext_1BB071FE ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, Invokable_ITransactionalResourceExtension_GrainReference_Ext_1BB071FE instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, Invokable_ITransactionalResourceExtension_GrainReference_Ext_1BB071FE value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_Invokable_ITransactionalResourceExtension_GrainReference_Ext_2ADCC608 : global::Orleans.Serialization.Codecs.IFieldCodec<Invokable_ITransactionalResourceExtension_GrainReference_Ext_2ADCC608>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_Invokable_ITransactionalResourceExtension_GrainReference_Ext_2ADCC608(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<Invokable_ITransactionalResourceExtension_GrainReference_Ext_2ADCC608> _activator) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, Invokable_ITransactionalResourceExtension_GrainReference_Ext_2ADCC608 instance) { }

        public Invokable_ITransactionalResourceExtension_GrainReference_Ext_2ADCC608 ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, Invokable_ITransactionalResourceExtension_GrainReference_Ext_2ADCC608 instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, Invokable_ITransactionalResourceExtension_GrainReference_Ext_2ADCC608 value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_Invokable_ITransactionalResourceExtension_GrainReference_Ext_5DDDE6F0 : global::Orleans.Serialization.Codecs.IFieldCodec<Invokable_ITransactionalResourceExtension_GrainReference_Ext_5DDDE6F0>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_Invokable_ITransactionalResourceExtension_GrainReference_Ext_5DDDE6F0(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<Invokable_ITransactionalResourceExtension_GrainReference_Ext_5DDDE6F0> _activator) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, Invokable_ITransactionalResourceExtension_GrainReference_Ext_5DDDE6F0 instance) { }

        public Invokable_ITransactionalResourceExtension_GrainReference_Ext_5DDDE6F0 ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, Invokable_ITransactionalResourceExtension_GrainReference_Ext_5DDDE6F0 instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, Invokable_ITransactionalResourceExtension_GrainReference_Ext_5DDDE6F0 value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_Invokable_ITransactionalResourceExtension_GrainReference_Ext_80028AB9 : global::Orleans.Serialization.Codecs.IFieldCodec<Invokable_ITransactionalResourceExtension_GrainReference_Ext_80028AB9>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_Invokable_ITransactionalResourceExtension_GrainReference_Ext_80028AB9(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<Invokable_ITransactionalResourceExtension_GrainReference_Ext_80028AB9> _activator) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, Invokable_ITransactionalResourceExtension_GrainReference_Ext_80028AB9 instance) { }

        public Invokable_ITransactionalResourceExtension_GrainReference_Ext_80028AB9 ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, Invokable_ITransactionalResourceExtension_GrainReference_Ext_80028AB9 instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, Invokable_ITransactionalResourceExtension_GrainReference_Ext_80028AB9 value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_Invokable_ITransactionalResourceExtension_GrainReference_Ext_BD051D23 : global::Orleans.Serialization.Codecs.IFieldCodec<Invokable_ITransactionalResourceExtension_GrainReference_Ext_BD051D23>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_Invokable_ITransactionalResourceExtension_GrainReference_Ext_BD051D23(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<Invokable_ITransactionalResourceExtension_GrainReference_Ext_BD051D23> _activator) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, Invokable_ITransactionalResourceExtension_GrainReference_Ext_BD051D23 instance) { }

        public Invokable_ITransactionalResourceExtension_GrainReference_Ext_BD051D23 ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, Invokable_ITransactionalResourceExtension_GrainReference_Ext_BD051D23 instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, Invokable_ITransactionalResourceExtension_GrainReference_Ext_BD051D23 value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_Invokable_ITransactionManagerExtension_GrainReference_Ext_12BEFA17 : global::Orleans.Serialization.Codecs.IFieldCodec<Invokable_ITransactionManagerExtension_GrainReference_Ext_12BEFA17>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_Invokable_ITransactionManagerExtension_GrainReference_Ext_12BEFA17(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<Invokable_ITransactionManagerExtension_GrainReference_Ext_12BEFA17> _activator) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, Invokable_ITransactionManagerExtension_GrainReference_Ext_12BEFA17 instance) { }

        public Invokable_ITransactionManagerExtension_GrainReference_Ext_12BEFA17 ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, Invokable_ITransactionManagerExtension_GrainReference_Ext_12BEFA17 instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, Invokable_ITransactionManagerExtension_GrainReference_Ext_12BEFA17 value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_Invokable_ITransactionManagerExtension_GrainReference_Ext_AC4A9AEB : global::Orleans.Serialization.Codecs.IFieldCodec<Invokable_ITransactionManagerExtension_GrainReference_Ext_AC4A9AEB>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_Invokable_ITransactionManagerExtension_GrainReference_Ext_AC4A9AEB(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<Invokable_ITransactionManagerExtension_GrainReference_Ext_AC4A9AEB> _activator) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, Invokable_ITransactionManagerExtension_GrainReference_Ext_AC4A9AEB instance) { }

        public Invokable_ITransactionManagerExtension_GrainReference_Ext_AC4A9AEB ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, Invokable_ITransactionManagerExtension_GrainReference_Ext_AC4A9AEB instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, Invokable_ITransactionManagerExtension_GrainReference_Ext_AC4A9AEB value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_Invokable_ITransactionManagerExtension_GrainReference_Ext_B024EFA6 : global::Orleans.Serialization.Codecs.IFieldCodec<Invokable_ITransactionManagerExtension_GrainReference_Ext_B024EFA6>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_Invokable_ITransactionManagerExtension_GrainReference_Ext_B024EFA6(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<Invokable_ITransactionManagerExtension_GrainReference_Ext_B024EFA6> _activator) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, Invokable_ITransactionManagerExtension_GrainReference_Ext_B024EFA6 instance) { }

        public Invokable_ITransactionManagerExtension_GrainReference_Ext_B024EFA6 ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, Invokable_ITransactionManagerExtension_GrainReference_Ext_B024EFA6 instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, Invokable_ITransactionManagerExtension_GrainReference_Ext_B024EFA6 value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_PendingTransactionState<TState> : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.Abstractions.PendingTransactionState<TState>>, global::Orleans.Serialization.Codecs.IFieldCodec where TState : class, new()
    {
        public Codec_PendingTransactionState(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Transactions.Abstractions.PendingTransactionState<TState> instance) { }

        public global::Orleans.Transactions.Abstractions.PendingTransactionState<TState> ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.Transactions.Abstractions.PendingTransactionState<TState> instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.Abstractions.PendingTransactionState<TState> value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_TransactionalStateMetaData : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.Abstractions.TransactionalStateMetaData>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public Codec_TransactionalStateMetaData(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Transactions.Abstractions.TransactionalStateMetaData instance) { }

        public global::Orleans.Transactions.Abstractions.TransactionalStateMetaData ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.Transactions.Abstractions.TransactionalStateMetaData instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.Abstractions.TransactionalStateMetaData value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_TransactionalStorageLoadResponse<TState> : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.Abstractions.TransactionalStorageLoadResponse<TState>>, global::Orleans.Serialization.Codecs.IFieldCodec where TState : class, new()
    {
        public Codec_TransactionalStorageLoadResponse(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Transactions.Abstractions.TransactionalStorageLoadResponse<TState> instance) { }

        public global::Orleans.Transactions.Abstractions.TransactionalStorageLoadResponse<TState> ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.Transactions.Abstractions.TransactionalStorageLoadResponse<TState> instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.Abstractions.TransactionalStorageLoadResponse<TState> value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_Invokable_ITransactionalResourceExtension_GrainReference_Ext_1BB071FE : global::Orleans.Serialization.Cloning.IDeepCopier<Invokable_ITransactionalResourceExtension_GrainReference_Ext_1BB071FE>, global::Orleans.Serialization.Cloning.IDeepCopier
    {
        public Copier_Invokable_ITransactionalResourceExtension_GrainReference_Ext_1BB071FE(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<Invokable_ITransactionalResourceExtension_GrainReference_Ext_1BB071FE> _activator) { }

        public Invokable_ITransactionalResourceExtension_GrainReference_Ext_1BB071FE DeepCopy(Invokable_ITransactionalResourceExtension_GrainReference_Ext_1BB071FE original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_Invokable_ITransactionalResourceExtension_GrainReference_Ext_2ADCC608 : global::Orleans.Serialization.Cloning.IDeepCopier<Invokable_ITransactionalResourceExtension_GrainReference_Ext_2ADCC608>, global::Orleans.Serialization.Cloning.IDeepCopier
    {
        public Copier_Invokable_ITransactionalResourceExtension_GrainReference_Ext_2ADCC608(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<Invokable_ITransactionalResourceExtension_GrainReference_Ext_2ADCC608> _activator) { }

        public Invokable_ITransactionalResourceExtension_GrainReference_Ext_2ADCC608 DeepCopy(Invokable_ITransactionalResourceExtension_GrainReference_Ext_2ADCC608 original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_Invokable_ITransactionalResourceExtension_GrainReference_Ext_5DDDE6F0 : global::Orleans.Serialization.Cloning.IDeepCopier<Invokable_ITransactionalResourceExtension_GrainReference_Ext_5DDDE6F0>, global::Orleans.Serialization.Cloning.IDeepCopier
    {
        public Copier_Invokable_ITransactionalResourceExtension_GrainReference_Ext_5DDDE6F0(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<Invokable_ITransactionalResourceExtension_GrainReference_Ext_5DDDE6F0> _activator) { }

        public Invokable_ITransactionalResourceExtension_GrainReference_Ext_5DDDE6F0 DeepCopy(Invokable_ITransactionalResourceExtension_GrainReference_Ext_5DDDE6F0 original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_Invokable_ITransactionalResourceExtension_GrainReference_Ext_80028AB9 : global::Orleans.Serialization.Cloning.IDeepCopier<Invokable_ITransactionalResourceExtension_GrainReference_Ext_80028AB9>, global::Orleans.Serialization.Cloning.IDeepCopier
    {
        public Copier_Invokable_ITransactionalResourceExtension_GrainReference_Ext_80028AB9(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<Invokable_ITransactionalResourceExtension_GrainReference_Ext_80028AB9> _activator) { }

        public Invokable_ITransactionalResourceExtension_GrainReference_Ext_80028AB9 DeepCopy(Invokable_ITransactionalResourceExtension_GrainReference_Ext_80028AB9 original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_Invokable_ITransactionalResourceExtension_GrainReference_Ext_BD051D23 : global::Orleans.Serialization.Cloning.IDeepCopier<Invokable_ITransactionalResourceExtension_GrainReference_Ext_BD051D23>, global::Orleans.Serialization.Cloning.IDeepCopier
    {
        public Copier_Invokable_ITransactionalResourceExtension_GrainReference_Ext_BD051D23(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<Invokable_ITransactionalResourceExtension_GrainReference_Ext_BD051D23> _activator) { }

        public Invokable_ITransactionalResourceExtension_GrainReference_Ext_BD051D23 DeepCopy(Invokable_ITransactionalResourceExtension_GrainReference_Ext_BD051D23 original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_Invokable_ITransactionManagerExtension_GrainReference_Ext_12BEFA17 : global::Orleans.Serialization.Cloning.IDeepCopier<Invokable_ITransactionManagerExtension_GrainReference_Ext_12BEFA17>, global::Orleans.Serialization.Cloning.IDeepCopier
    {
        public Copier_Invokable_ITransactionManagerExtension_GrainReference_Ext_12BEFA17(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<Invokable_ITransactionManagerExtension_GrainReference_Ext_12BEFA17> _activator) { }

        public Invokable_ITransactionManagerExtension_GrainReference_Ext_12BEFA17 DeepCopy(Invokable_ITransactionManagerExtension_GrainReference_Ext_12BEFA17 original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_Invokable_ITransactionManagerExtension_GrainReference_Ext_AC4A9AEB : global::Orleans.Serialization.Cloning.IDeepCopier<Invokable_ITransactionManagerExtension_GrainReference_Ext_AC4A9AEB>, global::Orleans.Serialization.Cloning.IDeepCopier
    {
        public Copier_Invokable_ITransactionManagerExtension_GrainReference_Ext_AC4A9AEB(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<Invokable_ITransactionManagerExtension_GrainReference_Ext_AC4A9AEB> _activator) { }

        public Invokable_ITransactionManagerExtension_GrainReference_Ext_AC4A9AEB DeepCopy(Invokable_ITransactionManagerExtension_GrainReference_Ext_AC4A9AEB original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_Invokable_ITransactionManagerExtension_GrainReference_Ext_B024EFA6 : global::Orleans.Serialization.Cloning.IDeepCopier<Invokable_ITransactionManagerExtension_GrainReference_Ext_B024EFA6>, global::Orleans.Serialization.Cloning.IDeepCopier
    {
        public Copier_Invokable_ITransactionManagerExtension_GrainReference_Ext_B024EFA6(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider, global::Orleans.Serialization.Activators.IActivator<Invokable_ITransactionManagerExtension_GrainReference_Ext_B024EFA6> _activator) { }

        public Invokable_ITransactionManagerExtension_GrainReference_Ext_B024EFA6 DeepCopy(Invokable_ITransactionManagerExtension_GrainReference_Ext_B024EFA6 original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_PendingTransactionState<TState> : global::Orleans.Serialization.Cloning.ShallowCopier<global::Orleans.Transactions.Abstractions.PendingTransactionState<TState>> where TState : class, new()
    {
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_TransactionalStateMetaData : global::Orleans.Serialization.Cloning.IDeepCopier<global::Orleans.Transactions.Abstractions.TransactionalStateMetaData>, global::Orleans.Serialization.Cloning.IDeepCopier
    {
        public Copier_TransactionalStateMetaData(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public global::Orleans.Transactions.Abstractions.TransactionalStateMetaData DeepCopy(global::Orleans.Transactions.Abstractions.TransactionalStateMetaData original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_TransactionalStorageLoadResponse<TState> : global::Orleans.Serialization.Cloning.ShallowCopier<global::Orleans.Transactions.Abstractions.TransactionalStorageLoadResponse<TState>> where TState : class, new()
    {
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::Orleans.CompoundTypeAlias(new[] { "inv", typeof(global::Orleans.Runtime.GrainReference), "Ext", typeof(global::Orleans.Transactions.Abstractions.ITransactionalResourceExtension), typeof(global::Orleans.Transactions.Abstractions.ITransactionalResourceExtension), "1BB071FE" })]
    public sealed partial class Invokable_ITransactionalResourceExtension_GrainReference_Ext_1BB071FE : global::Orleans.TransactionTaskRequest<global::Orleans.Transactions.TransactionalStatus>
    {
        public string arg0;
        public System.Guid arg1;
        public global::Orleans.Transactions.Abstractions.AccessCounter arg2;
        public System.DateTime arg3;
        public Invokable_ITransactionalResourceExtension_GrainReference_Ext_1BB071FE(global::Orleans.Serialization.Serializer<global::Orleans.Transactions.OrleansTransactionAbortedException> base0, System.IServiceProvider base1) : base(default(Serialization.Serializer<Transactions.OrleansTransactionAbortedException>)!, default!) { }

        public override void Dispose() { }

        public override string GetActivityName() { throw null; }

        public override object GetArgument(int index) { throw null; }

        public override int GetArgumentCount() { throw null; }

        public override string GetInterfaceName() { throw null; }

        public override System.Type GetInterfaceType() { throw null; }

        public override System.Reflection.MethodInfo GetMethod() { throw null; }

        public override string GetMethodName() { throw null; }

        public override object GetTarget() { throw null; }

        protected override System.Threading.Tasks.Task<global::Orleans.Transactions.TransactionalStatus> InvokeInner() { throw null; }

        public override void SetArgument(int index, object value) { }

        public override void SetTarget(global::Orleans.Serialization.Invocation.ITargetHolder holder) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::Orleans.CompoundTypeAlias(new[] { "inv", typeof(global::Orleans.Runtime.GrainReference), "Ext", typeof(global::Orleans.Transactions.Abstractions.ITransactionalResourceExtension), typeof(global::Orleans.Transactions.Abstractions.ITransactionalResourceExtension), "2ADCC608" })]
    public sealed partial class Invokable_ITransactionalResourceExtension_GrainReference_Ext_2ADCC608 : global::Orleans.TransactionTaskRequest
    {
        public string arg0;
        public System.Guid arg1;
        public global::Orleans.Transactions.Abstractions.AccessCounter arg2;
        public System.DateTime arg3;
        public global::Orleans.Transactions.ParticipantId arg4;
        public Invokable_ITransactionalResourceExtension_GrainReference_Ext_2ADCC608(global::Orleans.Serialization.Serializer<global::Orleans.Transactions.OrleansTransactionAbortedException> base0, System.IServiceProvider base1) : base(default(Serialization.Serializer<Transactions.OrleansTransactionAbortedException>)!, default!) { }

        public override void Dispose() { }

        public override string GetActivityName() { throw null; }

        public override object GetArgument(int index) { throw null; }

        public override int GetArgumentCount() { throw null; }

        public override string GetInterfaceName() { throw null; }

        public override System.Type GetInterfaceType() { throw null; }

        public override System.Reflection.MethodInfo GetMethod() { throw null; }

        public override string GetMethodName() { throw null; }

        public override object GetTarget() { throw null; }

        protected override System.Threading.Tasks.Task InvokeInner() { throw null; }

        public override void SetArgument(int index, object value) { }

        public override void SetTarget(global::Orleans.Serialization.Invocation.ITargetHolder holder) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::Orleans.CompoundTypeAlias(new[] { "inv", typeof(global::Orleans.Runtime.GrainReference), "Ext", typeof(global::Orleans.Transactions.Abstractions.ITransactionalResourceExtension), typeof(global::Orleans.Transactions.Abstractions.ITransactionalResourceExtension), "5DDDE6F0" })]
    public sealed partial class Invokable_ITransactionalResourceExtension_GrainReference_Ext_5DDDE6F0 : global::Orleans.TransactionTaskRequest
    {
        public string arg0;
        public System.Guid arg1;
        public System.DateTime arg2;
        public Invokable_ITransactionalResourceExtension_GrainReference_Ext_5DDDE6F0(global::Orleans.Serialization.Serializer<global::Orleans.Transactions.OrleansTransactionAbortedException> base0, System.IServiceProvider base1) : base(default(Serialization.Serializer<Transactions.OrleansTransactionAbortedException>)!, default!) { }

        public override void Dispose() { }

        public override string GetActivityName() { throw null; }

        public override object GetArgument(int index) { throw null; }

        public override int GetArgumentCount() { throw null; }

        public override string GetInterfaceName() { throw null; }

        public override System.Type GetInterfaceType() { throw null; }

        public override System.Reflection.MethodInfo GetMethod() { throw null; }

        public override string GetMethodName() { throw null; }

        public override object GetTarget() { throw null; }

        protected override System.Threading.Tasks.Task InvokeInner() { throw null; }

        public override void SetArgument(int index, object value) { }

        public override void SetTarget(global::Orleans.Serialization.Invocation.ITargetHolder holder) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::Orleans.CompoundTypeAlias(new[] { "inv", typeof(global::Orleans.Runtime.GrainReference), "Ext", typeof(global::Orleans.Transactions.Abstractions.ITransactionalResourceExtension), typeof(global::Orleans.Transactions.Abstractions.ITransactionalResourceExtension), "80028AB9" })]
    public sealed partial class Invokable_ITransactionalResourceExtension_GrainReference_Ext_80028AB9 : global::Orleans.TransactionTaskRequest
    {
        public string arg0;
        public System.Guid arg1;
        public System.DateTime arg2;
        public global::Orleans.Transactions.TransactionalStatus arg3;
        public Invokable_ITransactionalResourceExtension_GrainReference_Ext_80028AB9(global::Orleans.Serialization.Serializer<global::Orleans.Transactions.OrleansTransactionAbortedException> base0, System.IServiceProvider base1) : base(default(Serialization.Serializer<Transactions.OrleansTransactionAbortedException>)!, default!) { }

        public override void Dispose() { }

        public override string GetActivityName() { throw null; }

        public override object GetArgument(int index) { throw null; }

        public override int GetArgumentCount() { throw null; }

        public override string GetInterfaceName() { throw null; }

        public override System.Type GetInterfaceType() { throw null; }

        public override System.Reflection.MethodInfo GetMethod() { throw null; }

        public override string GetMethodName() { throw null; }

        public override object GetTarget() { throw null; }

        protected override System.Threading.Tasks.Task InvokeInner() { throw null; }

        public override void SetArgument(int index, object value) { }

        public override void SetTarget(global::Orleans.Serialization.Invocation.ITargetHolder holder) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::Orleans.CompoundTypeAlias(new[] { "inv", typeof(global::Orleans.Runtime.GrainReference), "Ext", typeof(global::Orleans.Transactions.Abstractions.ITransactionalResourceExtension), typeof(global::Orleans.Transactions.Abstractions.ITransactionalResourceExtension), "BD051D23" })]
    public sealed partial class Invokable_ITransactionalResourceExtension_GrainReference_Ext_BD051D23 : global::Orleans.TransactionTaskRequest
    {
        public string arg0;
        public System.Guid arg1;
        public Invokable_ITransactionalResourceExtension_GrainReference_Ext_BD051D23(global::Orleans.Serialization.Serializer<global::Orleans.Transactions.OrleansTransactionAbortedException> base0, System.IServiceProvider base1) : base(default(Serialization.Serializer<Transactions.OrleansTransactionAbortedException>)!, default!) { }

        public override void Dispose() { }

        public override string GetActivityName() { throw null; }

        public override object GetArgument(int index) { throw null; }

        public override int GetArgumentCount() { throw null; }

        public override string GetInterfaceName() { throw null; }

        public override System.Type GetInterfaceType() { throw null; }

        public override System.Reflection.MethodInfo GetMethod() { throw null; }

        public override string GetMethodName() { throw null; }

        public override object GetTarget() { throw null; }

        protected override System.Threading.Tasks.Task InvokeInner() { throw null; }

        public override void SetArgument(int index, object value) { }

        public override void SetTarget(global::Orleans.Serialization.Invocation.ITargetHolder holder) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::Orleans.CompoundTypeAlias(new[] { "inv", typeof(global::Orleans.Runtime.GrainReference), "Ext", typeof(global::Orleans.Transactions.Abstractions.ITransactionManagerExtension), typeof(global::Orleans.Transactions.Abstractions.ITransactionManagerExtension), "12BEFA17" })]
    public sealed partial class Invokable_ITransactionManagerExtension_GrainReference_Ext_12BEFA17 : global::Orleans.TransactionTaskRequest
    {
        public string arg0;
        public System.Guid arg1;
        public System.DateTime arg2;
        public global::Orleans.Transactions.ParticipantId arg3;
        public global::Orleans.Transactions.TransactionalStatus arg4;
        public Invokable_ITransactionManagerExtension_GrainReference_Ext_12BEFA17(global::Orleans.Serialization.Serializer<global::Orleans.Transactions.OrleansTransactionAbortedException> base0, System.IServiceProvider base1) : base(default(Serialization.Serializer<Transactions.OrleansTransactionAbortedException>)!, default!) { }

        public override void Dispose() { }

        public override string GetActivityName() { throw null; }

        public override object GetArgument(int index) { throw null; }

        public override int GetArgumentCount() { throw null; }

        public override string GetInterfaceName() { throw null; }

        public override System.Type GetInterfaceType() { throw null; }

        public override System.Reflection.MethodInfo GetMethod() { throw null; }

        public override string GetMethodName() { throw null; }

        public override object GetTarget() { throw null; }

        protected override System.Threading.Tasks.Task InvokeInner() { throw null; }

        public override void SetArgument(int index, object value) { }

        public override void SetTarget(global::Orleans.Serialization.Invocation.ITargetHolder holder) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::Orleans.CompoundTypeAlias(new[] { "inv", typeof(global::Orleans.Runtime.GrainReference), "Ext", typeof(global::Orleans.Transactions.Abstractions.ITransactionManagerExtension), typeof(global::Orleans.Transactions.Abstractions.ITransactionManagerExtension), "AC4A9AEB" })]
    public sealed partial class Invokable_ITransactionManagerExtension_GrainReference_Ext_AC4A9AEB : global::Orleans.TransactionTaskRequest
    {
        public string arg0;
        public System.Guid arg1;
        public System.DateTime arg2;
        public global::Orleans.Transactions.ParticipantId arg3;
        public Invokable_ITransactionManagerExtension_GrainReference_Ext_AC4A9AEB(global::Orleans.Serialization.Serializer<global::Orleans.Transactions.OrleansTransactionAbortedException> base0, System.IServiceProvider base1) : base(default(Serialization.Serializer<Transactions.OrleansTransactionAbortedException>)!, default!) { }

        public override void Dispose() { }

        public override string GetActivityName() { throw null; }

        public override object GetArgument(int index) { throw null; }

        public override int GetArgumentCount() { throw null; }

        public override string GetInterfaceName() { throw null; }

        public override System.Type GetInterfaceType() { throw null; }

        public override System.Reflection.MethodInfo GetMethod() { throw null; }

        public override string GetMethodName() { throw null; }

        public override object GetTarget() { throw null; }

        protected override System.Threading.Tasks.Task InvokeInner() { throw null; }

        public override void SetArgument(int index, object value) { }

        public override void SetTarget(global::Orleans.Serialization.Invocation.ITargetHolder holder) { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::Orleans.CompoundTypeAlias(new[] { "inv", typeof(global::Orleans.Runtime.GrainReference), "Ext", typeof(global::Orleans.Transactions.Abstractions.ITransactionManagerExtension), typeof(global::Orleans.Transactions.Abstractions.ITransactionManagerExtension), "B024EFA6" })]
    public sealed partial class Invokable_ITransactionManagerExtension_GrainReference_Ext_B024EFA6 : global::Orleans.TransactionTaskRequest<global::Orleans.Transactions.TransactionalStatus>
    {
        public string arg0;
        public System.Guid arg1;
        public global::Orleans.Transactions.Abstractions.AccessCounter arg2;
        public System.DateTime arg3;
        public System.Collections.Generic.List<global::Orleans.Transactions.ParticipantId> arg4;
        public int arg5;
        public Invokable_ITransactionManagerExtension_GrainReference_Ext_B024EFA6(global::Orleans.Serialization.Serializer<global::Orleans.Transactions.OrleansTransactionAbortedException> base0, System.IServiceProvider base1) : base(default(Serialization.Serializer<Transactions.OrleansTransactionAbortedException>)!, default!) { }

        public override void Dispose() { }

        public override string GetActivityName() { throw null; }

        public override object GetArgument(int index) { throw null; }

        public override int GetArgumentCount() { throw null; }

        public override string GetInterfaceName() { throw null; }

        public override System.Type GetInterfaceType() { throw null; }

        public override System.Reflection.MethodInfo GetMethod() { throw null; }

        public override string GetMethodName() { throw null; }

        public override object GetTarget() { throw null; }

        protected override System.Threading.Tasks.Task<global::Orleans.Transactions.TransactionalStatus> InvokeInner() { throw null; }

        public override void SetArgument(int index, object value) { }

        public override void SetTarget(global::Orleans.Serialization.Invocation.ITargetHolder holder) { }
    }
}

namespace OrleansCodeGen.Orleans.Transactions.ParticipantId
{
    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_IdComparer : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.ParticipantId.IdComparer>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Transactions.ParticipantId.IdComparer instance) { }

        public global::Orleans.Transactions.ParticipantId.IdComparer ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.Transactions.ParticipantId.IdComparer instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.ParticipantId.IdComparer value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_Role : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.ParticipantId.Role>, global::Orleans.Serialization.Codecs.IFieldCodec
    {
        public global::Orleans.Transactions.ParticipantId.Role ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.ParticipantId.Role value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }
}

namespace OrleansCodeGen.Orleans.Transactions.TransactionCommitter
{
    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Codec_OperationState<TService> : global::Orleans.Serialization.Codecs.IFieldCodec<global::Orleans.Transactions.TransactionCommitter<TService>.OperationState>, global::Orleans.Serialization.Codecs.IFieldCodec where TService : class
    {
        public Codec_OperationState(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public void Deserialize<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Transactions.TransactionCommitter<TService>.OperationState instance) { }

        public global::Orleans.Transactions.TransactionCommitter<TService>.OperationState ReadValue<TReaderInput>(ref global::Orleans.Serialization.Buffers.Reader<TReaderInput> reader, global::Orleans.Serialization.WireProtocol.Field field) { throw null; }

        public void Serialize<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, global::Orleans.Transactions.TransactionCommitter<TService>.OperationState instance)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }

        public void WriteField<TBufferWriter>(ref global::Orleans.Serialization.Buffers.Writer<TBufferWriter> writer, uint fieldIdDelta, System.Type expectedType, global::Orleans.Transactions.TransactionCommitter<TService>.OperationState value)
            where TBufferWriter : System.Buffers.IBufferWriter<byte> { }
    }

    [System.CodeDom.Compiler.GeneratedCode("OrleansCodeGen", "9.0.0.0")]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public sealed partial class Copier_OperationState<TService> : global::Orleans.Serialization.Cloning.IDeepCopier<global::Orleans.Transactions.TransactionCommitter<TService>.OperationState>, global::Orleans.Serialization.Cloning.IDeepCopier where TService : class
    {
        public Copier_OperationState(global::Orleans.Serialization.Serializers.ICodecProvider codecProvider) { }

        public global::Orleans.Transactions.TransactionCommitter<TService>.OperationState DeepCopy(global::Orleans.Transactions.TransactionCommitter<TService>.OperationState original, global::Orleans.Serialization.Cloning.CopyContext context) { throw null; }
    }
}