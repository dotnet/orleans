//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Orleans.Clustering.Cassandra.Hosting
{
    public partial class CassandraClusteringOptions
    {
        public System.TimeSpan InitializeRetryMaxDelay { get { throw null; } set { } }

        public bool UseCassandraTtl { get { throw null; } set { } }

        public void ConfigureClient(System.Func<System.IServiceProvider, System.Threading.Tasks.Task<global::Cassandra.ISession>> configurationDelegate) { }

        public void ConfigureClient(string connectionString, string keyspace = "orleans") { }
    }

    public static partial class CassandraMembershipHostingExtensions
    {
        public static Orleans.Hosting.IClientBuilder UseCassandraClustering(this Orleans.Hosting.IClientBuilder builder, System.Action<CassandraClusteringOptions> configureOptions) { throw null; }

        public static Orleans.Hosting.IClientBuilder UseCassandraClustering(this Orleans.Hosting.IClientBuilder builder, System.Func<System.IServiceProvider, System.Threading.Tasks.Task<global::Cassandra.ISession>> sessionProvider) { throw null; }

        public static Orleans.Hosting.IClientBuilder UseCassandraClustering(this Orleans.Hosting.IClientBuilder builder, string connectionString, string keyspace = "orleans") { throw null; }

        public static Orleans.Hosting.IClientBuilder UseCassandraClustering(this Orleans.Hosting.IClientBuilder builder) { throw null; }

        public static Orleans.Hosting.ISiloBuilder UseCassandraClustering(this Orleans.Hosting.ISiloBuilder builder, System.Action<CassandraClusteringOptions> configureOptions) { throw null; }

        public static Orleans.Hosting.ISiloBuilder UseCassandraClustering(this Orleans.Hosting.ISiloBuilder builder, System.Func<System.IServiceProvider, System.Threading.Tasks.Task<global::Cassandra.ISession>> sessionProvider) { throw null; }

        public static Orleans.Hosting.ISiloBuilder UseCassandraClustering(this Orleans.Hosting.ISiloBuilder builder, string connectionString, string keyspace = "orleans") { throw null; }

        public static Orleans.Hosting.ISiloBuilder UseCassandraClustering(this Orleans.Hosting.ISiloBuilder builder) { throw null; }
    }
}