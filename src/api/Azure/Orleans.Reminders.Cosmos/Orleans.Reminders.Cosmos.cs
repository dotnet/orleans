//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Orleans.Hosting
{
    public static partial class HostingExtensions
    {
        public static Microsoft.Extensions.DependencyInjection.IServiceCollection UseCosmosReminderService(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Action<Microsoft.Extensions.Options.OptionsBuilder<Reminders.Cosmos.CosmosReminderTableOptions>> configure) { throw null; }

        public static Microsoft.Extensions.DependencyInjection.IServiceCollection UseCosmosReminderService(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Action<Reminders.Cosmos.CosmosReminderTableOptions> configure) { throw null; }

        public static ISiloBuilder UseCosmosReminderService(this ISiloBuilder builder, System.Action<Microsoft.Extensions.Options.OptionsBuilder<Reminders.Cosmos.CosmosReminderTableOptions>> configure) { throw null; }

        public static ISiloBuilder UseCosmosReminderService(this ISiloBuilder builder, System.Action<Reminders.Cosmos.CosmosReminderTableOptions> configure) { throw null; }
    }
}

namespace Orleans.Reminders.Cosmos
{
    public abstract partial class CosmosOptions
    {
        public bool CleanResourcesOnInitialization { get { throw null; } set { } }

        public Microsoft.Azure.Cosmos.CosmosClientOptions ClientOptions { get { throw null; } set { } }

        public string ContainerName { get { throw null; } set { } }

        public Microsoft.Azure.Cosmos.ThroughputProperties? ContainerThroughputProperties { get { throw null; } set { } }

        public string DatabaseName { get { throw null; } set { } }

        public int? DatabaseThroughput { get { throw null; } set { } }

        public bool IsResourceCreationEnabled { get { throw null; } set { } }

        public ICosmosOperationExecutor OperationExecutor { get { throw null; } set { } }

        public void ConfigureCosmosClient(System.Func<System.IServiceProvider, System.Threading.Tasks.ValueTask<Microsoft.Azure.Cosmos.CosmosClient>> createClient) { }

        public void ConfigureCosmosClient(string accountEndpoint, Azure.AzureKeyCredential authKeyOrResourceTokenCredential) { }

        public void ConfigureCosmosClient(string accountEndpoint, Azure.Core.TokenCredential tokenCredential) { }

        public void ConfigureCosmosClient(string accountEndpoint, string authKeyOrResourceToken) { }

        public void ConfigureCosmosClient(string connectionString) { }
    }

    public partial class CosmosOptionsValidator<TOptions> : IConfigurationValidator where TOptions : CosmosOptions
    {
        public CosmosOptionsValidator(TOptions options, string name) { }

        public void ValidateConfiguration() { }
    }

    public partial class CosmosReminderTableOptions : CosmosOptions
    {
    }

    public partial interface ICosmosOperationExecutor
    {
        System.Threading.Tasks.Task<TResult> ExecuteOperation<TArg, TResult>(System.Func<TArg, System.Threading.Tasks.Task<TResult>> func, TArg arg);
    }
}