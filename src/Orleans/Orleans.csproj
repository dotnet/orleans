<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <PackageId>Microsoft.Orleans.Core</PackageId>
    <Title>Microsoft Orleans Core Library</Title>
    <Description>Core library of Microsoft Orleans used both on the client and server.</Description>
  </PropertyGroup>

  <PropertyGroup>
    <AssemblyName>Orleans</AssemblyName>
    <RootNamespace>Orleans</RootNamespace>
    <OrleansBuildTimeCodeGen Condition="'$(Bootstrap)' != 'true'">true</OrleansBuildTimeCodeGen>
  </PropertyGroup>

  <ItemGroup>
    <Content Update="Configuration\OrleansConfiguration.xsd">
      <SubType>Designer</SubType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>false</Pack>
    </Content>
    <None Include="..\Orleans.SDK.targets">
      <Link>Orleans.SDK.targets</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup Condition=" '$(BuildFlavor)' == 'Current' ">
    <Compile Remove="Statistics\RuntimeStatisticsGroup.cs" />
  </ItemGroup>

  <ItemGroup Condition=" '$(BuildFlavor)' == 'Legacy' ">
    <Compile Remove="Shims\AppDomain.cs" />
    <Compile Remove="Shims\RuntimeStatisticsGroup.cs" />
  </ItemGroup>

  <ItemGroup Condition=" '$(BuildFlavor)' == 'Legacy' ">
    <Reference Include="System.Management" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="$(MicrosoftExtensionsDependencyInjection)" />
    <PackageReference Include="Newtonsoft.Json" Version="$(NewtonsoftJsonVersion)" />
    <PackageReference Include="System.Collections.Immutable" Version="$(SystemCollectionsImmutableVersion)" />
    <PackageReference Include="System.ValueTuple" Version="$(SystemRuntimeVersion)" />
  </ItemGroup>

  <ItemGroup Condition=" '$(BuildFlavor)' == 'Legacy' ">
    <PackageReference Include="System.Reflection.Metadata" Version="$(SystemReflectionMetadataVersion)" />
  </ItemGroup>

  <ItemGroup Condition=" '$(BuildFlavor)' == 'Current' ">
    <PackageReference Include="System.ComponentModel.TypeConverter" Version="$(SystemRuntimeVersion)" />
    <PackageReference Include="System.Diagnostics.FileVersionInfo" Version="$(SystemRuntimeVersion)" />
    <PackageReference Include="System.Diagnostics.Process" Version="$(SystemRuntimeVersion)" />
    <PackageReference Include="System.Diagnostics.TraceSource" Version="$(SystemRuntimeVersion)" />
    <PackageReference Include="System.Linq.Expressions" Version="$(SystemRuntimeVersion)" />
    <PackageReference Include="System.Net.NameResolution" Version="$(SystemRuntimeVersion)" />
    <PackageReference Include="System.Net.NetworkInformation" Version="$(SystemRuntimeVersion)" />
    <PackageReference Include="System.Reflection.Emit" Version="$(SystemRuntimeVersion)" />
    <PackageReference Include="System.Reflection.Emit.Lightweight" Version="$(SystemRuntimeVersion)" />
    <PackageReference Include="System.Reflection.TypeExtensions" Version="$(SystemRuntimeVersion)" />
    <PackageReference Include="System.Runtime" Version="$(SystemRuntimeVersion)" />
    <PackageReference Include="System.Runtime.Serialization.Formatters" Version="$(SystemRuntimeVersion)" />
    <PackageReference Include="System.Runtime.Serialization.Primitives" Version="$(SystemRuntimeVersion)" />
    <PackageReference Include="System.Security.Cryptography.Algorithms" Version="$(SystemRuntimeVersion)" />
    <PackageReference Include="System.Threading.Thread" Version="$(SystemRuntimeVersion)" />
    <PackageReference Include="System.Threading.ThreadPool" Version="$(SystemRuntimeVersion)" />
    <PackageReference Include="System.Xml.XmlDocument" Version="$(SystemRuntimeVersion)" />
    <PackageReference Include="System.Xml.XPath.XmlDocument" Version="$(SystemRuntimeVersion)" />
  </ItemGroup>

  <PropertyGroup>
    <OrleansBootstrapSteps>
      OrleansDllBootstrapUsingCodeGen
    </OrleansBootstrapSteps>
  </PropertyGroup>

  <Target Name="OrleansBootstrap" BeforeTargets="AssignTargetPaths" DependsOnTargets="$(OrleansBootstrapSteps)" Condition="'$(Bootstrap)' != 'true'" />

  <Target Name="OrleansDllBootstrapUsingCodeGen" Inputs="@(ReferencePath)" Outputs="$(IntermediateOutputPath)$(TargetName).orleans.g.cs" Condition="'$(Bootstrap)' != 'true'">
    <Message Text="[OrleansDllBootstrapUsingCodeGen] - Building ClientGenerator start" Importance="high" />
    <PropertyGroup>
      <!-- Visual Studio or MsBuild .sln build -->
      <BootstrapOutputPath>$(SourceRoot)/Bootstrap/$(BuildFlavor)/$(Configuration)/</BootstrapOutputPath>
      <ExcludeCodeGen>$(DefineConstants);EXCLUDE_CODEGEN;ORLEANS_BOOTSTRAP</ExcludeCodeGen>
    </PropertyGroup>
    <Message Text="[OrleansDllBootstrapUsingCodeGen] - OutputPath: $(BootstrapOutputPath)" Importance="high" />
    <!-- Compile code generator -->
    <MSBuild Projects="$(ProjectDir)..\ClientGenerator\BootstrapCodegen.proj" Properties="BootstrapOutputPath=$(BootstrapOutputPath);Bootstrap=true" Targets="Build" UnloadProjectsOnCompletion="true" UseResultsCache="false" BuildInParallel="true" />
    <!-- Finally invoke code generator on the recently built Orleans.dll -->
    <Message Text="[OrleansDllBootstrapUsingCodeGen] - Building ClientGenerator finished" Importance="high" />
  </Target>
</Project>
