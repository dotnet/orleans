<Project Sdk="Microsoft.NET.Sdk" DefaultTargets="Build;PostBuildPublish">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <OutputType>Exe</OutputType>
    <IsPackable>false</IsPackable>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <AssemblyName>Orleans.CodeGenerator.MSBuild.Bootstrap</AssemblyName>
    <RootNamespace>Orleans.CodeGenerator.MSBuild</RootNamespace>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <PreserveCompilationContext>true</PreserveCompilationContext>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>
    <DevelopmentDependency>true</DevelopmentDependency>
    <PublishRoot>bin\$(Configuration)\publish\</PublishRoot>
    <PublishDir>$(PublishRoot)$(TargetFramework)</PublishDir>
    <SourceDir>$(MSBuildThisFileDirectory)..\..\Orleans.CodeGenerator.MSBuild\</SourceDir>
    <OrleansBuildTimeCodeGen>false</OrleansBuildTimeCodeGen>
    <SatelliteResourceLanguages>en-US</SatelliteResourceLanguages>
  </PropertyGroup>
  
  <ItemGroup>
    <Compile Include="$(SourceDir)**/*.cs" Exclude="$(SourceDir)obj/**/*.cs;$(SourceDir)bin/**/*.cs" Condition="'$(DesignTimeBuild)' != 'true'">
      <!-- Hide the files and folder structure in the editor. -->
      <Link>_%(Filename)%(Extension)</Link>
      <Visible>false</Visible>
    </Compile>
    <ProjectReference Include="..\..\Orleans.CodeGenerator\Orleans.CodeGenerator.csproj" PrivateAssets="all" />
    <ProjectReference Include="..\..\Orleans.CodeGenerator.MSBuild.Tasks\Orleans.CodeGenerator.MSBuild.Tasks.csproj" PrivateAssets="all" ExcludeAssets="compile" />
  </ItemGroup>
  
  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.DependencyModel" Version="$(MicrosoftExtensionsDependencyModelVersion)" />
    <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="$(MicrosoftExtensionsLoggingVersion)" />
    <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="$(MicrosoftExtensionsLoggingVersion)" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" Version="$(MicrosoftCodeAnalysisVersion)" />
  </ItemGroup>


  <Target Name="PostBuildPublish" AfterTargets="Build">
    <!-- So that we can create a nuget package which includes all dependencies, we publish the build. -->
    <!-- However, we cannot publish during the cross-targeting build, so we skip that. -->
    <CallTarget Targets="Publish" Condition="'$(TargetFramework)' != '' and '$(DesignTimeBuild)' == ''" />
  </Target>

</Project>