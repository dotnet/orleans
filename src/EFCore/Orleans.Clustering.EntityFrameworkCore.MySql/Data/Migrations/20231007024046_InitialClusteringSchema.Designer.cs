// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Orleans.Clustering.EntityFrameworkCore.MySql.Data;

#nullable disable

namespace Orleans.Clustering.EntityFrameworkCore.MySql.Data.Migrations
{
    [DbContext(typeof(MySqlClusterDbContext))]
    [Migration("20231007024046_InitialClusteringSchema")]
    partial class InitialClusteringSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Orleans.Clustering.EntityFrameworkCore.Data.ClusterRecord<System.DateTime>", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("ETag")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Cluster");

                    b.ToTable("Clusters");
                });

            modelBuilder.Entity("Orleans.Clustering.EntityFrameworkCore.Data.SiloRecord<System.DateTime>", b =>
                {
                    b.Property<string>("ClusterId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<int>("Generation")
                        .HasColumnType("int");

                    b.Property<DateTime>("ETag")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("HostName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<DateTimeOffset>("IAmAliveTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<int?>("ProxyPort")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SuspectingSilos")
                        .HasColumnType("longtext");

                    b.Property<string>("SuspectingTimes")
                        .HasColumnType("longtext");

                    b.HasKey("ClusterId", "Address", "Port", "Generation")
                        .HasName("PK_Silo");

                    b.HasIndex("ClusterId")
                        .HasDatabaseName("IDX_Silo_ClusterId");

                    b.HasIndex("ClusterId", "Status")
                        .HasDatabaseName("IDX_Silo_ClusterId_Status");

                    b.HasIndex("ClusterId", "Status", "IAmAliveTime")
                        .HasDatabaseName("IDX_Silo_ClusterId_Status_IAmAlive");

                    b.ToTable("Silos");
                });

            modelBuilder.Entity("Orleans.Clustering.EntityFrameworkCore.Data.SiloRecord<System.DateTime>", b =>
                {
                    b.HasOne("Orleans.Clustering.EntityFrameworkCore.Data.ClusterRecord<System.DateTime>", "Cluster")
                        .WithMany("Silos")
                        .HasForeignKey("ClusterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cluster");
                });

            modelBuilder.Entity("Orleans.Clustering.EntityFrameworkCore.Data.ClusterRecord<System.DateTime>", b =>
                {
                    b.Navigation("Silos");
                });
#pragma warning restore 612, 618
        }
    }
}
