<!--
***********************************************************************************************
Orleans Target for SDK Developers
Copyright (C) Microsoft Corporation. All rights reserved.
***********************************************************************************************
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Work out the path to ClientGenerator.exe -->
  <Choose>
    <!-- Using Orleans NuGet packages -->
    <When Condition="Exists('$(MSBuildThisFileDirectory)..\tools\ClientGenerator.exe')">
      <PropertyGroup>
        <CodeGenToolExeDir>$(MSBuildThisFileDirectory)..\tools</CodeGenToolExeDir>
      </PropertyGroup>
    </When>
    <!-- Internal build within Orleans.sln -->
    <When Condition="'$(OrleansReferencesBase)' != ''">
      <PropertyGroup>
        <CodeGenToolExeDir>$(OrleansReferencesBase)</CodeGenToolExeDir>
      </PropertyGroup>
    </When>
  </Choose>

  <Choose>
    <When Condition="HasTrailingSlash('$(CodeGenToolExeDir)')">
      <PropertyGroup>
        <CodeGenToolExe>$(CodeGenToolExeDir)ClientGenerator.exe</CodeGenToolExe>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <CodeGenToolExe>$(CodeGenToolExeDir)\ClientGenerator.exe</CodeGenToolExe>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <!-- This target is run just before Compile for an Orleans Grain Interface Project -->
  <Target Name="OrleansCodeGeneration"
          AfterTargets="GenerateBuildDependencyFile"
          BeforeTargets="AssignTargetPaths"
          Condition="'$(OrleansCodeGenPrecompile)'!='true'"
          Inputs="@(Compile);@(ReferencePath)"
          Outputs="$(IntermediateOutputPath)$(TargetName).orleans.g.cs">
    <Message Text="[OrleansCodeGeneration] - Project=$(ProjectName)" Importance="high"/>
    <Error Text="$(CodeGenToolExe) could not be found!" Condition="!Exists('$(CodeGenToolExe)')" />
    <Message Text="[OrleansCodeGeneration]
- CodeGenToolExeDir=$(CodeGenToolExeDir)
- OrleansReferencesBase=$(OrleansReferencesBase)
- OrleansSDK=$(OrleansSDK)
- Using CodeGenToolExe location=$(CodeGenToolExe)
" />
    <PropertyGroup>
      <ArgsFile>$(IntermediateOutputPath)$(TargetName).orleans.g.args.txt</ArgsFile>
      <CodeGenDirectory Condition="'$([System.IO.Path]::IsPathRooted($(IntermediateOutputPath)))' == 'true'">$(IntermediateOutputPath)</CodeGenDirectory>
      <CodeGenDirectory Condition="'$(CodeGenDirectory)' == ''">$(ProjectDir)$(IntermediateOutputPath)</CodeGenDirectory>
      <CodeGenFilename Condition="'$(CodeGenFilename)' == ''">$(CodeGenDirectory)$(TargetName).orleans.g.cs</CodeGenFilename>
      <ExcludeCodeGen>$(DefineConstants);EXCLUDE_CODEGEN</ExcludeCodeGen>
    </PropertyGroup>
    <ItemGroup>
      <CodeGenArgs Include="/in:$(IntermediateOutputPath)$(TargetName)$(TargetExt)"/>
      <CodeGenArgs Include="/out:$(CodeGenFilename)"/>
      <CodeGenArgs Include="@(ReferencePath->'/r:%(Identity)')"/>
    </ItemGroup>
    <Copy SourceFiles="$(ProjectDepsFilePath)" DestinationFolder="$(CodeGenDirectory)" ContinueOnError="WarnAndContinue" Condition="Exists('$(ProjectDepsFilePath)')" />
    <MSBuild Projects="$(MSBuildProjectFullPath)" Targets="Build" Properties="OrleansCodeGenPrecompile=true;DefineConstants=$(ExcludeCodeGen);DesignTimeBuild=true;PreserveCompilationContext=true" UnloadProjectsOnCompletion="true" UseResultsCache="false" />
    <Message Text="[OrleansCodeGeneration] - Code-gen args file=$(ArgsFile)"/>
    <WriteLinesToFile Overwrite="true" File="$(ArgsFile)" Lines="@(CodeGenArgs)"/>
    <Message Text="[OrleansCodeGeneration] - Precompiled assembly"/>
    <Exec Command="&quot;$(CodeGenToolExe)&quot; &quot;@$(ArgsFile)&quot;" Outputs="$(CodeGenFilename)">
      <Output TaskParameter="Outputs" ItemName="Compile" />
      <Output TaskParameter="Outputs" ItemName="FileWrites" />
    </Exec>
  </Target>
</Project>
