<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <PackageId>Microsoft.Orleans.CodeGenerator.MSBuild</PackageId>
    <TargetFramework>net7.0</TargetFramework>
    <RuntimeIdentifiers>win-x64;linux-x64</RuntimeIdentifiers>
    <PackageDescription>Code generator for projects using Orleans.Serialization with MSBuild</PackageDescription>
    <IsPackable>false</IsPackable>
    <OutputType>Exe</OutputType>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <BuildOutputTargetFolder>tasks</BuildOutputTargetFolder>
    <AssemblyName>Orleans.CodeGenerator.MSBuild</AssemblyName>
    <RootNamespace>Orleans.CodeGenerator.MSBuild</RootNamespace>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <PreserveCompilationContext>true</PreserveCompilationContext>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>
    <DevelopmentDependency>true</DevelopmentDependency>
    <PublishRoot>bin\$(Configuration)\publish\</PublishRoot>
    <PublishDir>$(PublishRoot)$(TargetFramework)</PublishDir>
    <IsOrleansFrameworkPart>false</IsOrleansFrameworkPart>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\Orleans.CodeGenerator\Orleans.CodeGenerator.csproj" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Build" />
    <PackageReference Include="Microsoft.CodeAnalysis.Workspaces.Common" />
    <PackageReference Include="Microsoft.CodeAnalysis.Common" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Workspaces" />
    <PackageReference Include="Microsoft.Extensions.DependencyModel" />
    <PackageReference Include="Microsoft.Extensions.Logging" />
    <PackageReference Include="Microsoft.Extensions.Logging.Console" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Update="@(PackageReference)" PrivateAssets="all" Publish="true" />
  </ItemGroup>

  <Target Name="PostBuildPublish" AfterTargets="Build" DependsOnTargets="ResolveAssemblyReferences;Publish" Inputs="@(PostBuildPublishInputs)" Outputs="$(PublishCacheFile)" Condition="'$(TargetFramework)' != '' and '$(DesignTimeBuild)' == ''">

    <Hash ItemsToHash="@(PostBuildPublishInputs)">
      <Output TaskParameter="HashResult" PropertyName="Orleans_UpdatedInputPubCacheContents" />
    </Hash>

    <WriteLinesToFile Overwrite="true" File="$(PublishCacheFile)" Lines="$(Orleans_UpdatedInputPubCacheContents)" WriteOnlyWhenDifferent="True" />

    <ItemGroup>
      <FileWrites Include="$(PublishCacheFile)" />
    </ItemGroup>
  </Target>
  <!-- END: PostBuildPublish -->

  <Target Name="PackTaskDependencies" BeforeTargets="GenerateNuspec">
   <!--
    The include needs to happen after output has been copied to build output folder
    but before NuGet generates a nuspec. See https://github.com/NuGet/Home/issues/4704.
   -->
    <ItemGroup>
      <PublishedFiles Include="$(PublishRoot)**/*" Exclude="$(PublishRoot)**/$(AssemblyName).*;$(PublishRoot)*/refs/**/*" />
      <PublishedFiles Include="$(PublishRoot)**/$(AssemblyName).deps.json" />
      <PublishedFiles Include="$(PublishRoot)**/$(AssemblyName).*.config" />
      <_PackageFiles Include="@(PublishedFiles)">
        <PackagePath>tasks/$(RecursiveDir)</PackagePath>
        <Visible>false</Visible>
        <BuildAction>Content</BuildAction>
      </_PackageFiles>
    </ItemGroup>
  </Target>

</Project>