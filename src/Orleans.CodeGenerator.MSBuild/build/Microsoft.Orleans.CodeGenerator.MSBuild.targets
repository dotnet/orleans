<Project TreatAsLocalProperty="
         Orleans_ArgsFile;
         Orleans_CodeGenDirectory;
         Orleans_CodeGeneratorEnabled;
         Orleans_DotNetHost;
         Orleans_FullAssembly;
         Orleans_GeneratorAssembly;
         Orleans_MSBuildIsCore;
         Orleans_OutputFileName">

  <PropertyGroup>
    <!-- Specify the assembly containing the MSBuild tasks. -->
    <Orleans_MSBuildIsCore Condition="'$(MSBuildRuntimeType)' == 'Core' or '$(OS)' != 'Windows_NT'">true</Orleans_MSBuildIsCore>

    <!-- When the MSBuild host is full-framework, we defer to PATH for dotnet -->
    <Orleans_DotNetHost Condition="'$(DotNetHost)' != ''">$(DotNetHost)</Orleans_DotNetHost>
    <Orleans_DotNetHost Condition="'$(DotNetFromPath)' == 'true' or '$(Orleans_MSBuildIsCore)' != 'true' or '$(Orleans_DotNetHost)' == ''">dotnet</Orleans_DotNetHost>

    <!-- Specify the assembly containing the code generator. -->
    <Orleans_GeneratorAssembly Condition="'$(OrleansCodeGenCoreAssembly)' != ''">$(OrleansCodeGenCoreAssembly)</Orleans_GeneratorAssembly>
    <Orleans_GeneratorAssembly Condition="'$(Orleans_GeneratorAssembly)' == ''">$(MSBuildThisFileDirectory)..\tasks\net5.0\Orleans.CodeGenerator.MSBuild.dll</Orleans_GeneratorAssembly>
  </PropertyGroup>

  <PropertyGroup>
    <OrleansCodeGenLogLevel Condition="'$(OrleansCodeGenLogLevel)' == ''">Warning</OrleansCodeGenLogLevel>
    <Orleans_CodeGenDirectory Condition="'$([System.IO.Path]::IsPathRooted($(IntermediateOutputPath)))' == 'true'">$(IntermediateOutputPath)</Orleans_CodeGenDirectory>
    <Orleans_CodeGenDirectory Condition="'$(Orleans_CodeGenDirectory)' == ''">$(ProjectDir)$(IntermediateOutputPath)</Orleans_CodeGenDirectory>
    <Orleans_OutputFileName>$(Orleans_CodeGenDirectory)$(TargetName).orleans.g.cs</Orleans_OutputFileName>
    <Orleans_CodeGeneratorEnabled Condition="'$(DesignTimeBuild)' != 'true'">true</Orleans_CodeGeneratorEnabled>
    <Orleans_ArgsFile>$(Orleans_CodeGenDirectory)$(TargetName).orleans.g.args.txt</Orleans_ArgsFile>
    <OrleansGenerateCodeDependsOn>$(OrleansGenerateCodeDependsOn);ResolveReferences;OrleansGenerateInputCache</OrleansGenerateCodeDependsOn>
  </PropertyGroup>

  <!--
    Input to the code generator should not include its output.
  -->
  <ItemGroup>
    <Orleans_CodeGenInputs Include="@(Compile);@(ReferencePath)" />
    <Orleans_CodeGenInputs Remove="$(Orleans_OutputFileName)" />
  </ItemGroup>

  <!-- Properties used to support correct, incremental builds. -->
  <PropertyGroup>
    <!--
        Since the Orleans code generator also affects the state of @(Compile) and hence the compile inputs file,
        we maintain a separate cache with Orleans' own files removed. Otherwise there would be a circular dependency
        whereby the cache updates and triggers the code generator, which triggers a cache update.
    -->
    <Orleans_CodeGenInputCache>$(IntermediateOutputPath)$(MSBuildProjectFile).OrleansCodeGenInputs.cache</Orleans_CodeGenInputCache>
  </PropertyGroup>

  <!--
      Update the file which captures the total set of all inputs to the code generator.
      This is based on the _GenerateCompileDependencyCache target from the .NET project system.
  -->
  <Target
    Name="OrleansGenerateInputCache"
    DependsOnTargets="ResolveAssemblyReferences"
    BeforeTargets="OrleansGenerateCode"
    Inputs="@(Orleans_CodeGenInputs)"
    Outputs="$(Orleans_CodeGenInputCache)">

    <Hash ItemsToHash="@(Orleans_CodeGenInputs)">
      <Output TaskParameter="HashResult" PropertyName="Orleans_UpdatedInputCacheContents" />
    </Hash>

    <WriteLinesToFile Overwrite="true" File="$(Orleans_CodeGenInputCache)" Lines="$(Orleans_UpdatedInputCacheContents)" WriteOnlyWhenDifferent="True" />

    <ItemGroup>
      <FileWrites Include="$(Orleans_CodeGenInputCache)" />
    </ItemGroup>

  </Target>

  <Target Name="OrleansGenerateCode"
          DependsOnTargets="$(OrleansGenerateCodeDependsOn)"
          AfterTargets="OrleansGenerateInputCache"
          BeforeTargets="AssignTargetPaths"
          Condition="'$(Orleans_CodeGeneratorEnabled)' == 'true'"
          Inputs="@(Compile);@(Reference);$(Orleans_CodeGenInputCache)"
          Outputs="$(Orleans_OutputFileName)">

    <ItemGroup>
      <Orleans_CodeGenArgs Include="WaitForDebugger" Condition="'$(Orleans_AttachDebugger)' == 'true'" />
      <Orleans_CodeGenArgs Include="LogLevel:$(OrleansCodeGenLogLevel)" />
      <Orleans_CodeGenArgs Include="ProjectPath:$(MSBuildProjectFullPath)"/>
      <Orleans_CodeGenArgs Include="ProjectGuid:$(ProjectGuid)"/>
      <Orleans_CodeGenArgs Include="OutputType:$(OutputType)"/>
      <Orleans_CodeGenArgs Include="TargetPath:$(TargetPath)"/>
      <Orleans_CodeGenArgs Include="CodeGenOutputFile:$(Orleans_OutputFileName)"/>
      <Orleans_CodeGenArgs Include="IdAttributes:$(OrleansIdAttributeTypes)" Condition="'$(OrleansIdAttributeTypes)' != ''"/>
      <Orleans_CodeGenArgs Include="ImmutableAttributes:$(OrleansImmutableAttributeTypes)" Condition="'$(OrleansImmutableAttributeTypes)' != ''"/>
      <Orleans_CodeGenArgs Include="GenerateSerializerAttributes:$(OrleansGenerateSerializerAttributeTypes)" Condition="'$(OrleansGenerateSerializerAttributeTypes)' != ''"/>
      <Orleans_CodeGenArgs Include="AliasAttributes:$(OrleansAliasAttributeTypes)" Condition="'$(OrleansAliasAttributeTypes)' != ''"/>
      <Orleans_CodeGenArgs Include="@(Compile -> 'Compile:%(FullPath)')"/>
      <Orleans_CodeGenArgs Include="@(ReferencePath -> 'Reference:%(FullPath)')"/>
    </ItemGroup>

    <Message Text="[Orleans.CodeGenerator] - CodeGen arguments file=$(Orleans_ArgsFile)"/>
    <WriteLinesToFile Overwrite="true" File="$(Orleans_ArgsFile)" Lines="@(Orleans_CodeGenArgs)"/>

    <!-- If building on .NET Core, use dotnet to execute the process. -->
    <Exec Command="&quot;$(Orleans_DotNetHost)&quot; &quot;$(Orleans_GeneratorAssembly)&quot; &quot;$(Orleans_ArgsFile)&quot;" Outputs="$(Orleans_OutputFileName)" />

    <ItemGroup>
      <Compile Include="$(Orleans_OutputFileName)" Condition="Exists('$(Orleans_OutputFileName)')" />
      <FileWrites Include="$(Orleans_OutputFileName)" Condition="Exists('$(Orleans_OutputFileName)')"/>
    </ItemGroup>
  </Target>

  <Target Name="OrleansIncludeCodegenOutputDuringDesignTimeBuild"
          BeforeTargets="AssignTargetPaths"
          Condition="'$(Orleans_CodeGeneratorEnabled)' != 'true' and Exists('$(Orleans_OutputFileName)')">
    <ItemGroup>
      <Compile Include="$(Orleans_OutputFileName)"/>
      <FileWrites Include="$(Orleans_OutputFileName)"/>
    </ItemGroup>
  </Target>
</Project>